KimberlingTrilinears7000 := Association["X5004" -> 
      {b*c*(a^2*S*(S^2 + SA^2 - 4*SB*SC) + a*b*c*(S^2 - 3*SB*SC)*
          (2*SW)^(1/2))}, "X5005" -> 
      {b*c*(a^2*S*(S^2 + SA^2 - 4*SB*SC) - a*b*c*(S^2 - 3*SB*SC)*
          (2*SW)^(1/2))}, "X5006" -> 
      {b*c*(a^2*(a + b)*(a + c)*(a^3 + a*b*c - b^2*c - b*c^2))}, 
     "X5007" -> {b*c*(a^2*(2*a^2 + b^2 + c^2))}, 
     "X5008" -> {b*c*(a^2*(4*a^2 + b^2 + c^2))}, 
     "X5009" -> {a*(a + b)*(a + c)*(a^2 - b*c)}, 
     "X5010" -> {2*a*(b^2 + c^2 - a^2) + a*b*c}, 
     "X5011" -> {b*c*(a*(b^3 + c^3 - a^3 + a*b*c - b^2*c - b*c^2))}, 
     "X5012" -> {b*c*(a^2*(a^4 - a^2*b^2 - a^2*c^2 - b^2*c^2))}, 
     "X5013" -> {b*c*(a^2*(3*b^2 + 3*c^2 - a^2))}, 
     "X5014" -> {b*c*(b^3 + c^3 - a^3 + a^2*b + a^2*c - a*b^2 - a*c^2)}, 
     "X5015" -> {b*c*(b^4 + c^4 - a^4 + a^2*b*c + b^3*c + b*c^3)}, 
     "X5016" -> {b*c*(b^4 + c^4 - a^4 + b^3*c + b*c^3 + a*b^2*c + 
         (Plus[a])*b*c^2)}, "X5017" -> 
      {b*c*(a^2*(b^4 + c^4 - a^4 - 2*a^2*b^2 - 2*a^2*c^2))}, 
     "X5018" -> {(a + b - c)*(a - b + c)*(b^3 + c^3 - a^3 - a*b*c)}, 
     "X5019" -> {b*c*(a^3*(a^2 + a*b + a*c + 2*b*c))}, 
     "X5020" -> {b*c*(a^2*(b^4 + c^4 - a^4 - 6*b^2*c^2))}, 
     "X5021" -> {b*c*(a^2*(b^2 + c^2 - a^2 - 2*a*b - 2*a*c - 2*b*c))}, 
     "X5022" -> {b*c*(a^2*(3*b^2 + 3*c^2 - a^2 - 2*a*b - 2*a*c - 2*b*c))}, 
     "X5023" -> {b*c*(a^2*(3*b^2 + 3*c^2 - 5*a^2))}, 
     "X5024" -> {b*c*(a^2*(5*b^2 + 5*c^2 - a^2))}, 
     "X5025" -> {b*c*(b^4 + c^4 - b^2*c^2)}, 
     "X5026" -> {b*c*((a^4 - b^2*c^2)*(b^2 + c^2 - 2*a^2))}, 
     "X5027" -> {b*c*(a^2*(b^2 - c^2)*(a^4 - b^2*c^2))}, 
     "X5028" -> {b*c*(a^2*(a^4 + 2*b^4 + 2*c^4 - a^2*b^2 - a^2*c^2))}, 
     "X5029" -> {b*c*(a^2*(b - c)*(b^2 + c^2 - a^2 - a*b - a*c + b*c))}, 
     "X5030" -> {b*c*(a^2*(2*b^2 + 2*c^2 - a^2 - a*b - a*c - b*c))}, 
     "X5031" -> {b*c*(-b^6 + 2*a^2*b^2*c^2 - c^6)}, 
     "X5032" -> {b*c*(b^2 + c^2 - 11*a^2)}, 
     "X5033" -> {b*c*(a^2*(3*a^4 - a^2*b^2 - a^2*c^2 - 4*b^2*c^2))}, 
     "X5034" -> {b*c*(a^2*(a^4 - 3*a^2*b^2 - 3*a^2*c^2 - 4*b^2*c^2))}, 
     "X5035" -> {b*c*(a^3*(a^2 + a*b + a*c + 3*b*c))}, 
     "X5036" -> {b*c*(a^2*(2*b^3 + 2*c^3 - 2*a^2*b - 2*a^2*c + a*b*c))}, 
     "X5037" -> {b*c*(a^2*(2*a^3 + b^3 + c^3 + a^2*b + a^2*c - a*b*c))}, 
     "X5038" -> {b*c*(a^2*(a^4 - 2*a^2*b^2 - 2*a^2*c^2 - 3*b^2*c^2))}, 
     "X5039" -> {b*c*(a^2*(a^4 + 3*a^2*b^2 + 3*a^2*c^2 + 2*b^2*c^2))}, 
     "X5040" -> {b*c*(a^2*(b - c)*(a^3 + a*b*c - b^2*c - b*c^2))}, 
     "X5041" -> {b*c*(a^2*(2*a^2 + 3*b^2 + 3*c^2))}, 
     "X5042" -> {b*c*(a^3*(a^2 + a*b + a*c + 4*b*c))}, 
     "X5043" -> {b*c*(a^2*(2*b^3 + 2*c^3 - 2*a^2*b - 2*a^2*c - 3*a*b*c))}, 
     "X5044" -> {b*c*(a*(b^3 + c^3 - a^2*b - a^2*c + 2*a*b*c + 3*b^2*c + 
          3*b*c^2))}, "X5045" -> 
      {b*c*(a*(b^3 + c^3 - a^2*b - a^2*c - 6*a*b*c - b^2*c - b*c^2))}, 
     "X5046" -> {b*c*(b^4 + c^4 - a^4 + a^2*b*c + a*b^2*c + a*b*c^2 - 
         2*b^2*c^2)}, "X5047" -> 
      {b*c*(a*(a^3 - a*b^2 - a*c^2 - 3*a*b*c - 3*b^2*c - 3*b*c^2))}, 
     "X5048" -> {b*c*(a*(b + c - a)*(3*b^2 + 3*c^2 - 2*a^2 + a*b + a*c - 
          6*b*c))}, "X5049" -> {a^2*b - b^3 + a^2*c + 10*a*b*c + b^2*c + 
        b*c^2 - c^3}, "X5050" -> 
      {b*c*(a^2*(3*a^4 + b^4 + c^4 - 4*a^2*b^2 - 4*a^2*c^2 - 6*b^2*c^2))}, 
     "X5051" -> {b*c*((b + c)*(a^3 + b^3 + c^3 + a^2*b + a^2*c + a*b^2 + 
          a*c^2 + a*b*c))}, "X5052" -> 
      {b*c*(a^2*(3*a^2*b^2 + 3*a^2*c^2 + 2*b^2*c^2 - b^4 - c^4))}, 
     "X5053" -> {b*c*(a^2*(a^3 - a*b^2 - a*c^2 + 3*a*b*c - b^2*c - b*c^2))}, 
     "X5054" -> {b*c*(5*a^4 + 2*b^4 + 2*c^4 - 7*a^2*b^2 - 7*a^2*c^2 - 
         4*b^2*c^2)}, "X5055" -> {b*c*(a^4 + 4*b^4 + 4*c^4 - 5*a^2*b^2 - 
         5*a^2*c^2 - 8*b^2*c^2)}, "X5056" -> 
      {b*c*(a^4 + 5*b^4 + 5*c^4 - 6*a^2*b^2 - 6*a^2*c^2 - 10*b^2*c^2)}, 
     "X5057" -> {b*c*(b^3 + c^3 - a^3 + a*b*c - b^2*c - b*c^2)}, 
     "X5058" -> {b*c*(a^2*(a^2 - ((b + c - a)*(c + a - b)*(a + b - c)*
            (a + b + c))^(1/2)))}, "X5059" -> 
      {b*c*(5*b^4 + 5*c^4 - 11*a^4 + 6*a^2*b^2 + 6*a^2*c^2 - 10*b^2*c^2)}, 
     "X5060" -> {b*c*(a^2*(a + b)*(a + c)*(a^3 + b^3 + c^3 - 2*a^2*b - 
          2*a^2*c + a*b*c))}, "X5061" -> 
      {b*c*(a*(a + b - c)*(a - b + c)*(a^3 + a*b*c - b^2*c - b*c^2))}, 
     "X5062" -> {b*c*(a^2*(a^2 + ((b + c - a)*(c + a - b)*(a + b - c)*
            (a + b + c))^(1/2)))}, "X5063" -> 
      {b*c*(a^4*(a^4 + b^4 + c^4 - 2*a^2*b^2 - 2*a^2*c^2 + 4*b^2*c^2))}, 
     "X5064" -> {b*c*((a^2 - b^2 + c^2)*(a^2 + b^2 - c^2)*
         (a^2 + 2*b^2 + 2*c^2))}, "X5065" -> 
      {b*c*(a^4*(a^4 + b^4 + c^4 - 2*a^2*b^2 - 2*a^2*c^2 + 6*b^2*c^2))}, 
     "X5066" -> {b*c*(7*b^4 + 7*c^4 - 2*a^4 - 5*a^2*b^2 - 5*a^2*c^2 - 
         14*b^2*c^2)}, "X5067" -> {b*c*(3*a^4 + 5*b^4 + 5*c^4 - 8*a^2*b^2 - 
         8*a^2*c^2 - 10*b^2*c^2)}, "X5068" -> 
      {b*c*(7*b^4 + 7*c^4 - a^4 - 6*a^2*b^2 - 6*a^2*c^2 - 14*b^2*c^2)}, 
     "X5069" -> {b*c*(a^2*(a*b^2 + a*c^2 - a*b*c + b^3 + b^2*c + b*c^2 + 
          c^3))}, "X5070" -> {b*c*(Cot[angleB]*Cot[angleC] + 7)}, 
     "X5071" -> {b*c*(a^4 + 7*b^4 + 7*c^4 - 8*a^2*b^2 - 8*a^2*c^2 - 
         14*b^2*c^2)}, "X5072" -> {b*c*(6*b^4 + 6*c^4 - a^4 - 5*a^2*b^2 - 
         5*a^2*c^2 - 12*b^2*c^2)}, "X5073" -> 
      {b*c*(4*b^4 + 4*c^4 - 7*a^4 + 3*a^2*b^2 + 3*a^2*c^2 - 8*b^2*c^2)}, 
     "X5074" -> {b*c*(a^3*b + a^3*c - 2*a^2*b*c - b^4 + b^3*c + b*c^3 - 
         c^4)}, "X5075" -> {b*c*(a^2*(b - c)*(a^3 + b^3 + c^3 - 2*a^2*b - 
          2*a^2*c + a*b*c))}, "X5076" -> 
      {b*c*(6*b^4 + 6*c^4 - 7*a^4 + a^2*b^2 + a^2*c^2 - 12*b^2*c^2)}, 
     "X5077" -> {b*c*(4*b^4 + 4*c^4 - 5*a^4 + 5*a^2*b^2 + 5*a^2*c^2 - 
         4*b^2*c^2)}, "X5078" -> 
      {b*c*(a^2*(b^4 + c^4 - a^4 - 3*a^2*b*c + a*b^2*c + a*b*c^2))}, 
     "X5079" -> {b*c*(a^4 + 6*b^4 + 6*c^4 - 7*a^2*b^2 - 7*a^2*c^2 - 
         12*b^2*c^2)}, "X5080" -> {b*c*(b^4 + c^4 - a^4 - a^2*b*c + a*b^2*c + 
         a*b*c^2 - 2*b^2*c^2)}, "X5081" -> 
      {b*c*((b + c - a)*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (b^2 + c^2 - a^2 - b*c))}, "X5082" -> 
      {b*c*(b^4 + c^4 - a^4 + 4*a^2*b*c - 4*a*b^2*c - 4*a*b*c^2 - 
         2*b^2*c^2)}, "X5083" -> {(a + b - c)*(a - b + c)*
        (b^3 + c^3 + a^2*b + a^2*c - 2*a*b^2 - 2*a*c^2)}, 
     "X5084" -> {b*c*(b^4 + c^4 - a^4 + 4*a^2*b*c + 4*a*b^2*c + 4*a*b*c^2 - 
         2*b^2*c^2)}, "X5085" -> 
      {b*c*(a^2*(b^4 + c^4 - 3*a^4 + 2*a^2*b^2 + 2*a^2*c^2 + 6*b^2*c^2))}, 
     "X5086" -> {b*c*(b^4 + c^4 - a^4 + a^3*b + a^3*c - a^2*b*c - a*b^3 - 
         a*c^3 - 2*b^2*c^2)}, "X5087" -> 
      {b*c*(a^2*b + a^2*c + a*b^2 + a*c^2 - 4*a*b*c - 2*b^3 + 2*b^2*c + 
         2*b*c^2 - 2*c^3)}, "X5088" -> 
      {b*c*(a^4 - a^2*b^2 - a^2*c^2 + a^2*b*c - b^3*c - b*c^3 + 2*b^2*c^2)}, 
     "X5089" -> {b*c*(a*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (b^2 + c^2 - a*b - a*c))}, "X5090" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^3 + b^3 + c^3 + b^2*c + 
          b*c^2))}, "X5091" -> 
      {b*c*(a*(a^4 - a^3*b - a^3*c + a^2*b*c + b^3*c + b*c^3 - 2*b^2*c^2))}, 
     "X5092" -> {b*c*(a^2*(b^4 + c^4 - 2*a^4 + a^2*b^2 + a^2*c^2 + 
          4*b^2*c^2))}, "X5093" -> 
      {b*c*(a^2*(3*a^4 + 5*b^4 + 5*c^4 - 8*a^2*b^2 - 8*a^2*c^2 - 
          6*b^2*c^2))}, "X5094" -> 
      {b*c*((2*b^2 + 2*c^2 - a^2)*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2))}, 
     "X5095" -> {b*c*((b^2 + c^2 - 2*a^2)^2*(a^2 + b^2 - c^2)*
         (a^2 - b^2 + c^2))}, "X5096" -> 
      {a*(b^4 + c^4 - a^4 - a^2*b*c - a*b^2*c - a*b*c^2 + 2*b^2*c^2)}, 
     "X5097" -> {b*c*(a^2*(2*a^4 + 3*b^4 + 3*c^4 - 5*a^2*b^2 - 5*a^2*c^2 - 
          4*b^2*c^2))}, "X5098" -> {a*(b - c)*((-a)*b^3 + b^4 + 2*a^2*b*c - 
         a*b^2*c - a*b*c^2 - a*c^3 + c^4)}, 
     "X5099" -> {b*c*((b^2 - c^2)^2*(b^2 + c^2 - 2*a^2)*(b^4 + c^4 - a^4 - 
          b^2*c^2))}, "X5100" -> {b*c*(b^4 + c^4 - a^4 + 3*a^2*b*c - 
         2*a*b^2*c - 2*a*b*c^2 + b^3*c + b*c^3)}, 
     "X5101" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^2 + b^2 + c^2 - a*b - a*c))}, 
     "X5102" -> {b*c*(a^2*(3*a^4 + 7*b^4 + 7*c^4 - 10*a^2*b^2 - 10*a^2*c^2 - 
          6*b^2*c^2))}, "X5103" -> {b*c*(b^6 + c^6 - a^4*b^2 - a^4*c^2 + 
         a^2*b^4 + a^2*c^4 - 2*a^2*b^2*c^2)}, 
     "X5104" -> {a*(2*b^4 + 2*c^4 - a^4 - 2*a^2*b^2 - 2*a^2*c^2 + b^2*c^2)}, 
     "X5105" -> {b*c*(a^2*(b^3 + c^3 + a^2*b + a^2*c + 2*a*b^2 + 2*a*c^2 + 
          a*b*c + 2*b^2*c + 2*b*c^2))}, "X5106" -> 
      {b*c*(a^2*(a^4*b^2 + a^4*c^2 - 2*a^2*b^4 - 2*a^2*c^4 + b^4*c^2 + 
          b^2*c^4))}, "X5107" -> 
      {b*c*(a^2*(2*a^4 + 5*b^4 + 5*c^4 - 5*a^2*b^2 - 5*a^2*c^2 - 
          2*b^2*c^2))}, "X5108" -> {b*c*(a^6 - 2*a^4*b^2 - 2*a^4*c^2 + 
         5*a^2*b^2*c^2 - b^4*c^2 - b^2*c^4)}, 
     "X5109" -> {a*(b^3 + c^3 + a^2*b + a^2*c + 2*a*b^2 + 2*a*c^2 + 2*b^2*c + 
         2*b*c^2)}, "X5110" -> {a*(b^3 + c^3 - a^3 + 2*a*b^2 + 2*a*c^2 + 
         a*b*c + 2*b^2*c + 2*b*c^2)}, "X5111" -> 
      {a*(a^4 + 2*b^4 + 2*c^4 - 2*a^2*b^2 - 2*a^2*c^2 - b^2*c^2)}, 
     "X5112" -> {b*c*((b^4 + c^4 - a^2*b^2 - a^2*c^2)*(b^4 + c^4 - 3*a^4 - 
          2*b^2*c^2))}, "X5113" -> {a*(b^2 - c^2)*(b^4 + c^4 - a^4 - 
         a^2*b^2 - a^2*c^2 + b^2*c^2)}, "X5114" -> 
      {a*(a^3 - a^2*b - 2*a*b^2 - a^2*c - 2*b^2*c - 2*a*c^2 - 2*b*c^2)}, 
     "X5115" -> {a*(a^3 + 2*a^2*b + 2*a^2*c + a*b^2 + a*c^2 + 4*a*b*c + 
         b^2*c + b*c^2)}, "X5116" -> 
      {a*(b^4 + c^4 - a^4 + a^2*b^2 + a^2*c^2 + 3*b^2*c^2)}, 
     "X5117" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(b^2 + c^2 - b*c)*
         (b^2 + c^2 + b*c))}, "X5118" -> {a*(a^2 - b^2)*(a^2 - c^2)*
        (a^2*b^2 + a^2*c^2 - 2*b^2*c^2)}, 
     "X5119" -> {b*c*(a*(b^3 + c^3 - a^3 - a^2*b - a^2*c + a*b^2 + a*c^2 + 
          4*a*b*c - b^2*c - b*c^2))}, "X5120" -> 
      {b*c*(a^2*(b^3 + c^3 - a^3 - a^2*b - a^2*c + a*b^2 + a*c^2 - 4*a*b*c + 
          b^2*c + b*c^2))}, "X5121" -> 
      {b*c*(a^2*b + a^2*c + 2*a*b^2 + 2*a*c^2 - 6*a*b*c + b^2*c + b*c^2 - 
         b^3 - c^3)}, "X5122" -> 
      {b*c*(a*(b^3 + c^3 - 4*a^3 - a^2*b - a^2*c + 4*a*b^2 + 4*a*c^2 - 
          2*a*b*c - b^2*c - b*c^2))}, "X5123" -> 
      {b*c*((b + c - a)*(2*b^3 + 2*c^3 - a^2*b - a^2*c + a*b^2 + a*c^2 - 
          2*b^2*c - 2*b*c^2))}, "X5124" -> 
      {b*c*(a^2*(b^3 + c^3 - a^3 - a^2*b - a^2*c + a*b^2 + a*c^2 - a*b*c + 
          b^2*c + b*c^2))}, "X5125" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(b^3 + c^3 - a^2*b - a^2*c - 
          a*b*c))}, "X5126" -> {b*c*(a*(4*a^3 + b^3 + c^3 - a^2*b - a^2*c - 
          4*a*b^2 - 4*a*c^2 + 6*a*b*c - b^2*c - b*c^2))}, 
     "X5127" -> {b*c*(a^2*(a + b)*(a + c)*(a^3 + b^3 + c^3 - a^2*b - a^2*c - 
          a*b^2 - a*c^2 - a*b*c + b^2*c + b*c^2))}, 
     "X5128" -> {b*c*(a*(3*b^3 + 3*c^3 - 3*a^3 - 3*a^2*b - 3*a^2*c + 
          3*a*b^2 + 3*a*c^2 + 2*a*b*c - 3*b^2*c - 3*b*c^2))}, 
     "X5129" -> {b*c*(b^4 + c^4 - 3*a^4 + 2*a^2*b^2 + 2*a^2*c^2 + 8*a^2*b*c + 
         8*a*b^2*c + 8*a*b*c^2 - 2*b^2*c^2)}, 
     "X5130" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^3 + b^3 + c^3 + 2*a*b*c + b^2*c + b*c^2))}, 
     "X5131" -> {b*c*(a*(b^3 + c^3 - 3*a^3 - a^2*b - a^2*c + 3*a*b^2 + 
          3*a*c^2 - a*b*c - b^2*c - b*c^2))}, 
     "X5132" -> {b*c*(a^2*(a^3*b + a^3*c - a*b^3 - a*c^3 - 2*a*b^2*c - 
          2*a*b*c^2 - b^3*c - b*c^3))}, "X5133" -> 
      {b*c*(b^6 + c^6 - a^4*b^2 - a^4*c^2 - 2*a^2*b^2*c^2 - b^4*c^2 - 
         b^2*c^4)}, "X5134" -> {b*c*(b^4 + c^4 - a^4 - a^3*b - a^3*c + 
         a^2*b^2 + a^2*c^2 + a^2*b*c - 2*b^2*c^2)}, 
     "X5135" -> {b*c*(a^2*(a^4 - a^2*b^2 - a^2*c^2 - a^2*b*c - a*b^2*c - 
          a*b*c^2 - 2*b^2*c^2))}, "X5136" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^3 - a*b^2 - a*c^2 - 
          b^2*c - b*c^2))}, "X5137" -> 
      {b*c*(a*(a^5 - a^3*b^2 - a^3*c^2 + a^3*b*c + b^4*c + b*c^4 - b^3*c^2 - 
          b^2*c^3))}, "X5138" -> 
      {b*c*(a^2*(a^4 - a^2*b^2 - a^2*c^2 - 2*a^2*b*c - 2*a*b^2*c - 
          2*a*b*c^2 - 2*b^2*c^2))}, "X5139" -> 
      {b*c*((b^2 - c^2)^2*(b^2 + c^2 - 3*a^2)*(a^2 + b^2 - c^2)*
         (a^2 - b^2 + c^2))}, "X5140" -> 
      {a*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^2*b^2 + a^2*c^2 + b^4 - 
         4*b^2*c^2 + c^4)}, "X5141" -> 
      {b*c*(2*b^4 + 2*c^4 - 2*a^2*b^2 - 2*a^2*c^2 - a^2*b*c - a*b^2*c - 
         a*b*c^2 - 4*b^2*c^2)}, "X5142" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a*b^2 + a*c^2 + a*b*c + 
          b^3 + b^2*c + b*c^2 + c^3))}, "X5143" -> 
      {b*c*(a^2*(a^3*b + a^3*c - a^2*b*c - a*b^3 - a*c^3 + a*b^2*c + 
          a*b*c^2 - b^2*c^2))}, "X5144" -> 
      {b*c*(a*(2*a^4 - 2*a*b^3 - 2*a*c^3 + a*b^2*c + a*b*c^2 - b^3*c - 
          b*c^3 + 2*b^2*c^2))}, "X5145" -> 
      {b*c*(a^2*(a^2*b^2 + a^2*c^2 + a*b^3 + a*c^3 + a*b^2*c + a*b*c^2 + 
          b^3*c + b*c^3 + b^2*c^2))}, "X5146" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^3 + b^3 + c^3 - a*b*c - 
          b^2*c - b*c^2))}, "X5147" -> 
      {b*c*(a^2*(b + c)*(a^4 - a^2*b^2 - a^2*c^2 - a*b^3 - a*c^3 + a*b^2*c + 
          a*b*c^2 + b^2*c^2))}, "X5148" -> 
      {a*(b + c - a)*(b^4 + c^4 + a^2*b^2 + a^2*c^2 - 4*a^2*b*c + 2*b^3*c + 
         2*b*c^3 - 4*b^2*c^2)}, "X5149" -> 
      {b*c*(a^8 - a^4*b^2*c^2 - a^2*b^4*c^2 - a^2*b^2*c^4 + b^6*c^2 + 
         b^2*c^6)}, "X5150" -> {b*c*(a*(a^5 - a^3*b^2 - a^3*c^2 + a^3*b*c - 
          2*a*b^2*c^2 + b^3*c^2 + b^2*c^3))}, 
     "X5151" -> {b*c*((b + c - 2*a)*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a*b + a*c + b^2 + c^2 - 4*b*c))}, 
     "X5152" -> {b*c*(a^8 - a^6*b^2 - a^6*c^2 + a^4*b^4 + a^4*c^4 - a^2*b^6 - 
         a^2*c^6 + b^4*c^4)}, "X5153" -> 
      {b*c*(a^2*(b^3 + c^3 + a^2*b + a^2*c + 2*a*b^2 + 2*a*c^2 + 2*a*b*c + 
          2*b^2*c + 2*b*c^2))}, "X5154" -> 
      {b*c*(2*b^4 + 2*c^4 - 2*a^2*b^2 - 2*a^2*c^2 + a^2*b*c + a*b^2*c + 
         a*b*c^2 - 4*b^2*c^2)}, "X5155" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^3 + b^3 + c^3 + 4*a*b*c + 
          b^2*c + b*c^2))}, "X5156" -> 
      {b*c*(a^2*(a^3*b + a^3*c + a^2*b^2 + a^2*c^2 + 2*a^2*b*c + a*b^2*c + 
          a*b*c^2 + b^2*c^2))}, "X5157" -> 
      {a*(a^6 - a^2*b^4 - 2*a^2*b^2*c^2 - 2*b^4*c^2 - a^2*c^4 - 2*b^2*c^4)}, 
     "X5158" -> {b*c*(a^2*(b^2 + c^2 - a^2)*(2*b^4 + 2*c^4 - a^4 - a^2*b^2 - 
          a^2*c^2 - 4*b^2*c^2))}, "X5159" -> 
      {b*c*((b^2 + c^2 - a^2)*(3*b^4 + 3*c^4 - 2*a^4 + a^2*b^2 + a^2*c^2 - 
          6*b^2*c^2))}, "X5160" -> 
      {b*c*(a*(b + c - a)*(2*b^4 + 2*c^4 - 2*a^4 + 2*a^2*b*c - b^3*c - 
          b*c^3 - 2*b^2*c^2))}, "X5161" -> 
      {b*c*(a^2*(a^4 + a^3*b + a^3*c + a^2*b*c - a*b^2*c - a*b*c^2 - b^3*c - 
          b*c^3))}, "X5162" -> {a*(b^6 + c^6 - a^6 - a^2*b^4 - a^2*c^4 - 
         a^2*b^2*c^2 + b^4*c^2 + b^2*c^4)}, 
     "X5163" -> {a*(a^3*b + a^3*c - 2*a^2*b*c - 2*a*b^3 - 2*a*c^3 + a*b^2*c + 
         a*b*c^2 + b^3*c + b*c^3)}, "X5164" -> 
      {a*(b + c)*(b^4 + c^4 - a^3*b - a^3*c - a^2*b^2 - a^2*c^2 + a*b^3 + 
         a*c^3)}, "X5165" -> {a*(b^3 + c^3 - 2*a^2*b - 2*a^2*c - a*b^2 - 
         a*c^2 - 3*a*b*c - b^2*c - b*c^2)}, 
     "X5166" -> {a*(a^6 + b^6 + c^6 - 3*a^4*b^2 - 3*a^4*c^2 - 3*a^2*b^4 - 
         3*a^2*c^4 + 9*a^2*b^2*c^2)}, "X5167" -> 
      {a*(a^4*b^4 + a^4*c^4 - a^2*b^6 - a^2*c^6 + b^6*c^2 + b^2*c^6 - 
         2*b^4*c^4)}, "X5168" -> {a*(b^3 + c^3 - 2*a^3 + a^2*b + a^2*c + 
         a*b^2 + a*c^2 - 2*b^2*c - 2*b*c^2)}, 
     "X5169" -> {b*c*(b^6 + c^6 - a^4*b^2 - a^4*c^2 - a^2*b^2*c^2 - b^4*c^2 - 
         b^2*c^4)}, "X5170" -> {a*(a + b)*(a + c)*(2*a^3 + b^3 + c^3 - 
         2*a^2*b - 2*a^2*c + 2*a*b*c - b^2*c - b*c^2)}, 
     "X5171" -> {b*c*(a^2*(a^6 - 4*a^4*b^2 - 4*a^4*c^2 + 3*a^2*b^4 + 
          3*a^2*c^4 + 2*b^4*c^2 + 2*b^2*c^4))}, 
     "X5172" -> {a*(a + b - c)*(a - b + c)*(a^3 + b^3 + c^3 - a^2*b - a^2*c - 
         a*b^2 - a*c^2 - a*b*c + b^2*c + b*c^2)}, 
     "X5173" -> {b*c*(a*(a + b - c)*(a - b + c)*(a^2*b + a^2*c - 2*a*b^2 - 
          2*a*c^2 - 2*a*b*c + b^3 - b^2*c - b*c^2 + c^3))}, 
     "X5174" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^3 + b^3 + c^3 - a^2*b - a^2*c - a*b^2 - a*c^2 - a*b*c))}, 
     "X5175" -> {b*c*(3*a^4 - 2*a^3*b + 2*a*b^3 - 3*b^4 - 2*a^3*c + 
         2*a*b^2*c + 2*a*b*c^2 + 6*b^2*c^2 + 2*a*c^3 - 3*c^4)}, 
     "X5176" -> {b*c*(b^4 + c^4 - a^4 + a^3*b + a^3*c - 3*a^2*b*c - a*b^3 - 
         a*c^3 + 2*a*b^2*c + 2*a*b*c^2 - 2*b^2*c^2)}, 
     "X5177" -> {b*c*(3*b^4 + 3*c^4 - a^4 - 2*a^2*b^2 - 2*a^2*c^2 - 
         4*a^2*b*c - 4*a*b^2*c - 4*a*b*c^2 - 6*b^2*c^2)}, 
     "X5178" -> {b*c*(b^4 + c^4 - a^4 + a^3*b + a^3*c + a^2*b*c - a*b^3 - 
         a*c^3 - 2*a*b^2*c - 2*a*b*c^2 - 2*b^2*c^2)}, 
     "X5179" -> {b*c*(a^3*b - a^2*b^2 + a*b^3 - b^4 + a^3*c - a*b^2*c - 
         a^2*c^2 - a*b*c^2 + 2*b^2*c^2 + a*c^3 - c^4)}, 
     "X5180" -> {b*c*(b^4 + c^4 - a^4 - 2*a^3*b - 2*a^3*c + 3*a^2*b*c + 
         2*a*b^3 + 2*a*c^3 - a*b^2*c - a*b*c^2 - 2*b^2*c^2)}, 
     "X5181" -> {b*c*((b^2 + c^2 - 2*a^2)*(b^6 + c^6 - a^4*b^2 - a^4*c^2 + 
          2*a^2*b^2*c^2 - b^4*c^2 - b^2*c^4))}, 
     "X5182" -> {b*c*(3*a^6 - 2*a^4*b^2 + a^2*b^4 - 2*a^4*c^2 - 
         3*a^2*b^2*c^2 + b^4*c^2 + a^2*c^4 + b^2*c^4)}, 
     "X5183" -> {b*c*(a*(3*b^3 + 3*c^3 - 2*a^3 - 3*a^2*b - 3*a^2*c + 
          2*a*b^2 + 2*a*c^2 + 4*a*b*c - 3*b^2*c - 3*b*c^2))}, 
     "X5184" -> {b*c*(a*(b^4 + c^4 - a^4 - 2*a^3*b - 2*a^3*c + a*b^3 + 
          a*c^3 + a*b^2*c + a*b*c^2 - b^2*c^2))}, 
     "X5185" -> {a*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^2*b^2 + a^2*c^2 - 
         2*a*b^3 - 2*a*c^3 + b^4 + c^4)}, 
     "X5186" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^4*b^2 + a^4*c^2 - 4*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4))}, 
     "X5187" -> {b*c*(3*b^4 + 3*c^4 - a^4 - 2*a^2*b^2 - 2*a^2*c^2 + 
         2*a^2*b*c + 2*a*b^2*c + 2*a*b*c^2 - 6*b^2*c^2)}, 
     "X5188" -> {a*(3*a^4*b^2 - 2*a^2*b^4 - b^6 + 3*a^4*c^2 - 3*b^4*c^2 - 
         2*a^2*c^4 - 3*b^2*c^4 - c^6)}, "X5189" -> 
      {b*c*(b^6 + c^6 - a^6 - a^4*b^2 - a^4*c^2 + a^2*b^4 + a^2*c^4 + 
         a^2*b^2*c^2 - b^4*c^2 - b^2*c^4)}, 
     "X5190" -> {b*c*((b + c - a)*(b - c)^2*(a^2 + b^2 - c^2)*
         (a^2 - b^2 + c^2)*(b^3 + c^3 - a^2*b - a^2*c - a*b*c))}, 
     "X5191" -> {b*c*(a^2*(b^6 + c^6 - 2*a^6 + 2*a^4*b^2 + 2*a^4*c^2 - 
          a^2*b^4 - a^2*c^4 - b^4*c^2 - b^2*c^4))}, 
     "X5192" -> {b*c*(a^4 + a^3*b + a^3*c + a^2*b^2 + a^2*c^2 + a*b^3 + 
         a*c^3 + b^3*c + b*c^3 + 2*b^2*c^2)}, 
     "X5193" -> {b*c*(a^2*(a + b - c)*(a - b + c)*(a^3 + b^3 + c^3 - a^2*b - 
          a^2*c - a*b^2 - a*c^2 + 5*a*b*c - 2*b^2*c - 2*b*c^2))}, 
     "X5194" -> {b*c*(a^2*(a + b - c)*(a - b + c)*(a^2*b^2 + a^2*c^2 + 
          4*a^2*b*c + b^4 - 2*b^3*c - 4*b^2*c^2 - 2*b*c^3 + c^4))}, 
     "X5195" -> {b*c*(b^4 + c^4 - a^4 - a^3*b - a^3*c + 3*a^2*b*c + a*b^3 + 
         a*c^3 - a*b^2*c - a*b*c^2 - b^3*c - b*c^3)}, 
     "X5196" -> {b*c*((a + b)*(a + c)*(b^4 + c^4 - a^4 - a^3*b - a^3*c + 
          a^2*b^2 + a^2*c^2 + a^2*b*c - 2*b^2*c^2))}, 
     "X5197" -> {a*(a^4 - a^2*b^2 + a^2*b*c - a*b^2*c - b^3*c - a^2*c^2 - 
         a*b*c^2 + b^2*c^2 - b*c^3)}, "X5198" -> 
      {b*c*(a^2*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^4 + b^4 + c^4 - 
          2*a^2*b^2 - 2*a^2*c^2 - 10*b^2*c^2))}, 
     "X5199" -> {b*c*((b + c - a)*(3*b^3 + 3*c^3 - 2*a^3 + a^2*b + a^2*c - 
          2*a*b^2 - 2*a*c^2 + 4*a*b*c - 3*b^2*c - 3*b*c^2))}, 
     "X5200" -> {b*c*((S + a^2)/SA)}, "X5201" -> 
      {b*c*(a^2*(a^4*b^2 + a^4*c^2 - a^2*b^4 - a^2*c^4 + 2*a^2*b^2*c^2 - 
          b^4*c^2 - b^2*c^4))}, "X5202" -> 
      {b*c*(a^2*(b + c)*(a^5 - a^3*b^2 - a^3*c^2 + a*b^2*c^2 - b^4*c + 
          b^3*c^2 + b^2*c^3 - b*c^4))}, "X5203" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(a^2 + b^2 - 3*c^2)*
         (a^2 - 3*b^2 + c^2)*(2*a^2 - b^2 - c^2))}, 
     "X5204" -> {b*c*(a^2*(3*b^2 + 3*c^2 - 3*a^2 - 2*b*c))}, 
     "X5205" -> {b*c*(a^3 - a^2*b - a^2*c + 3*a*b*c - b^2*c - b*c^2)}, 
     "X5206" -> {b*c*(a^2*(2*b^2 + 2*c^2 - 3*a^2))}, 
     "X5207" -> {b*c*(b^6 + c^6 - a^6 - a^2*b^2*c^2)}, 
     "X5208" -> {b*c*(a*(a + b)*(a + c)*(b^3 + c^3 - a*b^2 - a*c^2 - 
          a*b*c))}, "X5209" -> {b^2*c^2*(a + b)*(a + c)*
        (a^3 + a*b*c - b^2*c - b*c^2)}, "X5210" -> 
      {b*c*(a^2*(5*b^2 + 5*c^2 - 7*a^2))}, 
     "X5211" -> {b*c*(b^3 + c^3 - a^3 - 2*a*b^2 - 2*a*c^2 + 3*a*b*c)}, 
     "X5212" -> {b*c*(b^3 + c^3 - 5*a^2*b - 5*a^2*c + 6*a*b*c + b^2*c + 
         b*c^2)}, "X5213" -> {b*c*(a*(b + c)^2*(a^2 - a*b + a*c - b^2)*
         (a^2 + a*b - a*c - c^2))}, "X5214" -> 
      {b*c*((a + b)*(a + c)*(b - c)*(a^2 + 2*b^2 + 2*c^2 - a*b - a*c + 
          4*b*c))}, "X5215" -> {b*c*(10*a^4 + 4*b^4 + 4*c^4 - 7*a^2*b^2 - 
         7*a^2*c^2 - 4*b^2*c^2)}, "X5216" -> 
      {b*c*(a^2*(a + b)*(a + c)*(b - c)*(2*b^2 + 2*c^2 + 3*b*c))}, 
     "X5217" -> {b*c*(a^2*(3*b^2 + 3*c^2 - 3*a^2 + 2*b*c))}, 
     "X5218" -> {b*c*((b + c - a)*(b^2 + c^2 - 3*a^2 - 2*b*c))}, 
     "X5219" -> {b*c*((2*b + 2*c - a)/(b + c - a))}, 
     "X5220" -> {2*b^2 + 2*c^2 - a^2 - a*b - a*c + 2*b*c}, 
     "X5221" -> {b*c*(a*((2*b + 2*c + a)/(b + c - a)))}, 
     "X5222" -> {b*c*(3*a^2 + (b - c)^2)}, 
     "X5223" -> {b*c*(a*(3*b^2 + 3*c^2 - a^2 - 2*a*b - 2*a*c + 2*b*c))}, 
     "X5224" -> {b*c*(b^2 + c^2 + b*c + c*a + a*b)}, 
     "X5225" -> {b*c*(3*b^4 + 3*c^4 - 3*a^4 + 4*a^2*b*c - 6*b^2*c^2)}, 
     "X5226" -> {b*c*((3*b + 3*c - a)/(b + c - a))}, 
     "X5227" -> {b*c*(a*(b^2 + c^2 - a^2)*(a^2 + b^2 + c^2 + 2*b*c))}, 
     "X5228" -> {b*c*(a*((a^2 - a*b - a*c - 2*b*c)/(b + c - a)))}, 
     "X5229" -> {b*c*(3*b^4 + 3*c^4 - 3*a^4 - 4*a^2*b*c - 6*b^2*c^2)}, 
     "X5230" -> {b*c*(a^4 + b^4 + c^4 + 2*a^3*b + 2*a^3*c - 2*b^2*c^2)}, 
     "X5231" -> {b*c*((b + c - a)*(2*b^2 + 2*c^2 - a^2 - a*b - a*c - 
          4*b*c))}, "X5232" -> {b*c*(3*b^2 + 3*c^2 - a^2 + 2*a*b + 2*a*c + 
         2*b*c)}, "X5233" -> {b*c*((b + c - a)*(b^2 + c^2 + a*b + a*c - 
          b*c))}, "X5234" -> {b*c*(a*(b + c - a)*(3*a^2 + b^2 + c^2 + 4*a*b + 
          4*a*c + 6*b*c))}, "X5235" -> {b*c*((2*b + 2*c - a)/(b + c))}, 
     "X5236" -> {b*c*((b^2 + c^2 - a*b - a*c)/((b + c - a)*
          (b^2 + c^2 - a^2)))}, "X5237" -> 
      {b*c*(a^2*(5*b^2 + 5*c^2 - 5*a^2 - 12^(1/2)*S))}, 
     "X5238" -> {a*(5*b^2 + 5*c^2 - 5*a^2 + 12^(1/2)*S)}, 
     "X5239" -> {a^2 - b^2 - 2*b*c - c^2 + 2*Sqrt[3]*S}, 
     "X5240" -> {a^2 - b^2 - 2*b*c - c^2 - 2*Sqrt[3]*S}, 
     "X5241" -> {b*c*(a*b^2 + b^3 + 6*a*b*c + b^2*c + a*c^2 + b*c^2 + c^3)}, 
     "X5242" -> {b*c*(a^2 - a*b - a*c - Sqrt[12]*S)}, 
     "X5243" -> {b*c*(a^2 - a*b - a*c + Sqrt[12]*S)}, 
     "X5244" -> {b*c*((b + c)*((2*a^2 + b^2 + c^2 + a*b + a*c)/
          (b + c - a)))}, "X5245" -> 
      {b*c*((b + c - a)*(a^2 + a*b + a*c + Sqrt[12]*S))}, 
     "X5246" -> {b*c*((b + c - a)*(a^2 + a*b + a*c - 12^(1/2)*S))}, 
     "X5247" -> {b*c*(a*(a^3 + a^2*b + a^2*c + a*b*c - b^2*c - b*c^2))}, 
     "X5248" -> {b*c*(a*(a^3 - a*b^2 - a*c^2 - 2*a*b*c - b^2*c - b*c^2))}, 
     "X5249" -> {b*c*(b^3 + c^3 - a^2*b - a^2*c - 2*a*b*c - b^2*c - b*c^2)}, 
     "X5250" -> {b*c*(a*(b + c - a)*(a^2 + b^2 + c^2 + 2*a*b + 2*a*c))}, 
     "X5251" -> {b*c*(a*(a^3 - a*b^2 - a*c^2 - a*b*c - 2*b^2*c - 2*b*c^2))}, 
     "X5252" -> {b*c*((a^2 + b^2 + c^2 - a*b - a*c + 2*b*c)/(b + c - a))}, 
     "X5253" -> {b*c*(a*(a^3 - a*b^2 - a*c^2 + 3*a*b*c + b^2*c + b*c^2))}, 
     "X5254" -> {b*c*((b^2 - c^2)^2 + a^2*(b^2 + c^2))}, 
     "X5255" -> {b*c*(a*(a^3 + a^2*b + a^2*c - a*b*c + b^2*c + b*c^2))}, 
     "X5256" -> {(a + b + c)^2 - 2*b*c}, "X5257" -> 
      {b*c*((b + c)*(3*a + b + c))}, "X5258" -> 
      {b*c*(a*(a^3 - a*b^2 - a*c^2 + a*b*c - 2*b^2*c - 2*b*c^2))}, 
     "X5259" -> {b*c*(a*(a^3 - a*b^2 - a*c^2 - 3*a*b*c - 2*b^2*c - 
          2*b*c^2))}, "X5260" -> 
      {b*c*(a*(a^3 - a*b^2 - a*c^2 - a*b*c - 3*b^2*c - 3*b*c^2))}, 
     "X5261" -> {b*c*((a^2 + 3*b^2 + 3*c^2 + 6*b*c)/(b + c - a))}, 
     "X5262" -> {b*c*(a*(a^3 + b^3 + c^3 + a^2*b + a^2*c + a*b^2 + a*c^2 + 
          a*b*c))}, "X5263" -> {b*c*(a^3 + a*b^2 + a*c^2 + a*b*c + b^2*c + 
         b*c^2)}, "X5264" -> {b*c*(a*(a^3 + a^2*b + a^2*c + b^2*c + b*c^2))}, 
     "X5265" -> {b*c*((b^2 + c^2 - 5*a^2 + 2*b*c)/(b + c - a))}, 
     "X5266" -> {2*a^3 + b^3 + c^3 + a^2*b + a^2*c + b^2*c + b*c^2}, 
     "X5267" -> {b*c*(a*(2*a^3 - 2*a*b^2 - 2*a*c^2 - b^2*c - b*c^2))}, 
     "X5268" -> {b*c*(a*(a^2 + b^2 + c^2 + 4*b*c))}, 
     "X5269" -> {b*c*(a*(3*a^2 + b^2 + c^2 + 2*b*c))}, 
     "X5270" -> {b*c*(b^4 + c^4 - a^4 - 3*a^2*b*c - 2*b^2*c^2)}, 
     "X5271" -> {b*c*(a^3 - a*b^2 - a*c^2 - 2*a*b*c - 2*b^2*c - 2*b*c^2)}, 
     "X5272" -> {b*c*(a*(a^2 + b^2 + c^2 - 4*b*c))}, 
     "X5273" -> {b*c*((b + c - a)*(b^2 + c^2 - 3*a^2 - 2*a*b - 2*a*c - 
          2*b*c))}, "X5274" -> 
      {b*c*((b + c - a)*(a^2 + 3*b^2 + 3*c^2 - 6*b*c))}, 
     "X5275" -> {b*c*(a*(a^3 + a*b^2 + a*c^2 + 2*a*b*c + 2*b^2*c + 
          2*b*c^2))}, "X5276" -> 
      {b*c*(a*(a^3 + a*b^2 + a*c^2 + a*b*c + b^2*c + b*c^2))}, 
     "X5277" -> {b*c*(a*(a^3 + a*b*c + b^2*c + b*c^2))}, 
     "X5278" -> {b*c*(a^3 - a*b^2 - a*c^2 - 2*a*b*c - b^2*c - b*c^2)}, 
     "X5279" -> {b*c*(a*(b^4 + c^4 - a^4 - a^2*b*c + b^3*c + b*c^3))}, 
     "X5280" -> {b*c*(a^2*(a^2 + b^2 + c^2 + b*c))}, 
     "X5281" -> {b*c*((b + c - a)*(b^2 + c^2 - 5*a^2 - 2*b*c))}, 
     "X5282" -> {b*c*(a*(b^3 + c^3 - a^3 + b^2*c + b*c^2))}, 
     "X5283" -> {b*c*(a*(a*b^2 + a*c^2 + a*b*c + b^2*c + b*c^2))}, 
     "X5284" -> {b*c*(a*(a^2 - a*b - a*c - 3*b*c))}, 
     "X5285" -> {b*c*(a^2*(b^4 + c^4 - a^4 - a^2*b*c + b^3*c + b*c^3))}, 
     "X5286" -> {b*c*((a^2 + b^2 + c^2)^2 - 4*b^2*c^2)}, 
     "X5287" -> {a^2 + b^2 + c^2 + 2*a*b + 2*a*c + 4*b*c}, 
     "X5288" -> {a^3 - a*b^2 - a*c^2 + 3*a*b*c - 2*b^2*c - 2*b*c^2}, 
     "X5289" -> {(b + c - a)*(2*b^2 + 2*c^2 - a^2 + a*b + a*c - 2*b*c)}, 
     "X5290" -> {b*c*((a^2 + 2*b^2 + 2*c^2 + a*b + a*c + 4*b*c)/
         (b + c - a))}, "X5291" -> {a^3 + a*b*c - b^2*c - b*c^2}, 
     "X5292" -> {b*c*(a^4 + b^4 + c^4 + 2*a^3*b + 2*a^3*c + 2*a^2*b*c - 
         2*b^2*c^2)}, "X5293" -> {a^3 + b^3 + c^3 + a*b*c + 2*b^2*c + 
        2*b*c^2}, "X5294" -> {b*c*(2*a^3 + b^3 + c^3 + a^2*b + a^2*c + 
         b^2*c + b*c^2)}, "X5295" -> 
      {b*c*((b + c)*(a^3 - a*b^2 - a*c^2 - 2*a*b*c - 2*b^2*c - 2*b*c^2))}, 
     "X5296" -> {b*c*(b^2 + c^2 - a^2 + 4*a*b + 4*a*c + 2*b*c)}, 
     "X5297" -> {a^2 + b^2 + c^2 + 3*b*c}, 
     "X5298" -> {b*c*((2*a - b - c)*(2*a + b + c)*(a + b - c)*(a - b + c))}, 
     "X5299" -> {b*c*(a^2*(a^2 + b^2 + c^2 - b*c))}, 
     "X5300" -> {b*c*(b^4 + c^4 - a^4 - a*b^2*c - a*b*c^2 + b^3*c + b*c^3)}, 
     "X5301" -> {b*c*(a^2*(a^3 + a^2*b + a^2*c - b^2*c - b*c^2))}, 
     "X5302" -> {b*c*(a*(b + c - a)*(2*a^2 + b^2 + c^2 + 3*a*b + 3*a*c + 
          4*b*c))}, "X5303" -> {b*c*(a*(3*a^3 - 3*a*b^2 - 3*a*c^2 + a*b*c - 
          b^2*c - b*c^2))}, "X5304" -> 
      {b*c*(5*a^4 + b^4 + c^4 + 2*a^2*b^2 + 2*a^2*c^2 - 2*b^2*c^2)}, 
     "X5305" -> {b*c*(2*a^4 + a^2*b^2 + b^4 + a^2*c^2 - 2*b^2*c^2 + c^4)}, 
     "X5306" -> {b*c*(4*a^4 + b^4 + c^4 + a^2*b^2 + a^2*c^2 - 2*b^2*c^2)}, 
     "X5307" -> {b*c*((a^2 + a*b + a*c + 2*b*c)/(b^2 + c^2 - a^2))}, 
     "X5308" -> {b*c*(b^2 + c^2 - a^2 - 4*a*b - 4*a*c - 2*b*c)}, 
     "X5309" -> {b*c*(a^4 + b^4 + c^4 + a^2*b^2 + a^2*c^2 - 2*b^2*c^2)}, 
     "X5310" -> {a*(b^4 + c^4 - a^4 + a^2*b*c + b^3*c + b*c^3)}, 
     "X5311" -> {a^2 + b^2 + c^2 + a*b + a*c + 2*b*c}, 
     "X5312" -> {a*(2*a*b + 2*a*c + 2*b^2 + 2*c^2 + 3*b*c)}, 
     "X5313" -> {a*(2*a*b + 2*a*c + 2*b^2 + 2*c^2 + b*c)}, 
     "X5314" -> {a*(b^2 + c^2 - a^2)*(a^2 + b^2 + c^2 + b*c)}, 
     "X5315" -> {a*(a^2 + b^2 + c^2 + 2*a*b + 2*a*c - b*c)}, 
     "X5316" -> {b*c*(b^3 + c^3 - a^2*b - a^2*c + 8*a*b*c - b^2*c - b*c^2)}, 
     "X5317" -> {1/((b + c)*(b^2 + c^2 - a^2)^2)}, 
     "X5318" -> {b*c*(3*b^4 + 3*c^4 - 3*a^4 - 6*b^2*c^2 - 12^(1/2)*a^2*S)}, 
     "X5319" -> {b*c*(3*a^4 + b^4 + c^4 + 2*a^2*b^2 + 2*a^2*c^2 - 
         2*b^2*c^2)}, "X5320" -> 
      {b*c*(a^3*(a^3 - a*b^2 - a*c^2 - 2*a*b*c - 2*b^2*c - 2*b*c^2))}, 
     "X5321" -> {b*c*(3*b^4 + 3*c^4 - 3*a^4 - 6*b^2*c^2 + 12^(1/2)*a^2*S)}, 
     "X5322" -> {a*(b^4 + c^4 - a^4 - a^2*b*c - b^3*c - b*c^3)}, 
     "X5323" -> {b*c*(a*((a^2 + b^2 + c^2 + 2*b*c)/((b + c)*(b + c - a))))}, 
     "X5324" -> {b*c*(a*(a^2 + b^2 + c^2 - 2*b*c)*((b + c - a)/(b + c)))}, 
     "X5325" -> {b*c*((b + c - a)*(b^2 + c^2 - 4*a^2 - 3*a*b - 3*a*c - 
          2*b*c))}, "X5326" -> {b*c*((b + c - a)*(3*b^2 + 3*c^2 - 4*a^2 - 
          6*b*c))}, "X5327" -> {b*c*((a^4 + b^4 + c^4 - 2*a^3*b - 2*a^3*c - 
          2*b^2*c^2)/(b + c))}, "X5328" -> 
      {b*c*((b + c - a)*(3*b^2 + 3*c^2 - a^2 + 2*a*b + 2*a*c - 6*b*c))}, 
     "X5329" -> {b*c*(a^2*(b^4 + c^4 - a^4 - 2*a^2*b*c))}, 
     "X5330" -> {(b + c - a)*(a^2 - a*b - a*c - 2*b^2 - 2*c^2 + 3*b*c)}, 
     "X5331" -> {1/((b + c)*(a^2 + a*b + a*c + 2*b*c))}, 
     "X5332" -> {b*c*(a^2*(2*a^2 + b^2 + c^2 - b*c))}, 
     "X5333" -> {b*c*((a + 2*b + 2*c)/(b + c))}, 
     "X5334" -> {b*c*(3*b^4 + 3*c^4 - 3*a^4 - 6*b^2*c^2 + 48^(1/2)*a^2*S)}, 
     "X5335" -> {b*c*(3*b^4 + 3*c^4 - 3*a^4 - 6*b^2*c^2 - 48^(1/2)*a^2*S)}, 
     "X5336" -> {b*c*(a*(a^4 + b^4 + c^4 + 2*a^3*b + 2*a^3*c - 2*b^2*c^2))}, 
     "X5337" -> {a^4 + a^3*b + a^3*c + a^2*b*c + b^3*c + b*c^3}, 
     "X5338" -> {(3*a + b + c)/(b^2 + c^2 - a^2)}, 
     "X5339" -> {b*c*(b^4 + c^4 - a^4 - 2*b^2*c^2 + 3^(1/2)*a^2*S)}, 
     "X5340" -> {b*c*(b^4 + c^4 - a^4 - 2*b^2*c^2 - 3^(1/2)*a^2*S)}, 
     "X5341" -> {b*c*(a*(b^4 + c^4 - a^4 - a^2*b*c - 2*b^2*c^2))}, 
     "X5342" -> {b^2*c^2*(3*a + b + c)*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)}, 
     "X5343" -> {b*c*(5*b^4 + 5*c^4 - 5*a^4 - 10*b^2*c^2 + 48^(1/2)*a^2*S)}, 
     "X5344" -> {b*c*(5*b^4 + 5*c^4 - 5*a^4 - 10*b^2*c^2 - 48^(1/2)*a^2*S)}, 
     "X5345" -> {b*c*(a^2*(2*b^4 + 2*c^4 - 2*a^4 - a^2*b*c - b^3*c - 
          b*c^3))}, "X5346" -> {b*c*(3*a^4 + b^4 + c^4 + a^2*b^2 + a^2*c^2 - 
         2*b^2*c^2)}, "X5347" -> 
      {b*c*(a^2*(b^4 + c^4 - a^4 - a^2*b*c - a*b^2*c - a*b*c^2))}, 
     "X5348" -> {b*c*(a*(b + c - a)*(a^2 + b*c - b^2)*(a^2 + b*c - c^2))}, 
     "X5349" -> {b*c*(5*b^4 + 5*c^4 - 5*a^4 - 10*b^2*c^2 + 12^(1/2)*a^2*S)}, 
     "X5350" -> {b*c*(5*b^4 + 5*c^4 - 5*a^4 - 10*b^2*c^2 - 12^(1/2)*a^2*S)}, 
     "X5353" -> {b*c*(a^2*(2*S - 3^(1/2)*b*c))}, 
     "X5354" -> {b*c*(a^2*(a^4 + b^4 + c^4 + 2*a^2*b^2 + 2*a^2*c^2 - 
          b^2*c^2))}, "X5355" -> {b*c*(2*a^4 + b^4 + c^4 + 2*a^2*b^2 + 
         2*a^2*c^2 - 2*b^2*c^2)}, "X5356" -> 
      {b^4 + c^4 - a^4 - 3*a^2*b*c - 2*b^2*c^2}, 
     "X5357" -> {b*c*(a^2*(2*S + 3^(1/2)*b*c))}, 
     "X5358" -> {(b^4 + c^4 - a^4 + 2*a^2*b*c - 2*b^2*c^2)/(b + c)}, 
     "X5359" -> {b*c*(a^2*(a^4 + b^4 + c^4 + 2*a^2*b^2 + 2*a^2*c^2))}, 
     "X5360" -> {b*c*(a^3*(b + c)*(b^4 + c^4 - a^2*b^2 - a^2*c^2))}, 
     "X5361" -> {b*c*(2*a^3 - 2*a*b^2 - 2*a*c^2 - a*b*c - 2*b^2*c - 
         2*b*c^2)}, "X5362" -> {2*a*S - 3^(1/2)*(a*b*c + b^2*c + b*c^2)}, 
     "X5363" -> {b*c*(a^2*(b^4 + c^4 - a^4 - 3*a^2*b*c - b^2*c^2))}, 
     "X5364" -> {b*c*(a^3*(b^3 + c^3 - a*b^2 - a*c^2 - a*b*c))}, 
     "X5365" -> {b*c*(7*b^4 + 7*c^4 - 7*a^4 - 14*b^2*c^2 + 48^(1/2)*a^2*S)}, 
     "X5366" -> {b*c*(7*b^4 + 7*c^4 - 7*a^4 - 14*b^2*c^2 - 48^(1/2)*a^2*S)}, 
     "X5367" -> {b*c*(a*(2*a*S + 3^(1/2)*(a*b*c + b^2*c + b*c^2)))}, 
     "X5368" -> {b*c*(4*a^4 + b^4 + c^4 + 2*a^2*b^2 + 2*a^2*c^2 - 
         2*b^2*c^2)}, "X5369" -> 
      {b*c*(a^3*(b^4 + c^4 - a*b^3 - a*c^3 - a*b^2*c - a*b*c^2))}, 
     "X5370" -> {b*c*(a^2*(3*b^4 + 3*c^4 - 3*a^4 - a^2*b*c - b^3*c - 
          b*c^3))}, "X5371" -> {b*c*(a^3*(a^3 - a*b*c - b^2*c - b*c^2))}, 
     "X5372" -> {b*c*(2*a^3 - 2*a*b^2 - 2*a*c^2 + a*b*c - 2*b^2*c - 
         2*b*c^2)}, "X5375" -> {(a - b)*(a - c)*(a^3 - a^2*(b + c) + 
         a*(b^2 - b*c + c^2) - (b - c)^2*(b + c))}, 
     "X5376" -> {(a - b)^2*(a - c)^2*(a - 2*b + c)*(a + b - 2*c)}, 
     "X5377" -> {(a - b)^2*(a - c)^2*(a^2 + b^2 - a*c - b*c)*
        (a^2 + c^2 - a*b - c*b)}, "X5378" -> 
      {(a - b)^2*(a - c)^2*(b^2 - a*c)*(c^2 - a*b)}, 
     "X5379" -> {b*c*(a*(a + b)*(a + c)*(a - b)^2*(a - c)^2*(a^2 - b^2 + c^2)*
         (a^2 + b^2 - c^2))}, "X5380" -> {(a - b)*(a - c)*(a^2 - 2*b^2 + c^2)*
        (a^2 + b^2 - 2*c^2)}, "X5381" -> 
      {b*c*((a - b)^2*(a - c)^2*(2*a*b - a*c - b*c)*(2*a*c - a*b - b*c))}, 
     "X5382" -> {(a - b)^2*(a - c)^2*(a - 3*b + c)*(a + b - 3*c)}, 
     "X5383" -> {b*c*((a - b)^2*(a - c)^2*(b*c + a*b - a*c)*
         (b*c - a*b + a*c))}, "X5384" -> 
      {(a - b)^2*(a - c)^2*(a^2 + a*b + b^2)*(a^2 + a*c + c^2)}, 
     "X5385" -> {(a - b)^2*(a - c)^2*(2*a - b + 2*c)*(2*a + 2*b - c)}, 
     "X5386" -> {(a - b)*(a - c)*(a^3 - 2*b^3 + c^3)*(a^3 + b^3 - 2*c^3)}, 
     "X5387" -> {b*c*(a - b)^2*(a - c)^2*(a^2 + b^2 + c^2 - 3*a*b)*
        (a^2 + b^2 + c^2 - 3*a*c)}, "X5388" -> 
      {b*c*(b^2*c^2*(a - b)^2*(a - c)^2*(a^2 + a*b + b^2)*
         (a^2 + a*c + c^2))}, "X5389" -> {(a - b)*(a - c)*(a^4 - 2*b^4 + c^4)*
        (a^4 + b^4 - 2*c^4)}, "X5390" -> {Cos[angleB - angleC] - 
        Cos[angleB + angleC] - Cos[angleB/3 + angleC/3] + 
        Cos[5*(angleB/3) + 5*(angleC/3)] - Sin[angleC - angleB/3 - Pi/6] - 
        Sin[angleB - angleC/3 - Pi/6] + Sin[angleB + 5*(angleC/3) - Pi/6] + 
        Sin[angleC + 5*(angleB/3) - Pi/6]}, "X5391" -> {b*c*(b*c - S)}, 
     "X5392" -> {b*c*Sec[2*angleA]}, "X5393" -> {b*c*(a + 2*r)}, 
     "X5395" -> {b*c*(1/(3*b^2 + 3*c^2 - a^2))}, 
     "X5396" -> {1 + Cos[angleB - angleA] + Cos[angleC - angleA]}, 
     "X5397" -> {1/(1 + Cos[angleB - angleA] + Cos[angleC - angleA])}, 
     "X5398" -> {Cos[angleA]*(Cos[angleA] + Cos[angleB] + Cos[angleC]) - 
        Sin[angleA]*(Sin[angleA] + Sin[angleB] + Sin[angleC])}, 
     "X5399" -> {1 - Cos[angleA - angleB] - Cos[angleA - angleC]}, 
     "X5400" -> {1 + Cos[angleA - angleB] + Cos[angleA - angleC] - 
        3*Cos[angleB - angleC]}, "X5401" -> {Sec[angleA + Pi/5]}, 
     "X5402" -> {Csc[angleA + Pi/5]}, "X5403" -> {Sec[angleA - angleW/2]}, 
     "X5404" -> {Csc[angleA - angleW/2]}, "X5405" -> {b*c*(a - 2*r)}, 
     "X5406" -> {Cos[angleA]*(2 + Cot[angleA])}, 
     "X5407" -> {Cos[angleA]*(2 - Cot[angleA])}, 
     "X5408" -> {Cos[angleA]*(1 + Cot[angleA])}, 
     "X5409" -> {Cos[angleA]*(1 - Cot[angleA])}, 
     "X5410" -> {Sin[angleA]*(2 - Tan[angleA])}, 
     "X5411" -> {Sin[angleA]*(2 + Tan[angleA])}, 
     "X5412" -> {Sin[angleA]*(1 - Tan[angleA])}, 
     "X5413" -> {Sin[angleA]*(1 + Tan[angleA])}, 
     "X5414" -> {1 - Sin[angleA] + Cos[angleA]}, 
     "X5415" -> {a*(2*R + r + sp - a)}, "X5416" -> {a*(2*R + r - sp + a)}, 
     "X5417" -> {1/(Cos[angleA] + Sin[angleA] + 2*Sin[angleB]*Sin[angleC])}, 
     "X5418" -> {Cos[angleA] + Sin[angleA] + 2*Sin[angleB]*Sin[angleC]}, 
     "X5419" -> {1/(Cos[angleA] - Sin[angleA] + 2*Sin[angleB]*Sin[angleC])}, 
     "X5420" -> {Cos[angleA] - Sin[angleA] + 2*Sin[angleB]*Sin[angleC]}, 
     "X5421" -> {Sin[angleA]*(1 + 2*Sin[angleB]^2 + 2*Sin[angleC]^2)}, 
     "X5422" -> {b*c*(a^2 + 2*R^2)}, "X5423" -> {b*c*(b + c - a)^3}, 
     "X5424" -> {(2*a^3 + 2*b^3 + c^3 - 2*a^2*b - 2*a*b^2 - 2*a*c^2 - 
         2*b*c^2 - a^2*c - b^2*c - a*b*c)*(2*a^3 + b^3 + 2*c^3 - 2*a^2*c - 
         2*a*c^2 - 2*a*b^2 - 2*b^2*c - a^2*b - b*c^2 - a*b*c)}, 
     "X5425" -> {1/((2*a^3 + 2*b^3 + c^3 - 2*a^2*b - 2*a*b^2 - 2*a*c^2 - 
          2*b*c^2 - a^2*c - b^2*c - a*b*c)*(2*a^3 + b^3 + 2*c^3 - 2*a^2*c - 
          2*a*c^2 - 2*a*b^2 - 2*b^2*c - a^2*b - b*c^2 - a*b*c))}, 
     "X5426" -> {3*a^3 + b^3 + c^3 - a^2*b - a^2*c - 3*a*b^2 - 3*a*c^2 - 
        3*b^2*c - 3*b*c^2 - 3*a*b*c}, "X5427" -> 
      {(a + b - c)*(a - b + c)*(2*a^4 - 2*a^3*b - 2*a^3*c - 2*a^2*b^2 - 
         2*a^2*c^2 - 2*a^2*b*c + 2*a*b^3 + 2*a*c^3 + b^3*c + b*c^3 + 
         2*b^2*c^2)}, "X5428" -> {2*a^6 - 2*a^5*b - 2*a^5*c - 4*a^4*b^2 - 
        4*a^4*c^2 + 4*a^3*b^3 + 4*a^3*c^3 + 2*a^2*b^4 + 2*a^2*c^4 + 
        a^2*b^3*c + a^2*b*c^3 + 4*a^2*b^2*c^2 + 2*a*b^4*c + 2*a*b*c^4 - 
        2*a*b^5 - 2*a*c^5 - b^5*c - b*c^5 + 2*b^3*c^3}, 
     "X5429" -> {3*a^3 + b^3 + c^3 + 2*a^2*b + 2*a^2*c + 3*a*b*c}, 
     "X5430" -> {b*c*((1 + Csc[angleA/2])*(Csc[angleB/2] + Csc[angleC/2]) - 
         Cot[angleA/2]^2)}, "X5431" -> 
      {b*c*((1 + Sec[angleA/2])*(Sec[angleB/2] + Sec[angleC/2]) - 
         Tan[angleA/2]^2)}, "X5432" -> 
      {b*c*((b + c - a)*(b^2 + c^2 - 2*a^2 - 2*b*c))}, 
     "X5433" -> {b*c*((a - b + c)*(a + b - c)*(b^2 + c^2 - 2*a^2 + 2*b*c))}, 
     "X5434" -> {b*c*((a - b + c)*(a + b - c)*(b^2 + c^2 + 2*a^2 + 2*b*c))}, 
     "X5435" -> {b*c*((3*a - b - c)*(a - b + c)*(a + b - c))}, 
     "X5436" -> {3*a^3 + b^3 + c^3 - a^2*b - a^2*c - 3*a*b^2 - 3*a*c^2 - 
        6*a*b*c - 5*b^2*c - 5*b*c^2}, "X5437" -> 
      {b*c*(a*(b^2 + c^2 - a^2 - 6*b*c))}, 
     "X5438" -> {b*c*(a*(3*a^3 + b^3 + c^3 - a^2*b - a^2*c - 3*a*b^2 - 
          3*a*c^2 + 2*a*b*c + 3*b^2*c + 3*b*c^2))}, 
     "X5439" -> {b*c*(a*(b^3 + c^3 - a^2*b - a^2*c - 4*a*b*c - 3*b^2*c - 
          3*b*c^2))}, "X5440" -> {b*c*(a*(b + c - 2*a)*(b^2 + c^2 - a^2))}, 
     "X5441" -> {b*c*(b^4 + c^4 - 3*a^4 + a^3*b + a^3*c + 2*a^2*b^2 + 
         2*a^2*c^2 + a^2*b*c - a*b^3 - a*c^3 + a*b^2*c + a*b*c^2 - 
         2*b^2*c^2)}, "X5442" -> {b*c*(3*a^4 + a^3*(b + c) - 
         a*(b - c)^2*(b + c) + a^2*(-4*b^2 + b*c - 4*c^2) + (b^2 - c^2)^2)}, 
     "X5443" -> {b*c*(a^4 + b^4 + c^4 - a^3*b - a^3*c - 2*a^2*b^2 - 
         2*a^2*c^2 + a^2*b*c + a*b^3 + a*c^3 - a*b^2*c - a*b*c^2 - 
         2*b^2*c^2)}, "X5444" -> {b*c*(3*a^4 + b^4 + c^4 - a^3*b - a^3*c - 
         4*a^2*b^2 - 4*a^2*c^2 + a^2*b*c + a*b^3 + a*c^3 - a*b^2*c - 
         a*b*c^2 - 2*b^2*c^2)}, "X5445" -> 
      {b*c*(a^4 + a^3*(b + c) - a*(b - c)^2*(b + c) + (b^2 - c^2)^2 - 
         a^2*(2*b^2 + b*c + 2*c^2))}, "X5446" -> 
      {b*c*(a^2*(a^2*b^2*c^2*SA - 2*S^2*(S^2 + SB*SC)))}, 
     "X5447" -> {Cos[angleA]*(3 - Cos[2*angleB] - Cos[2*angleC])}, 
     "X5448" -> {b*c*(b^2 + c^2 - a^2)*(b^8 + c^8 + 2*a^6*b^2 + 2*a^6*c^2 - 
         3*a^4*b^4 - 3*a^4*c^4 + 4*a^4*b^2*c^2 - 4*b^6*c^2 - 4*b^2*c^6 + 
         6*b^4*c^4)}, "X5449" -> {Cos[angleA]*Cos[2*angleB - 2*angleC]}, 
     "X5450" -> {a^6 - a^5*b - a^5*c - 2*a^4*b^2 - 2*a^4*c^2 + 4*a^4*b*c + 
        2*a^3*b^3 + 2*a^3*c^3 - a^3*b^2*c - a^3*b*c^2 + a^2*b^4 + a^2*c^4 - 
        3*a^2*b^3*c - 3*a^2*b*c^3 + 4*a^2*b^2*c^2 + 2*a*b^4*c + 2*a*b*c^4 - 
        a*b^3*c^2 - a*b^2*c^3 - a*b^5 - a*c^5 - b^5*c - b*c^5 + 2*b^3*c^3}, 
     "X5451" -> {b*c*(1/(Sec[angleB/2]*Sec[angleC/2] + Sec[angleA/2]))}, 
     "X5452" -> {a*(b + c - a)*(a^3 - a^2*b - a^2*c + a*b^2 + a*c^2 - 
         (b + c)*(b - c)^2)}, "X5453" -> 
      {2 + 2*Cos[angleA] + Cos[angleB - angleC] + 4*Sin[3*(angleA/2)]*
         Cos[angleB/2 - angleC/2]}, "X5455" -> 
      {b*c*((4*Sin[angleA])*(Cos[angleA/3] + 2*Cos[angleB/3]*Cos[angleC/3]) + 
         Sin[angleB]*(Cos[angleB/3] + 2*Cos[angleA/3]*Cos[angleC/3]) + 
         Sin[angleC]*(Cos[angleC/3] + 2*Cos[angleA/3]*Cos[angleB/3]))}, 
     "X5456" -> {b*c*Sin[2*(angleA/3)]}, "X5457" -> 
      {Sin[angleA/3]/Sin[4*(angleA/3)]}, "X5458" -> 
      {Sin[2*(angleA/3)]/Sin[5*(angleA/3)]}, 
     "X5459" -> {b*c*(4*a*Csc[angleA + Pi/3] + b*Csc[angleB + Pi/3] + 
         c*Csc[angleC + Pi/3])}, "X5460" -> 
      {b*c*(4*a*Csc[angleA - Pi/3] + b*Csc[angleB - Pi/3] + 
         c*Csc[angleC - Pi/3])}, "X5461" -> 
      {b*c*(4*(b^2 - c^2)^2 + (a^2 - b^2)^2 + (a^2 - c^2)^2)}, 
     "X5462" -> {2*R^2*Cos[angleA] + a^2*Cos[angleB - angleC]}, 
     "X5463" -> {b*c*(Sin[angleA]*Sec[angleA - Pi/6] - 
         2*Sin[angleB]*Sec[angleB - Pi/6] - 2*Sin[angleC]*
          Sec[angleC - Pi/6])}, "X5464" -> 
      {b*c*(Sin[angleA]*Sec[angleA + Pi/6] - 2*Sin[angleB]*
          Sec[angleB + Pi/6] - 2*Sin[angleC]*Sec[angleC + Pi/6])}, 
     "X5465" -> {b*c*(2*a^10 - 4*(b^2 + c^2)*a^8 + 
         4*(2*b^4 - b^2*c^2 + 2*c^4)*a^6 - (b^2 + c^2)*(7*b^4 - 10*b^2*c^2 + 
           7*c^4)*a^4 - (b^8 + c^8 - 2*b^2*c^2*(7*b^4 - 12*b^2*c^2 + 7*c^4))*
          a^2 + (b^4 - c^4)*(b^2 - c^2)*(b^2 - 2*c^2)*(2*b^2 - c^2))}, 
     "X5466" -> {b*c*((b^2 - c^2)/(b^2 + c^2 - 2*a^2))}, 
     "X5467" -> {a*((b^2 + c^2 - 2*a^2)/(b^2 - c^2))}, 
     "X5468" -> {b*c*((b^2 + c^2 - 2*a^2)/(b^2 - c^2))}, 
     "X5469" -> {Csc[angleA + Pi/3]*(a*Csc[angleA - Pi/3] + 
          b*Csc[angleB - Pi/3] + c*Csc[angleC - Pi/3]) + 
        2*Csc[angleA - Pi/3]*(a*Csc[angleA + Pi/3] + b*Csc[angleB + Pi/3] + 
          c*Csc[angleC + Pi/3])}, "X5470" -> 
      {Csc[angleA - Pi/3]*(a*Csc[angleA + Pi/3] + b*Csc[angleB + Pi/3] + 
          c*Csc[angleC + Pi/3]) + 2*Csc[angleA + Pi/3]*
         (a*Csc[angleA - Pi/3] + b*Csc[angleB - Pi/3] + 
          c*Csc[angleC - Pi/3])}, "X5471" -> 
      {b*c*(4*S^2 + a^2*(2*a^2 - b^2 - c^2) - 12^(1/2)*a^2*S)}, 
     "X5472" -> {b*c*(4*S^2 + a^2*(2*a^2 - b^2 - c^2) + 12^(1/2)*a^2*S)}, 
     "X5473" -> {b*c*(3^(1/2)*a^2*(a^4 - 3*b^4 - 3*c^4 + 2*a^2*b^2 + 
           2*a^2*c^2 - 2*b^2*c^2) + 2*S*(7*a^4 - 2*b^4 - 2*c^4 - 5*a^2*b^2 - 
           5*a^2*c^2 + 4*b^2*c^2))}, "X5474" -> 
      {b*c*(3^(1/2)*a^2*(a^4 - 3*b^4 - 3*c^4 + 2*a^2*b^2 + 2*a^2*c^2 - 
           2*b^2*c^2) - 2*S*(7*a^4 - 2*b^4 - 2*c^4 - 5*a^2*b^2 - 5*a^2*c^2 + 
           4*b^2*c^2))}, "X5475" -> {b*c*((SA + SW)*(SB + SC) + 4*SB*SC)}, 
     "X5476" -> {b*c*(a^6 + b^6 + c^6 - 4*a^4*b^2 - 4*a^4*c^2 + 2*a^2*b^4 + 
         2*a^2*c^4 - 6*a^2*b^2*c^2 - b^4*c^2 - b^2*c^4)}, 
     "X5477" -> {b*c*((b^2 - c^2)^2*(a^2 - b^2 - c^2) + 
         2*a^2*((a^2 - b^2)^2 + (a^2 - c^2)^2))}, 
     "X5478" -> {b*c*(3^(1/2)*(3*a^4*b^2 + 3*a^4*c^2 - 2*a^2*b^4 - 
           2*a^2*c^4 + 4*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 - b^6 - c^6) + 
         2*S*(4*a^4 - 5*b^4 - 5*c^4 + a^2*b^2 + a^2*c^2 + 10*b^2*c^2))}, 
     "X5479" -> {b*c*(3^(1/2)*(3*a^4*b^2 + 3*a^4*c^2 - 2*a^2*b^4 - 
           2*a^2*c^4 + 4*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 - b^6 - c^6) - 
         2*S*(4*a^4 - 5*b^4 - 5*c^4 + a^2*b^2 + a^2*c^2 + 10*b^2*c^2))}, 
     "X5480" -> {b*c*(3*a^4*(b^2 + c^2) - (2*a^2 + b^2 + c^2)*
          (b^2 - c^2)^2)}, "X5481" -> 
      {1/(Sin[angleA]*Tan[angleW] + 2*Cos[angleB]*Cos[angleC])}, 
     "X5483" -> {b*c*(a*(a^5 + b^5 + c^5 + a^4*b + a^4*c - 2*a^3*b^2 - 
          2*a^3*c^2 - 2*a^2*b^3 - 2*a^2*c^3 - 3*a^2*b^2*c - 3*a^2*b*c^2 + 
          a*b^4 + a*c^4 - 2*a*b^3*c - 2*a*b*c^3 - 3*a*b^2*c^2 - b^3*c^2 - 
          b^2*c^3))}, "X5484" -> {b*c*(a^4 - a^3*(b + c) - a*(b + c)^3 + 
         a^2*(-2*b^2 + b*c - 2*c^2) - (b + c)^2*(b^2 - b*c + c^2))}, 
     "X5485" -> {b*(c/(5*a^2 - b^2 - c^2))}, 
     "X5486" -> {b*(c/(b^4 + c^4 - a^4 - 4*b^2*c^2))}, 
     "X5487" -> {b*c*(1/(7*a^2 - b^2 - c^2 + 12^(1/2)*S))}, 
     "X5488" -> {b*c*(1/(7*a^2 - b^2 - c^2 - 12^(1/2)*S))}, 
     "X5489" -> {b*c*((b^2 - c^2)^3*(b^2 + c^2 - a^2)^2)}, 
     "X5490" -> {b*c*(1/(S + a^2))}, "X5491" -> {b*c*(1/(S - a^2))}, 
     "X5492" -> {a^4*b^2 + a^4*c^2 - 2*a^3*b^2*c - 2*a^3*b*c^2 - 2*a^2*b^4 - 
        2*a^2*c^4 - a^2*b^3*c - a^2*b*c^3 + 2*a*b^4*c + 2*a*b*c^4 - 
        2*a*b^3*c^2 - 2*a*b^2*c^3 + b^6 + c^6 + b^5*c + b*c^5 - b^4*c^2 - 
        b^2*c^4 - 2*b^3*c^3}, "X5493" -> 
      {b*c*(b^4 + c^4 - 4*a^4 - 3*a^3*b - 3*a^3*c + 3*a^2*b^2 + 3*a^2*c^2 + 
         6*a^2*b*c + 3*a*b^3 + 3*a*c^3 - 3*a*b^2*c - 3*a*b*c^2 - 2*b^2*c^2)}, 
     "X5494" -> {a^9 - a^8*(b + c) - a^7*(b - c)^2 + 
        a^6*(2*b^3 - b^2*c - b*c^2 + 2*c^3) - 
        a^5*(3*b^4 + b^3*c - 7*b^2*c^2 + b*c^3 + 3*c^4) + 
        4*a^4*b*c*(b - c)^2*(b + c) + a^3*(b^2 - c^2)^2*
         (5*b^2 - 4*b*c + 5*c^2) - a^2*(b - c)^2*(2*b^5 + 5*b^4*c + b^3*c^2 + 
          b^2*c^3 + 5*b*c^4 + 2*c^5) - a*(b^2 - c^2)^2*(2*b^4 - 3*b^3*c + 
          5*b^2*c^2 - 3*b*c^3 + 2*c^4) + (b - c)^4*(b + c)^3*(b^2 + c^2)}, 
     "X5495" -> {b*c*(a^2*(a^7*(b + c) - a^6*(b^2 + c^2) - 
          a^5*(3*b^3 + 2*b^2*c + 2*b*c^2 + 3*c^3) + 
          a^4*(3*b^4 - b^3*c + 4*b^2*c^2 - b*c^3 + 3*c^4) + 
          a^3*(3*b^5 + b^4*c + 2*b^3*c^2 + 2*b^2*c^3 + b*c^4 + 3*c^5) - 
          a^2*(3*b^6 - 2*b^5*c - 2*b*c^5 + 3*c^6) - 
          a*(b^7 - b^4*c^3 - b^3*c^4 + c^7) + (b^2 - c^2)^2*
           (b^4 - b^3*c - b*c^3 - b^2*c^2 + c^4)))}, 
     "X5496" -> {(b + c)*(a^5 - 2*a^3*(b^2 + c^2) - a^2*b*c*(b + c) + 
         a*(b^4 - b^2*c^2 + c^4) + b*c*(b + c)*(b - c)^2)}, 
     "X5497" -> {b*c*(a*(a^6 - a^5*(b + c) - a^4*(b + c)^2 + 
          a^3*(2*b^3 + b^2*c + b*c^2 + 2*c^3) - 
          a^2*(b^4 - b^3*c - 3*b^2*c^2 - b*c^3 + c^4) - 
          a*(b^5 + b^4*c + b*c^4 + c^5) + (b^2 - c^2)^2*(b^2 + c^2)))}, 
     "X5498" -> {b*c*(2*a^10 - 5*a^8*(b^2 + c^2) + 
         2*a^6*(b^4 + 5*b^2*c^2 + c^4) + a^4*(4*b^6 - 5*b^4*c^2 - 5*b^2*c^4 + 
           4*c^6) - a^2*(b^2 - c^2)^2*(4*b^4 + 5*b^2*c^2 + 4*c^4) + 
         (b^2 - c^2)^4*(b^2 + c^2))}, "X5499" -> 
      {b*c*((b^2 + 4*b*c + c^2)*a^5 - (b + c)*(b^2 + c^2)*a^4 - 
         (2*b^4 + 2*c^4 + 3*b*c*(b^2 + c^2))*a^3 + 2*(b^3 - c^3)*(b^2 - c^2)*
          a^2 + (b^2 - c^2)*(b - c)*(b^3 + c^3)*a - (b^2 - c^2)^3*(b - c))}, 
     "X5500" -> {b*c*(2*a^22 - 15*(b^2 + c^2)*a^20 + 
         6*(8*b^4 + 13*b^2*c^2 + 8*c^4)*a^18 - (b^2 + c^2)*
          (81*b^4 + 71*b^2*c^2 + 81*c^4)*a^16 + (b^4 + c^4)*
          (64*b^4 + 111*b^2*c^2 + 64*c^4)*a^14 + (b^2 + c^2)*
          (14*b^8 + 14*c^8 + 3*(5*b^4 + 7*b^2*c^2 + 5*c^4)*b^2*c^2)*a^12 - 
         (84*b^12 + 84*c^12 + (67*b^8 + 67*c^8 + 8*(7*b^4 + 6*b^2*c^2 + 7*
                c^4)*b^2*c^2)*b^2*c^2)*a^10 + (b^2 + c^2)*
          (82*b^12 + 82*c^12 - (105*b^8 + 105*c^8 - (74*b^4 - 93*b^2*c^2 + 74*
                c^4)*b^2*c^2)*b^2*c^2)*a^8 - (b^2 - c^2)^2*
          (34*b^12 + 34*c^12 + (11*b^8 + 11*c^8 - 5*(6*b^4 + 7*b^2*c^2 + 6*
                c^4)*b^2*c^2)*b^2*c^2)*a^6 + (b^4 - c^4)*(b^2 - c^2)^3*
          (b^8 + c^8 - (3*b^4 + 19*b^2*c^2 + 3*c^4)*b^2*c^2)*a^4 + 
         (b^2 - c^2)^6*(b^4 + c^4)*(4*b^4 + 5*b^2*c^2 + 4*c^4)*a^2 - 
         (b^2 - c^2)^8*(b^2 + c^2)*(b^4 + c^4))}, 
     "X5501" -> {b*c*(2*a^16 - 9*(b^2 + c^2)*a^14 + 
         (13*b^4 + 18*b^2*c^2 + 13*c^4)*a^12 + (b^2 + c^2)*(b^4 + c^4)*a^10 - 
         (25*b^8 + 25*c^8 + 2*b^2*c^2*(5*b^4 + 4*b^2*c^2 + 5*c^4))*a^8 + 
         (b^2 + c^2)*(33*b^8 + 33*c^8 - b^2*c^2*(64*b^4 - 53*b^2*c^2 + 
             64*c^4))*a^6 - (b^2 - c^2)^2*(21*b^8 + 21*c^8 - 
           5*b^2*c^2*(4*b^4 + 5*b^2*c^2 + 4*c^4))*a^4 + 
         (b^4 - c^4)*(b^2 - c^2)^3*(7*b^4 - 20*b^2*c^2 + 7*c^4)*a^2 - 
         (b^4 - 4*b^2*c^2 + c^4)*(b^2 - c^2)^6)}, 
     "X5502" -> {a*(a^2 - b^2)*(a^2 - c^2)*(2*a^6 - 4*a^2*(b^2 - c^2)^2 - 
         a^4*(b^2 + c^2) + 3*(b^2 - c^2)^2*(b^2 + c^2))}, 
     "X5503" -> {b*c*(1/(4*a^4 + b^4 + c^4 - 4*b^2*c^2 - a^2*b^2 - 
          a^2*c^2))}, "X5504" -> {Cos[angleA]/(1 + Cos[2*angleB] + 
         Cos[2*angleC])}, "X5505" -> 
      {a/(4*a^6 - a^4*(b^2 + c^2) + (b^2 - c^2)^2*(b^2 + c^2) - 
         2*a^2*(2*b^4 - 3*b^2*c^2 + 2*c^4))}, 
     "X5506" -> {b*c*(a*(a^3 - b^3 - c^3 + a^2*b + a^2*c - a*b^2 - a*c^2 - 
          5*a*b*c - 5*b^2*c - 5*b*c^2))}, 
     "X5508" -> {1/(a^6 - a^4*(b^2 + c^2) + a^3*(b^3 + c^3) - a*(b^5 + c^5) + 
         b^3*c^3)}, "X5509" -> {b*c*(a*(b - c)^2*(a^3 - b^2*c - b*c^2)*
         (a^2*(b^2 + c^2 + b*c) - b^4 - c^4 - b^3*c - b*c^3))}, 
     "X5510" -> {b*c*((3*a - b - c)*(b - c)^2*(a^2*b + a^2*c - 3*a*b*c - 
          b^3 + 2*b^2*c + 2*b*c^2 - c^3))}, 
     "X5511" -> {b*c*((b - c)^2*(a^2 + b^2 + c^2 - 2*a*b - 2*a*c)*
         (a^3 - a^2*b - a^2*c + a*b^2 + a*c^2 - b^3 + b^2*c + b*c^2 - c^3))}, 
     "X5512" -> {b*c*(b^2 - c^2)^2*(b^2 + c^2 - 5*a^2)*
        (b^4 + c^4 - a^4 - 4*b^2*c^2)}, "X5513" -> 
      {b*c*((b^3 + c^3 - a*b^2 - a*c^2)*(b^3 + c^3 + 2*a^3 - a^2*b - a^2*c - 
          b^2*c - b*c^2))}, "X5514" -> {b*c*(b - c)^2*(b + c - a)^2*
        (b^3 + c^3 - a^3 - a^2*b - a^2*c + a*b^2 + a*c^2 + 2*a*b*c - b^2*c - 
         b*c^2)}, "X5515" -> {b*c*(b - c)^2*(b^2 + b*c + c^2 + a*(b + c))*
        (a^2 + (b + c)^2)}, "X5516" -> 
      {b*c*((b + c - 2*a)*(b + c - 3*a)*(b - c)^2*(b^2 + c^2 + a*b + a*c - 
          4*b*c))}, "X5517" -> {b*c*((b - c)^2*(a^2 + b^2 + c^2 + 2*b*c)*
         (a^3 - b^3 - c^3 + a^2*b + a^2*c - a*b^2 - a*c^2 - 2*a*b*c - b^2*c - 
          b*c^2))}, "X5518" -> {b*c*((b - c)^2*(a*b + a*c - b*c)*
         (a^2*b + a^2*c - a*b^2 - a*c^2 - a*b*c + b^2*c + b*c^2))}, 
     "X5519" -> {b*c*((b - c)^2*(a^2 + b^2 + c^2 - 2*a*b - 2*a*c)*
         (b^2 + c^2 - a*b - a*c)*(2*a^2 + b^2 + c^2 - a*b - a*c - 2*b*c))}, 
     "X5520" -> {b*c*((b - c)^2*(a^3 + b^3 + c^3 - a^2*b - a^2*c - a*b^2 - 
          a*c^2 - a*b*c + b^2*c + b*c^2)*(a^4 - b^4 - c^4 + a^2*b*c - 
          a*b^2*c - a*b*c^2 + 2*b^2*c^2))}, 
     "X5521" -> {b*c*((b - c)^2*(a^2 - b^2 + c^2)*(a^2 + b^2 - c^2)*
         (a^3 + b^3 + b^2*c + b*c^2 + c^3 - a^2*(b + c) - a*(b + c)^2))}, 
     "X5522" -> {b*c*((b^2 - c^2)^2*(a^4 + b^4 + c^4 - 2*a^2*b^2 - 
          2*a^2*c^2 - 4*b^2*c^2)*(3*a^4 + b^4 + c^4 - 4*a^2*b^2 - 4*a^2*c^2 - 
          2*b^2*c^2))}, "X5523" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (b^6 + c^6 - a^4*b^2 - a^4*c^2 + 2*a^2*b^2*c^2 - b^4*c^2 - 
          b^2*c^4))}, "X5524" -> 
      {b*c*(a*(a^2 + b^2 + c^2 + 3*b*c - 3*a*b - 3*a*c))}, 
     "X5525" -> {b*c*(a*(a^3 - b^3 - c^3 - a^2*b - a^2*c + a*b^2 + a*c^2 + 
          3*a*b*c - b^2*c - b*c^2))}, "X5526" -> 
      {b*c*(a^2*(a^2 + b^2 + c^2 - 2*a*b - 2*a*c + b*c))}, 
     "X5527" -> {a^6 - 3*a^5*(b + c) + a^4*(3*b^2 + 3*c^2 + 7*b*c) - 
        2*a^3*(b + c)*(b^2 + c^2) + 3*a^2*(b^2 + c^2)*(b - c)^2 - 
        a*(b + c)*(b - c)^2*(3*b^2 + 3*c^2 - 2*b*c) + 
        (b - c)^4*(b^2 + c^2 + 3*b*c)}, "X5528" -> 
      {a^4 - 4*a^3*(b + c) + a^2*(6*b^2 + 6*c^2 + b*c) - 
        a*(4*b^3 + 4*c^3 - b^2*c - b*c^2) + (b - c)^2*(b^2 + c^2 + 4*b*c)}, 
     "X5529" -> {a^3 - 2*a^2*(b + c) - a*(2*b^2 + 2*c^2 - b*c) + 
        (b + c)*(b^2 + c^2 + b*c)}, "X5530" -> 
      {b*c*(a^3*(b + c) + a^2*(3*b^2 + 3*c^2 + 4*b*c) + 
         a*(b + c)*(b^2 + c^2) - (b^2 - c^2)^2)}, 
     "X5531" -> {a^5 - 3*a^4*(b + c) + a^3*(2*b + c)*(b + 2*c) + 
        2*a^2*(b + c)*(b^2 + c^2 - 3*b*c) - a*(b - c)^2*
         (3*b^2 + 3*c^2 + 5*b*c) + (b + c)*(b^2 - c^2)^2}, 
     "X5532" -> {b*c*((b - c)^4*(b + c - a)^3)}, 
     "X5533" -> {b*c*(a*(b - c)^4*(b + c)^2 - (b - c)^4*(b + c)^3 + 
         a^5*(b^2 - 4*b*c + c^2) + 2*a^2*(b - c)^2*(b^3 + c^3) - 
         a^4*(b^3 - 3*b^2*c - 3*b*c^2 + c^3) - 2*a^3*(b^4 - 3*b^3*c + 
           5*b^2*c^2 - 3*b*c^3 + c^4))}, "X5534" -> 
      {a^6 - 2*a^5*(b + c) - a^4*(b + c)^2 - 2*a*(b - c)^2*(b + c)^3 + 
        (b - c)^2*(b + c)^4 + 4*a^3*(b^3 + b^2*c + b*c^2 + c^3) - 
        a^2*(b^4 + 6*b^2*c^2 + c^4)}, "X5535" -> 
      {a^6 - a^4*(3*b^2 + 3*c^2 + b*c) + a^3*b*c*(b + c) + 
        a^2*(3*b^4 + 3*c^4 - b^3*c - b*c^3) - a*b*c*(b + c)*(b - c)^2 - 
        (b + c)^2*(b - c)^4}, "X5536" -> 
      {a^5 - a^4*(b + c) - a^3*(2*b^2 + 2*c^2 - b*c) + 2*a^2*(b^3 + c^3) + 
        a*(b - c)^2*(b^2 + c^2 - b*c) - (b + c)*(b - c)^4}, 
     "X5537" -> {a*(a^4 - 2*a^3*(b + c) + 7*a^2*b*c + 
         2*a*(b + c)*(b^2 + c^2 - 3*b*c) - (b - c)^2*(b^2 + c^2 + 3*b*c))}, 
     "X5538" -> {a^6 - 2*a^5*(b + c) - a^4*(b^2 + c^2 - 7*b*c) + 
        a^3*(b + c)*(4*b^2 + 4*c^2 - 5*b*c) - a^2*(b^2 + c^2 - b*c)*
         (b^2 + c^2 + 6*b*c) - a*(b + c)*(b - c)^2*(2*b^2 + 2*c^2 - b*c) + 
        (b + c)^2*(b - c)^4}, "X5539" -> {a^4*b*c - a^3*(b + c)*(b - c)^2 - 
        a^2*b*c*(b^2 + c^2) - a*b*c*(b + c)*(b - c)^2 + b^3*c^3}, 
     "X5540" -> {a^3 - a^2*(b + c) + a*(b^2 + c^2 - b*c) - 
        (b + c)*(b - c)^2}, "X5541" -> {a^3 + a^2*(b + c) - 
        a*(b^2 + c^2 + 5*b*c) - (b + c)*(b^2 + c^2 - 4*b*c)}, 
     "X5542" -> {b*c*(3*a^2*(b + c) - 2*a*(b - c)^2 - (b + c)*(b - c)^2)}, 
     "X5543" -> {b*c*((a - b + c)*(a + b - c)*(5*a^2 + b^2 + c^2 - 6*a*b - 
          6*a*c - 2*b*c))}, "X5544" -> 
      {a*(a^4 + 3*b^4 - 26*b^2*c^2 + 3*c^4 - 4*a^2*(b^2 + c^2))}, 
     "X5545" -> {a/((b + c - a)*(b + c + 3*a)*(b^2 - c^2))}, 
     "X5546" -> {a*(b + c - a)*(a^2 - b^2)*(a^2 - c^2)}, 
     "X5547" -> {a*(b + c - a)*(a^2 + b^2 - 2*c^2)*(a^2 - 2*b^2 + c^2)}, 
     "X5548" -> {a*((b + c - a)/((b - c)*(b + c - 2*a)))}, 
     "X5549" -> {a*((b + c - a)/((b - c)*(2*b + 2*c - a)))}, 
     "X5550" -> {b*c*(5*a + 3*b + 3*c)}, "X5551" -> 
      {b*c*(1/(3*b^2 + 3*c^2 - 3*a^2 + 8*b*c))}, 
     "X5552" -> {b*c*((a + b + c) + (R/r)*(a - b - c))}, 
     "X5553" -> {b*c*(1/((a + b + c)*(b + c - a) - (b^2 + c^2 - a^2)*
           (R/r)))}, "X5554" -> {b*c*((a + b + c) + (r/R)*(a - b - c))}, 
     "X5555" -> {b*c*(1/((a + b + c)*(b + c - a) - (b^2 + c^2 - a^2)*
           (r/R)))}, "X5556" -> 
      {b*c*(1/((a + b + c)*(b + c - a) + 2*(b^2 + c^2 - a^2)))}, 
     "X5557" -> {b*c*(1/((a + b + c)*(b + c - a) - (b^2 + c^2 - a^2)*
           (1/3)))}, "X5558" -> 
      {b*c*(1/((a + b + c)*(b + c - a) - (b^2 + c^2 - a^2)*(2/3)))}, 
     "X5559" -> {b*c*(1/((a + b + c)*(b + c - a) - (b^2 + c^2 - a^2)*
           (5/3)))}, "X5560" -> 
      {b*c*(1/((a + b + c)*(b + c - a) - 5*(b^2 + c^2 - a^2)))}, 
     "X5561" -> {b*c*(1/((a + b + c)*(b + c - a) + 3*(b^2 + c^2 - a^2)))}, 
     "X5562" -> {b*c*(Cot[angleA]*(Csc[2*angleB] + Csc[2*angleC]))}, 
     "X5563" -> {b*c*(a^2*(b^2 + c^2 - a^2 - 3*b*c))}, 
     "X5564" -> {b*c*(b^2 + c^2 - a^2 + 3*b*c)}, 
     "X5565" -> {b*c*(1/(a^4*b^4 + a^4*c^4 - a^2*b^6 - a^2*c^6 + 
          a^2*b^4*c^2 + a^2*b^2*c^4 + 4*a^2*b*c*(b^2 + c^2)*S - 2*b^4*c^4))}, 
     "X5566" -> {b*c*(1/(a^4*b^4 + a^4*c^4 - a^2*b^6 - a^2*c^6 + 
          a^2*b^4*c^2 + a^2*b^2*c^4 - 4*a^2*b*c*(b^2 + c^2)*S - 2*b^4*c^4))}, 
     "X5567" -> {a/(2*a^6 - b^6 - c^6 - a^2*b^4 - a^2*c^4 + b^4*c^2 + 
         b^2*c^4 - 4*b*c*(b^2 + c^2)*S)}, 
     "X5568" -> {a/(2*a^6 - b^6 - c^6 - a^2*b^4 - a^2*c^4 + b^4*c^2 + 
         b^2*c^4 + 4*b*c*(b^2 + c^2)*S)}, 
     "X5569" -> {b*c*(7*a^4 + b^4 + c^4 - 7*a^2*b^2 - 7*a^2*c^2 - 
         4*b^2*c^2)}, "X5570" -> 
      {b*c*(a*(a^5*b + a^5*c - a^4*b^2 - a^4*c^2 - 2*a^3*b^3 - 2*a^3*c^3 + 
          2*a^2*b^4 + 2*a^2*c^4 - 2*a^2*b^3*c - 2*a^2*b*c^3 + 4*a^2*b^2*c^2 + 
          a*b^5 + a*c^5 - a*b^4*c - a*b*c^4 - b^6 - c^6 + 2*b^5*c + 2*b*c^5 + 
          b^4*c^2 + b^2*c^4 - 4*b^3*c^3))}, 
     "X5571" -> {b*c*(a*((b + c - a)*(a*b + a*c - (b - c)^2)*Sin[angleA/2] + 
          b*(c + a - b)^2*Sin[angleB/2] + c*(a + b - c)^2*Sin[angleC/2]))}, 
     "X5572" -> {a^3*b + a^3*c - 3*a^2*b^2 - 3*a^2*c^2 + 3*a*b^3 + 3*a*c^3 - 
        3*a*b^2*c - 3*a*b*c^2 - b^4 - c^4 + 2*b^3*c + 2*b*c^3 - 2*b^2*c^2}, 
     "X5573" -> {b*c*(a*(a^2 + 3*b^2 + 3*c^2 - 6*b*c))}, 
     "X5574" -> {b*c*(a*(b + c - a)^3*(a^2 + 3*b^2 + 3*c^2 - 6*b*c))}, 
     "X5575" -> {b*c*(a*(a^2 - (b - c)^2)*(a^2 + 3*(b - c)^2))}, 
     "X5576" -> {b*c*(b^10 + c^10 - a^8*(b^2 + c^2) + 
         2*a^6*(b^4 + c^4 + b^2*c^2) + 2*a^4*b^2*c^2*(b^2 + c^2) - 
         2*a^2*(b^8 + c^8 - 2*b^4*c^4) - 3*b^8*c^2 - 3*b^2*c^8 + 2*b^6*c^4 + 
         2*b^4*c^6)}, "X5577" -> {b*c*(a^2*(b + c - a)*(b - c)^2*
         (b^2 + c^2 - a^2 - 4*b*c)^2)}, "X5578" -> 
      {b*c*((b + c - a)*(b - c)^2*(a^5 + a^4*b + a^4*c - a^3*b^2 - a^3*c^2 - 
           a^3*b*c - a^2*b^3 - a^2*c^3 - a*b^3*c - a*b*c^3 - 2*a*b^2*c^2 + 
           b^4*c + b*c^4 - b^3*c^2 - b^2*c^3)^2)}, 
     "X5579" -> {b*c*((b + c - a)*(a^3*b + a^3*c + a^2*b^2 + a^2*c^2 - 
           2*a^2*b*c - a*b^2*c - a*b*c^2 + b^3*c - 2*b^2*c^2 + b*c^3)^2)}, 
     "X5580" -> {b*c*(a^2*(b + c - a)*(b^3 + c^3 + a^2*b + a^2*c - 2*a*b^2 - 
           2*a*c^2 + 2*a*b*c - b^2*c - b*c^2)^2)}, 
     "X5581" -> {b*c*(a^2*(b + c - a)*(b - c)^2*
         (2*a^2*b + 2*a^2*c - 2*a*b^2 - 2*a*c^2 + a*b*c + b^2*c + b*c^2)^2)}, 
     "X5582" -> {b*c*(a^2*(b - c)^2*(a^3 - 5*(b + c)*a^2 + 
           (5*b^2 + b*c + 5*c^2)*a - b^3 - c^3)^2*(-a + b + c))}, 
     "X5583" -> {b*c*((b + c - a)*(b - c)*(4*a^5 + b^5 + c^5 - a^4*b - 
          a^4*c - 2*a^3*b^2 - 2*a^3*c^2 + 4*a^2*b^2*c + 4*a^2*b*c^2 - 
          2*a*b^4 - 2*a*c^4 + 4*a*b^2*c^2 - 3*b^4*c - 3*b*c^4 + 2*b^3*c^2 + 
          2*b^2*c^3))}, "X5584" -> 
      {b*c*(a^2*(b^5 + c^5 - a^5 + a^4*b + a^4*c + 2*a^3*b^2 + 2*a^3*c^2 + 
          4*a^3*b*c - 2*a^2*b^3 - 2*a^2*c^3 + 2*a^2*b^2*c + 2*a^2*b*c^2 - 
          a*b^4 - a*c^4 - 4*a*b^3*c - 4*a*b*c^3 - 6*a*b^2*c^2 - 3*b^4*c - 
          3*b*c^4 + 2*b^3*c^2 + 2*b^2*c^3))}, 
     "X5585" -> {b*c*(a^2*(11*b^2 + 11*c^2 - 13*a^2))}, 
     "X5586" -> {b*c*((a - b + c)*(a + b - c)*(3*a + b + c)*
         (a + 2*b + 2*c))}, "X5587" -> 
      {b*c*(2*b^4 + 2*c^4 - a^4 + a^3*b + a^3*c - a^2*b^2 - a^2*c^2 - 
         2*a^2*b*c - a*b^3 - a*c^3 + a*b^2*c + a*b*c^2 - 4*b^2*c^2)}, 
     "X5588" -> {b*c*(a*(a^2 - b^2 - c^2 + 2*a*b + 2*a*c - S))}, 
     "X5589" -> {b*c*(a*(a^2 - b^2 - c^2 + 2*a*b + 2*a*c + S))}, 
     "X5590" -> {b*c*(b^2 + c^2 + S)}, "X5591" -> {b*c*(b^2 + c^2 - S)}, 
     "X5592" -> {b*c*((b - c)*(3*a^3 + b^3 + c^3 - 2*a^2*b - 2*a^2*c - 
          a*b*c))}, "X5593" -> {a*SA*(SA - SB)*(SA - SC)*
        (b^2*SB*SB*(S^2 - SC*SC)*(4*S^4 - (S^2 + SA*SC)*(3*S^2 + SB*SB - 
             2*SA*SC)) - c^2*SC*SC*(S^2 - SB*SB)*(4*S^4 - 
           (S^2 + SA*SB)*(3*S^2 + SC*SC - 2*SA*SB)))}, 
     "X5594" -> {a*(a^6 - b^6 - c^6 + a^4*b^2 + a^4*c^2 - a^2*b^4 - a^2*c^4 - 
         2*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 + (a^2 - b^2 + c^2)*
          (a^2 + b^2 - c^2)*S)}, "X5595" -> 
      {a*(a^6 - b^6 - c^6 + a^4*b^2 + a^4*c^2 - a^2*b^4 - a^2*c^4 - 
         2*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 - (a^2 - b^2 + c^2)*
          (a^2 + b^2 - c^2)*S)}, "X5596" -> 
      {b*c*(b^8 + c^8 - 3*a^8 + 2*a^4*b^4 + 2*a^4*c^4 - 2*b^4*c^4)}, 
     "X5597" -> {b*c*(a^4 - a^2*(b + c)^2 + 4*a*S*(r*R + 4*R^2)^(1/2))}, 
     "X5598" -> {b*c*(a^4 - a^2*(b + c)^2 - 4*a*S*(r*R + 4*R^2)^(1/2))}, 
     "X5599" -> {b*c*(a^4 - a^2*(b + c)^2 - 4*S*(b + c)*
          (r*R + 4*R^2)^(1/2))}, "X5600" -> 
      {b*c*(a^4 - a^2*(b + c)^2 + 4*S*(b + c)*(r*R + 4*R^2)^(1/2))}, 
     "X5603" -> {b*c*(a^4 + b^4 + c^4 - 2*a^3*b - 2*a^3*c - 2*a^2*b^2 - 
         2*a^2*c^2 + 4*a^2*b*c + 2*a*b^3 + 2*a*c^3 - 2*a*b^2*c - 2*a*b*c^2 - 
         2*b^2*c^2)}, "X5604" -> 
      {b*c*(a*(a^2 + 2*b^2 + 2*c^2 - a*b - a*c + 2*S))}, 
     "X5605" -> {b*c*(a*(a^2 + 2*b^2 + 2*c^2 - a*b - a*c - 2*S))}, 
     "X5606" -> {b*c*(a/((b - c)*(a^3 + b^3 + c^3 - a^2*b - a^2*c - a*b^2 - 
           a*c^2 - a*b*c + 3*b^2*c + 3*b*c^2)))}, 
     "X5607" -> {a*(b^2 - c^2)*(3^(1/2)*(a^8 - 3*a^6*b^2 - 3*a^6*c^2 + 
           3*a^4*b^4 + 3*a^4*c^4 - a^4*b^2*c^2 - a^2*b^6 - a^2*c^6 + 
           2*b^4*c^4) + 2*S*(a^6 - 2*b^6 - 2*c^6 - 4*a^4*b^2 - 4*a^4*c^2 + 
           5*a^2*b^4 + 5*a^2*c^4 - 3*a^2*b^2*c^2 + 2*b^4*c^2 + 2*b^2*c^4))}, 
     "X5608" -> {a*(b^2 - c^2)*(3^(1/2)*(a^8 - 3*a^6*b^2 - 3*a^6*c^2 + 
           3*a^4*b^4 + 3*a^4*c^4 - a^4*b^2*c^2 - a^2*b^6 - a^2*c^6 + 
           2*b^4*c^4) - 2*S*(a^6 - 2*b^6 - 2*c^6 - 4*a^4*b^2 - 4*a^4*c^2 + 
           5*a^2*b^4 + 5*a^2*c^4 - 3*a^2*b^2*c^2 + 2*b^4*c^2 + 2*b^2*c^4))}, 
     "X5609" -> {a*(2*a^8 - 7*a^6*(b^2 + c^2) + (b^2 - c^2)^2*
          (b^4 + 5*b^2*c^2 + c^4) + a^4*(9*b^4 + 4*b^2*c^2 + 9*c^4) - 
         5*a^2*(b^6 + c^6))}, "X5610" -> 
      {b*c*(a^2*(-2*Sqrt[3]*(a^8 - 4*(b^2 + c^2)*a^6 + 
            3*(2*b^4 - b^2*c^2 + 2*c^4)*a^4 - (b^2 + c^2)*
             (5*b^4 - 11*b^2*c^2 + 5*c^4)*a^2 + (2*b^2 - c^2)*(b^2 - 2*c^2)*
             (b^2 + c^2)^2)*S + a^10 - 5*(b^2 + c^2)*a^8 + 
          (10*b^4 + 31*b^2*c^2 + 10*c^4)*a^6 - (b^2 + c^2)*
           (11*b^4 + 16*b^2*c^2 + 11*c^4)*a^4 + 
          (7*b^8 + 7*c^8 + 10*b^2*c^2*(b^4 + c^4))*a^2 - 
          (b^4 - c^4)*(b^2 - c^2)*(2*b^4 + 7*b^2*c^2 + 2*c^4)))}, 
     "X5611" -> {a*(S^2 + 3^(1/2)*S*SA - SA*SA + SB*SC)}, 
     "X5612" -> {b*c*(a^2*(-2*S + (-a^2 + b^2 + c^2)*Sqrt[3])*
         (a^6 - 3*(b^2 + c^2)*a^4 + (3*b^4 - b^2*c^2 + 3*c^4)*a^2 - 
          (b^4 - c^4)*(b^2 - c^2)))}, "X5613" -> 
      {b*c*(2*S^3 - 3^(1/2)*(S^2*SA + (SA + SB + SC)*SB*SC))}, 
     "X5614" -> {b*c*(a^2*(2*Sqrt[3]*(a^8 - 4*(b^2 + c^2)*a^6 + 
            3*(2*b^4 - b^2*c^2 + 2*c^4)*a^4 - (b^2 + c^2)*
             (5*b^4 - 11*b^2*c^2 + 5*c^4)*a^2 + (2*b^2 - c^2)*(b^2 - 2*c^2)*
             (b^2 + c^2)^2)*S + a^10 - 5*(b^2 + c^2)*a^8 + 
          (10*b^4 + 31*b^2*c^2 + 10*c^4)*a^6 - (b^2 + c^2)*
           (11*b^4 + 16*b^2*c^2 + 11*c^4)*a^4 + 
          (7*b^8 + 7*c^8 + 10*b^2*c^2*(b^4 + c^4))*a^2 - 
          (b^4 - c^4)*(b^2 - c^2)*(2*b^4 + 7*b^2*c^2 + 2*c^4)))}, 
     "X5615" -> {a*(S^2 - 3^(1/2)*S*SA - SA*SA + SB*SC)}, 
     "X5616" -> {b*c*(a^2*(2*S + (-a^2 + b^2 + c^2)*Sqrt[3])*
         (a^6 - 3*(b^2 + c^2)*a^4 + (3*b^4 - b^2*c^2 + 3*c^4)*a^2 - 
          (b^4 - c^4)*(b^2 - c^2)))}, "X5617" -> 
      {b*c*(2*S^3 + 3^(1/2)*(S^2*SA + (SA + SB + SC)*SB*SC))}, 
     "X5618" -> {b*(c/((b^2 - c^2)*(27^(1/2)*b^2*c^2*SA + 
           S*(S^2 + 9*SA*SA))))}, "X5619" -> 
      {b*(c/((b^2 - c^2)*(27^(1/2)*b^2*c^2*SA - S*(S^2 + 9*SA*SA))))}, 
     "X5620" -> {b*c*((b + c)*(a^6 - a^4*(b^2 + c^2) - 
          a^2*(b^4 + c^4 - 3*b^2*c^2) - 2*a*b*c*(b + c)*(b - c)^2 + 
          (b + c)^2*(b - c)^4))}, "X5621" -> 
      {a*(a^10 - a^8*(b^2 + c^2) + 2*a^4*(b^2 - c^2)^2*(b^2 + c^2) + 
         a^6*(-2*b^4 + 5*b^2*c^2 - 2*c^4) + a^2*(b^2 - c^2)^2*
          (b^4 + 3*b^2*c^2 + c^4) - (b^2 - c^2)^2*(b^6 + 5*b^4*c^2 + 
           5*b^2*c^4 + c^6))}, "X5622" -> 
      {b*c*(a^2*(a^2 - b^2 - c^2)*(a^8 - a^6*(b^2 + c^2) - 
          a^4*(b^4 - 3*b^2*c^2 + c^4) + a^2*(b^2 - c^2)^2*(b^2 + c^2) + 
          3*b^2*c^2*(b^2 - c^2)^2))}, "X5623" -> 
      {bLineIntersection[bLine[KimberlingCenterB[13], KimberlingCenterB[74]], 
          bLine[KimberlingCenterB[16], KimberlingCenterB[1138]]][[1]]/a}, 
     "X5624" -> {bLineIntersection[bLine[KimberlingCenterB[14], 
           KimberlingCenterB[74]], bLine[KimberlingCenterB[15], 
           KimberlingCenterB[1138]]][[1]]/a}, 
     "X5625" -> {b*c*((2*a + b + c)*(a^2 + 2*a*b + 2*a*c + b*c))}, 
     "X5627" -> {b*(c/((a^2*SA - 2*SB*SC)*(S^2 - 3*SA*SA)))}, 
     "X5628" -> {Cos[angleA/3]*Sec[2*(angleA/3)]}, 
     "X5629" -> {Cos[2*(angleA/3)]*Sec[angleA/3]}, 
     "X5630" -> {Cos[(angleA - 2*Pi)/3]*Sec[(2*angleA - 4*Pi)/3]}, 
     "X5631" -> {Cos[(2*angleA - 4*Pi)/3]*Sec[(angleA - 2*Pi)/3]}, 
     "X5632" -> {Cos[(angleA - 4*Pi)/3]*Sec[(2*angleA - 8*Pi)/3]}, 
     "X5633" -> {Cos[(2*angleA - 8*Pi)/3]*Sec[(angleA - 4*Pi)/3]}, 
     "X5634" -> {Cos[2*(angleA/3)]*Cos[angleB/3]*Cos[angleC/3] - 
        Cos[angleA/3]*Cos[2*(angleB/3)]*Cos[2*(angleC/3)]}, 
     "X5635" -> {Cos[2*((angleA - 2*Pi)/3)]*Cos[(angleB - 2*Pi)/3]*
         Cos[(angleC - 2*Pi)/3] - Cos[(angleA - 2*Pi)/3]*
         Cos[(2*angleB - 4*Pi)/3]*Cos[(2*angleC - 4*Pi)/3]}, 
     "X5636" -> {Cos[(2*angleA - 8*Pi)/3]*Cos[(angleB - 4*Pi)/3]*
         Cos[(angleC - 4*Pi)/3] - Cos[(angleA - 4*Pi)/3]*
         Cos[(2*angleB - 8*Pi)/3]*Cos[(2*angleC - 8*Pi)/3]}, 
     "X5637" -> {Sin[angleB/3 - angleC/3]}, 
     "X5638" -> {a*((-b^2)*c^2*(b^2 - c^2)^2 + a^6*(b^2 + c^2) - 
         a^4*(b^2 + c^2)*(b^2 + c^2 + Sqrt[a^4 + b^4 - b^2*c^2 + c^4 - 
             a^2*(b^2 + c^2)]) + a^2*(b^2*c^4 + 
           c^4*Sqrt[a^4 + b^4 - b^2*c^2 + c^4 - a^2*(b^2 + c^2)] + 
           b^4*(c^2 + Sqrt[a^4 + b^4 - b^2*c^2 + c^4 - a^2*(b^2 + c^2)])))}, 
     "X5639" -> {a*((-b^2)*c^2*(b^2 - c^2)^2 + a^6*(b^2 + c^2) + 
         a^4*(b^2 + c^2)*(-b^2 - c^2 + Sqrt[a^4 + b^4 - b^2*c^2 + c^4 - 
             a^2*(b^2 + c^2)]) + a^2*(b^2*c^4 - 
           c^4*Sqrt[a^4 + b^4 - b^2*c^2 + c^4 - a^2*(b^2 + c^2)] + 
           b^4*(c^2 - Sqrt[a^4 + b^4 - b^2*c^2 + c^4 - a^2*(b^2 + c^2)])))}, 
     "X5640" -> {b*c*(a^2*(a^2*b^2 + a^2*c^2 + 3*b^2*c^2 - b^4 - c^4))}, 
     "X5641" -> {b*c*(1/(2*a^6 - 2*a^4*(b^2 + c^2) + a^2*(b^4 + c^4) - 
          (b^2 - c^2)^2*(b^2 + c^2)))}, "X5642" -> 
      {b*c*((2*a^2 - b^2 - c^2)*(2*a^4 - a^2*b^2 - a^2*c^2 + 2*b^2*c^2 - 
          b^4 - c^4))}, "X5643" -> {a*(13*S^2 + 7*SA^2 + 2*SB*SC)}, 
     "X5644" -> {a*(7*S^2 + 3*SA^2 + SB*SC)}, 
     "X5645" -> {a*(31*S^2 + 11*SA^2 + 4*SB*SC)}, 
     "X5646" -> {a*(7*S^2 + 8*SA^2 - 2*SB*SC)}, 
     "X5648" -> {b*c*((a^6 - a^4*(b^2 + c^2) + (b^2 - c^2)^2*(b^2 + c^2) - 
          a^2*(b^4 + c^4))*(a^8 + 3*a^6*(b^2 + c^2) + (b^4 - c^4)^2 - 
          a^4*(2*b^4 + 11*b^2*c^2 + 2*c^4) + a^2*(-3*b^6 + 7*b^4*c^2 + 
            7*b^2*c^4 - 3*c^6)))}, "X5649" -> 
      {a/((b^2 - c^2)*(2*a^6 - b^6 - c^6 - 2*a^4*b^2 - 2*a^4*c^2 + a^2*b^4 + 
          a^2*c^4 + b^4*c^2 + b^2*c^4))}, 
     "X5650" -> {b*c*(a^2*(b^4 + c^4 - a^2*b^2 - a^2*c^2 + 6*b^2*c^2))}, 
     "X5651" -> {b*c*(a^2*(a^4 - a^2*b^2 - a^2*c^2 + 4*b^2*c^2))}, 
     "X5652" -> {b*c*((b^2 - c^2)*(3*a^6 - 2*a^4*(b^2 + c^2) + 
          a^2*(b^4 - 3*b^2*c^2 + c^4) + b^2*c^2*(b^2 + c^2)))}, 
     "X5653" -> {b*c*(a^2*(b^2 - c^2)*(a^10 + a^8*(b^2 + c^2) - 
          a^6*(5*b^4 + 8*b^2*c^2 + 5*c^4) + a^4*(b^6 + 15*b^4*c^2 + 
            15*b^2*c^4 + c^6) + a^2*(4*b^8 - 14*b^6*c^2 - 3*b^4*c^4 - 
            14*b^2*c^6 + 4*c^8) - 2*b^10 + 4*b^8*c^2 + b^6*c^4 + b^4*c^6 + 
          4*b^2*c^8 - 2*c^10))}, "X5654" -> 
      {b*c*((a^2 - b^2 - c^2)*(a^8 - 4*a^6*(b^2 + c^2) + 
          4*a^4*(b^4 - b^2*c^2 + c^4) - (b^2 - c^2)^4))}, 
     "X5655" -> {b*c*(a^10 - 6*a^8*(b^2 + c^2) + 
         a^6*(11*b^4 - b^2*c^2 + 11*c^4) - a^4*(7*b^6 - 2*b^4*c^2 - 
           2*b^2*c^4 + 7*c^6) + 8*a^2*b^2*c^2*(b^2 - c^2)^2 + 
         (b^2 - c^2)^4*(b^2 + c^2))}, "X5656" -> 
      {b*c*(a^10 - 7*a^8*(b^2 + c^2) + 2*a^6*(7*b^4 - 6*b^2*c^2 + 7*c^4) - 
         10*a^4*(b^2 - c^2)^2*(b^2 + c^2) + a^2*(b^2 - c^2)^2*
          (b^4 + 14*b^2*c^2 + c^4) + (b^2 - c^2)^4*(b^2 + c^2))}, 
     "X5657" -> {b*c*(a^4 + 2*a^3*(b + c) - 2*a^2*(b + c)^2 - 
         2*a*(b - c)^2*(b + c) + (b^2 - c^2)^2)}, 
     "X5658" -> {b*c*(a^6 - 4*a^5*(b + c) + a^4*(3*b^2 + 2*b*c + 3*c^2) + 
         4*a^3*(b - c)^2*(b + c) - 5*a^2*(b^2 - c^2)^2 + 
         8*a*b*c*(b - c)^2*(b + c) + (b - c)^4*(b + c)^2)}, 
     "X5659" -> {b*c*(a^6 - a^5*(b + c) - a^4*(3*b^2 + b*c + 3*c^2) + 
         2*a^3*(b + c)*(2*b^2 - b*c + 2*c^2) + a^2*(b - c)^2*
          (b^2 - b*c + c^2) - a*(b - c)^2*(b + c)*(3*b^2 - 2*b*c + 3*c^2) + 
         (b - c)^4*(b + c)^2)}, "X5660" -> 
      {b*c*(a^6 - 3*a^5*(b + c) + a^4*(b^2 + 7*b*c + c^2) + 
         2*a^3*(b - 2*c)*(2*b - c)*(b + c) - 3*a^2*(b - c)^2*
          (b^2 + 3*b*c + c^2) - a*(b - c)^2*(b + c)*(b^2 - 6*b*c + c^2) + 
         (b - c)^4*(b + c)^2)}, "X5661" -> 
      {b*c*(a^2*(a^6*b^4 + a^6*c^4 - 2*a^4*b^6 - 2*a^4*c^6 + a^2*b^8 + 
          a^2*c^8 - a^2*b^6*c^2 - a^2*b^2*c^6 + 2*a^2*b^4*c^4 + b^8*c^2 + 
          b^2*c^8 - b^6*c^4 - b^4*c^6))}, 
     "X5662" -> {(a - b)*(a^2 + 2*a*b + b^2 - c^2)*
         ((-c)*(-a + c)*(-b + c)*(-a^2 + b^2 + c^2)*((-(a - b)^2)*(a + b) - 
            2*a*b*c + (a + b)*c^2) + a*(a - b)*(a - c)*(a^2 + b^2 - c^2)*
           (-2*a*b*c + a^2*(b + c) - (b - c)^2*(b + c))) + 
        (a - c)*(a^2 - b^2 + 2*a*c + c^2)*(b*(-a + b)*(b - c)*
           (-a^2 + b^2 + c^2)*(-2*a*b*c + b^2*(a + c) - (a - c)^2*(a + c)) - 
          a*(a - b)*(a - c)*(a^2 - b^2 + c^2)*(-2*a*b*c + a^2*(b + c) - 
            (b - c)^2*(b + c)))}, "X5664" -> 
      {b*c*((b^2 - c^2)*(2*a^4 - b^4 - c^4 - a^2*b^2 - a^2*c^2 + 2*b^2*c^2)*
         (b^2 + c^2 - a^2 - b*c)*(b^2 + c^2 - a^2 + b*c))}, 
     "X5665" -> {1/((sp - a)*(sp^2 - SA))}, 
     "X5666" -> {(sp*(sp^2 + 4*r^2 + 2*b*c) - (b + c)*(sp^2 + 2*r^2))/
        (sp - a)}, "X5667" -> {b*c*((3*a^12 - 7*a^10*(b^2 + c^2) - 
          a^8*(b^4 - 21*b^2*c^2 + c^4) + (b^2 - c^2)^4*(b^4 + b^2*c^2 + 
            c^4) - a^4*(b^2 - c^2)^2*(11*b^4 + 24*b^2*c^2 + 11*c^4) + 
          a^2*(b^2 - c^2)^2*(b^6 + 11*b^4*c^2 + 11*b^2*c^4 + c^6) + 
          2*a^6*(7*b^6 - 9*b^4*c^2 - 9*b^2*c^4 + 7*c^6))/
         (-a^2 + b^2 + c^2))}, "X5668" -> 
      {b*c*(a^2*(2*S + (-a^2 + b^2 + c^2)*Sqrt[3])*
         (-2*(a^10 + (b^2 + c^2)*a^8 - (8*b^4 - 9*b^2*c^2 + 8*c^4)*a^6 + 
            2*(b^2 + c^2)*(4*b^4 - 7*b^2*c^2 + 4*c^4)*a^4 - 
            (b^2 - c^2)^2*(b^4 + 9*b^2*c^2 + c^4)*a^2 - (b^4 - c^4)*
             (b^2 - c^2)^3)*S + Sqrt[3]*(a^2 + b^2 - c^2)*
           (a^8 - 4*(b^2 + c^2)*a^6 + (6*b^4 + b^2*c^2 + 6*c^4)*a^4 - 
            (b^2 + c^2)*(4*b^4 - 5*b^2*c^2 + 4*c^4)*a^2 + 
            (b^4 + 4*b^2*c^2 + c^4)*(b^2 - c^2)^2)*(a^2 - b^2 + c^2)))}, 
     "X5669" -> {b*c*(a^2*(-2*S + (-a^2 + b^2 + c^2)*Sqrt[3])*
         (2*(a^10 + (b^2 + c^2)*a^8 - (8*b^4 - 9*b^2*c^2 + 8*c^4)*a^6 + 
            2*(b^2 + c^2)*(4*b^4 - 7*b^2*c^2 + 4*c^4)*a^4 - 
            (b^2 - c^2)^2*(b^4 + 9*b^2*c^2 + c^4)*a^2 - (b^4 - c^4)*
             (b^2 - c^2)^3)*S + Sqrt[3]*(a^2 + b^2 - c^2)*
           (a^8 - 4*(b^2 + c^2)*a^6 + (6*b^4 + b^2*c^2 + 6*c^4)*a^4 - 
            (b^2 + c^2)*(4*b^4 - 5*b^2*c^2 + 4*c^4)*a^2 + 
            (b^4 + 4*b^2*c^2 + c^4)*(b^2 - c^2)^2)*(a^2 - b^2 + c^2)))}, 
     "X5670" -> {b*c*((a^8 + 2*(b^2 - 2*c^2)*a^6 - (6*b^4 - b^2*c^2 - 6*c^4)*
           a^4 + (b^2 - c^2)*(2*b^4 + 3*b^2*c^2 + 4*c^4)*a^2 + (b^2 - c^2)^4)*
         (a^8 - 2*(2*b^2 - c^2)*a^6 + (6*b^4 + b^2*c^2 - 6*c^4)*a^4 - 
          (b^2 - c^2)*(4*b^4 + 3*b^2*c^2 + 2*c^4)*a^2 + (b^2 - c^2)^4)*
         (5*a^24 - 27*(b^2 + c^2)*a^22 + 3*(10*b^4 + 53*b^2*c^2 + 10*c^4)*
           a^20 + (b^2 + c^2)*(121*b^4 - 472*b^2*c^2 + 121*c^4)*a^18 - 
          3*(153*b^8 + 153*c^8 - (81*b^4 + 329*b^2*c^2 + 81*c^4)*b^2*c^2)*
           a^16 + 3*(b^2 + c^2)*(222*b^8 + 222*c^8 - 
            (78*b^4 + 353*b^2*c^2 + 78*c^4)*b^2*c^2)*a^14 - 
          (420*b^12 + 420*c^12 + (1260*b^8 + 1260*c^8 - (1143*b^4 + 
                1223*b^2*c^2 + 1143*c^4)*b^2*c^2)*b^2*c^2)*a^12 - 
          6*(b^2 + c^2)*(9*b^12 + 9*c^12 - (261*b^8 + 261*c^8 - 
              (389*b^4 - 272*b^2*c^2 + 389*c^4)*b^2*c^2)*b^2*c^2)*a^10 + 
          3*(b^2 - c^2)^2*(93*b^12 + 93*c^12 - 2*(81*b^8 + 81*c^8 + 
              (199*b^4 + 80*b^2*c^2 + 199*c^4)*b^2*c^2)*b^2*c^2)*a^8 - 
          (b^4 - c^4)*(b^2 - c^2)*(191*b^12 + 191*c^12 - 
            2*(98*b^8 + 98*c^8 + (232*b^4 - 307*b^2*c^2 + 232*c^4)*b^2*c^2)*
             b^2*c^2)*a^6 + 3*(b^2 - c^2)^4*(18*b^12 + 18*c^12 + 
            (63*b^8 + 63*c^8 + (17*b^4 - 61*b^2*c^2 + 17*c^4)*b^2*c^2)*b^2*
             c^2)*a^4 - 3*(b^2 - c^2)^6*(b^2 + c^2)*(b^8 + c^8 + 
            4*(4*b^4 + 5*b^2*c^2 + 4*c^4)*b^2*c^2)*a^2 - 
          (b^6 - c^6)*(b^2 - c^2)^9))}, "X5671" -> 
      {b*c*((a^6 - (b^2 + 3*c^2)*a^4 - (b^4 - b^2*c^2 - 3*c^4)*a^2 + 
          (b^2 - c^2)^3)*(a^6 - (3*b^2 + c^2)*a^4 + (3*b^4 + b^2*c^2 - c^4)*
           a^2 - (b^2 - c^2)^3)*(4*a^16 - 17*(b^2 + c^2)*a^14 + 
          (19*b^4 + 58*b^2*c^2 + 19*c^4)*a^12 + (b^2 + c^2)*
           (19*b^4 - 100*b^2*c^2 + 19*c^4)*a^10 - 
          (65*b^8 + 65*c^8 - 2*(38*b^4 + 27*b^2*c^2 + 38*c^4)*b^2*c^2)*a^8 + 
          (b^2 + c^2)*(61*b^8 + 61*c^8 - (120*b^4 - 109*b^2*c^2 + 120*c^4)*
             b^2*c^2)*a^6 - (b^2 - c^2)^2*(23*b^8 + 23*c^8 + 
            (28*b^4 - 3*b^2*c^2 + 28*c^4)*b^2*c^2)*a^4 + 
          (b^4 - c^4)*(b^2 - c^2)^3*(b^4 + 16*b^2*c^2 + c^4)*a^2 + 
          (b^2 - c^2)^8))}, "X5672" -> 
      {b*c*(a*(2*(-a + b + c)*S + (a^3 + (b + c)*a^2 - (b + c)^2*a - 
            (b^2 - c^2)*(b - c))*Sqrt[3])*
         (-2*(a^10 - 3*(b + c)*a^9 + (b^2 - 4*b*c + c^2)*a^8 + 
            6*(b^3 + c^3)*a^7 - (8*b^4 + 8*c^4 - b*c*(4*b^2 + 9*b*c + 4*c^2))*
             a^6 + 3*(b + c)*(3*b^2 - 7*b*c + 3*c^2)*b*c*a^5 + 
            (8*b^4 + 8*c^4 + b*c*(19*b^2 + 24*b*c + 19*c^2))*(b - c)^2*a^4 - 
            6*(b^2 - c^2)*(b - c)*(b^4 + c^4 + b*c*(2*b^2 + b*c + 2*c^2))*
             a^3 - (b^2 - c^2)^2*(b^4 + c^4 + b*c*(2*b^2 + 9*b*c + 2*c^2))*
             a^2 + 3*(b^2 - c^2)^2*(b + c)*(b^4 + c^4 - b*c*(b^2 - 3*b*c + 
                c^2))*a - (b^2 - c^2)^3*(b + c)*(b^3 - c^3))*S + 
          Sqrt[3]*(a^12 - (b + c)*a^11 - 2*(2*b^2 - b*c + 2*c^2)*a^10 + 
            (b + c)*(5*b^2 - 8*b*c + 5*c^2)*a^9 + (b^2 + b*c + c^2)*
             (5*b^2 - 7*b*c + 5*c^2)*a^8 - (b + c)*(10*b^4 + 10*c^4 - 
              b*c*(23*b^2 - 27*b*c + 23*c^2))*a^7 - 
            (3*b^4 + 3*c^4 + b*c*(3*b^2 - 8*b*c + 3*c^2))*b*c*a^6 + 
            (b^2 - c^2)*(b - c)*(10*b^4 + 10*c^4 - b*c*(b^2 - 21*b*c + c^2))*
             a^5 - (b^2 - c^2)^2*(5*b^4 + 5*c^4 - b*c*(b^2 + 3*b*c + c^2))*
             a^4 - (b^2 - c^2)*(b - c)*(5*b^6 + 5*c^6 + (5*b^4 + 5*c^4 + 
                2*b*c*(5*b^2 - 2*b*c + 5*c^2))*b*c)*a^3 + 
            (b^2 - c^2)*(b + c)^3*(b^3 - c^3)*(4*b^2 - 7*b*c + 4*c^2)*a^2 + 
            (b^2 - c^2)^3*(b - c)*(b^4 + c^4 + b*c*(3*b^2 + b*c + 3*c^2))*a - 
            (b^2 - c^2)^3*(b + c)^3*(b^3 - c^3))))}, 
     "X5673" -> {b*c*(a*(-2*(-a + b + c)*S + (a^3 + (b + c)*a^2 - 
            (b + c)^2*a - (b^2 - c^2)*(b - c))*Sqrt[3])*
         (2*(a^10 - 3*(b + c)*a^9 + (b^2 - 4*b*c + c^2)*a^8 + 
            6*(b^3 + c^3)*a^7 - (8*b^4 + 8*c^4 - b*c*(4*b^2 + 9*b*c + 4*c^2))*
             a^6 + 3*(b + c)*(3*b^2 - 7*b*c + 3*c^2)*b*c*a^5 + 
            (8*b^4 + 8*c^4 + b*c*(19*b^2 + 24*b*c + 19*c^2))*(b - c)^2*a^4 - 
            6*(b^2 - c^2)*(b - c)*(b^4 + c^4 + b*c*(2*b^2 + b*c + 2*c^2))*
             a^3 - (b^2 - c^2)^2*(b^4 + c^4 + b*c*(2*b^2 + 9*b*c + 2*c^2))*
             a^2 + 3*(b^2 - c^2)^2*(b + c)*(b^4 + c^4 - b*c*(b^2 - 3*b*c + 
                c^2))*a - (b^2 - c^2)^3*(b + c)*(b^3 - c^3))*S + 
          Sqrt[3]*(a^12 - (b + c)*a^11 - 2*(2*b^2 - b*c + 2*c^2)*a^10 + 
            (b + c)*(5*b^2 - 8*b*c + 5*c^2)*a^9 + (b^2 + b*c + c^2)*
             (5*b^2 - 7*b*c + 5*c^2)*a^8 - (b + c)*(10*b^4 + 10*c^4 - 
              b*c*(23*b^2 - 27*b*c + 23*c^2))*a^7 - 
            (3*b^4 + 3*c^4 + b*c*(3*b^2 - 8*b*c + 3*c^2))*b*c*a^6 + 
            (b^2 - c^2)*(b - c)*(10*b^4 + 10*c^4 - b*c*(b^2 - 21*b*c + c^2))*
             a^5 - (b^2 - c^2)^2*(5*b^4 + 5*c^4 - b*c*(b^2 + 3*b*c + c^2))*
             a^4 - (b^2 - c^2)*(b - c)*(5*b^6 + 5*c^6 + (5*b^4 + 5*c^4 + 
                2*b*c*(5*b^2 - 2*b*c + 5*c^2))*b*c)*a^3 + 
            (b^2 - c^2)*(b + c)^3*(b^3 - c^3)*(4*b^2 - 7*b*c + 4*c^2)*a^2 + 
            (b^2 - c^2)^3*(b - c)*(b^4 + c^4 + b*c*(3*b^2 + b*c + 3*c^2))*a - 
            (b^2 - c^2)^3*(b + c)^3*(b^3 - c^3))))}, 
     "X5674" -> {b*c*(a^2*(2*(a^6 - 6*(b^2 + c^2)*a^4 + 
            (3*b^4 - b^2*c^2 + 3*c^4)*a^2 + (b^2 + c^2)*(2*b^4 - b^2*c^2 + 
              2*c^4))*S + (a^8 - (b^2 + c^2)*a^6 - 3*(b^4 + 3*b^2*c^2 + c^4)*
             a^4 + (b^2 + c^2)*(5*b^4 - 2*b^2*c^2 + 5*c^4)*a^2 - 
            (2*b^4 - 3*b^2*c^2 + 2*c^4)*(b^2 - c^2)^2)*Sqrt[3])*
         (2*(a^16 - 3*(b^2 + c^2)*a^14 + 2*(b^4 + 13*b^2*c^2 + c^4)*a^12 + 
            (b^2 + c^2)*((b^2 + c^2)^2 - 36*b^2*c^2)*a^10 + 
            3*(4*b^4 + 11*b^2*c^2 + 4*c^4)*b^2*c^2*a^8 - (b^2 + c^2)*
             (b^8 + c^8 + b^2*c^2*(9*b^4 - 11*b^2*c^2 + 9*c^4))*a^6 - 
            (b^2 - c^2)^2*(2*b^8 + 2*c^8 - b^2*c^2*(11*b^4 - 15*b^2*c^2 + 
                11*c^4))*a^4 + 3*(b^4 - c^4)*(b^2 - c^2)*(b^8 + c^8 - 
              b^2*c^2*(5*b^4 - 11*b^2*c^2 + 5*c^4))*a^2 - (b^2 - c^2)^4*
             (b^8 + c^8 - b^2*c^2*(7*b^4 + 24*b^2*c^2 + 7*c^4)))*S + 
          (a^18 - 6*(b^2 + c^2)*a^16 + 3*(5*b^4 + 8*b^2*c^2 + 5*c^4)*a^14 - 
            (b^2 + c^2)*(21*b^4 + 8*b^2*c^2 + 21*c^4)*a^12 + 
            3*(7*b^8 + 7*c^8 - b^2*c^2*(4*b^4 - 21*b^2*c^2 + 4*c^4))*a^10 - 
            3*(b^2 + c^2)*(7*b^8 + 7*c^8 - b^2*c^2*(29*b^4 - 48*b^2*c^2 + 
                29*c^4))*a^8 + (21*b^8 + 21*c^8 - 2*b^2*c^2*(13*b^4 + 
                48*b^2*c^2 + 13*c^4))*(b^2 - c^2)^2*a^6 - 3*(b^4 - c^4)*
             (b^2 - c^2)*(5*b^8 + 5*c^8 - 2*b^2*c^2*(2*b^4 + 7*b^2*c^2 + 
                2*c^4))*a^4 + 3*(b^2 - c^2)^4*(2*b^8 + 2*c^8 + 
              b^2*c^2*(8*b^4 + 7*b^2*c^2 + 8*c^4))*a^2 - (b^2 - c^2)^6*
             (b^2 + c^2)*(b^4 + 7*b^2*c^2 + c^4))*Sqrt[3]))}, 
     "X5675" -> {b*c*(a^2*(-2*(a^6 - 6*(b^2 + c^2)*a^4 + 
            (3*b^4 - b^2*c^2 + 3*c^4)*a^2 + (b^2 + c^2)*(2*b^4 - b^2*c^2 + 
              2*c^4))*S + (a^8 - (b^2 + c^2)*a^6 - 3*(b^4 + 3*b^2*c^2 + c^4)*
             a^4 + (b^2 + c^2)*(5*b^4 - 2*b^2*c^2 + 5*c^4)*a^2 - 
            (2*b^4 - 3*b^2*c^2 + 2*c^4)*(b^2 - c^2)^2)*Sqrt[3])*
         (-2*(a^16 - 3*(b^2 + c^2)*a^14 + 2*(b^4 + 13*b^2*c^2 + c^4)*a^12 + 
            (b^2 + c^2)*((b^2 + c^2)^2 - 36*b^2*c^2)*a^10 + 
            3*(4*b^4 + 11*b^2*c^2 + 4*c^4)*b^2*c^2*a^8 - (b^2 + c^2)*
             (b^8 + c^8 + b^2*c^2*(9*b^4 - 11*b^2*c^2 + 9*c^4))*a^6 - 
            (b^2 - c^2)^2*(2*b^8 + 2*c^8 - b^2*c^2*(11*b^4 - 15*b^2*c^2 + 
                11*c^4))*a^4 + 3*(b^4 - c^4)*(b^2 - c^2)*(b^8 + c^8 - 
              b^2*c^2*(5*b^4 - 11*b^2*c^2 + 5*c^4))*a^2 - (b^2 - c^2)^4*
             (b^8 + c^8 - b^2*c^2*(7*b^4 + 24*b^2*c^2 + 7*c^4)))*S + 
          (a^18 - 6*(b^2 + c^2)*a^16 + 3*(5*b^4 + 8*b^2*c^2 + 5*c^4)*a^14 - 
            (b^2 + c^2)*(21*b^4 + 8*b^2*c^2 + 21*c^4)*a^12 + 
            3*(7*b^8 + 7*c^8 - b^2*c^2*(4*b^4 - 21*b^2*c^2 + 4*c^4))*a^10 - 
            3*(b^2 + c^2)*(7*b^8 + 7*c^8 - b^2*c^2*(29*b^4 - 48*b^2*c^2 + 
                29*c^4))*a^8 + (21*b^8 + 21*c^8 - 2*b^2*c^2*(13*b^4 + 
                48*b^2*c^2 + 13*c^4))*(b^2 - c^2)^2*a^6 - 3*(b^4 - c^4)*
             (b^2 - c^2)*(5*b^8 + 5*c^8 - 2*b^2*c^2*(2*b^4 + 7*b^2*c^2 + 
                2*c^4))*a^4 + 3*(b^2 - c^2)^4*(2*b^8 + 2*c^8 + 
              b^2*c^2*(8*b^4 + 7*b^2*c^2 + 8*c^4))*a^2 - (b^2 - c^2)^6*
             (b^2 + c^2)*(b^4 + 7*b^2*c^2 + c^4))*Sqrt[3]))}, 
     "X5676" -> {b*c*((2*a^4 - (b^2 + c^2)*a^2 - (b^2 - c^2)^2)*
         (a^18 - 2*(3*b^2 - c^2)*a^16 + (15*b^4 + 16*b^2*c^2 - 25*c^4)*a^14 - 
          (21*b^6 - 53*c^6 + 3*(17*b^2 - 5*c^2)*b^2*c^2)*a^12 + 
          (21*b^8 - 31*c^8 + (20*b^4 + 99*b^2*c^2 - 108*c^4)*b^2*c^2)*a^10 - 
          (b^2 - c^2)*(21*b^8 - 31*c^8 - (25*b^4 - 72*b^2*c^2 - 135*c^4)*b^2*
             c^2)*a^8 + (b^2 - c^2)*(21*b^10 - 53*c^10 - 
            (15*b^6 - 55*c^6 + 2*(39*b^2 - 59*c^2)*b^2*c^2)*b^2*c^2)*a^6 - 
          (b^2 - c^2)^3*(15*b^8 - 25*c^8 + 2*(20*b^4 - 3*b^2*c^2 - 30*c^4)*
             b^2*c^2)*a^4 + (6*b^8 + 2*c^8 + (16*b^4 + 33*b^2*c^2 + 24*c^4)*
             b^2*c^2)*(b^2 - c^2)^4*a^2 - (b^4 + b^2*c^2 + c^4)*
           (b^2 - c^2)^7)*(3*a^36 - 20*(b^2 + c^2)*a^34 + 
          2*(11*b^4 + 84*b^2*c^2 + 11*c^4)*a^32 + 2*(b^2 + c^2)*
           (101*b^4 - 356*b^2*c^2 + 101*c^4)*a^30 - 
          (971*b^8 + 971*c^8 - 8*(38*b^4 + 305*b^2*c^2 + 38*c^4)*b^2*c^2)*
           a^28 + 2*(b^2 + c^2)*(1034*b^8 + 1034*c^8 + 
            5*(23*b^4 - 524*b^2*c^2 + 23*c^4)*b^2*c^2)*a^26 - 
          (2405*b^12 + 2405*c^12 + 3*(2550*b^8 + 2550*c^8 - (1413*b^4 + 
                4204*b^2*c^2 + 1413*c^4)*b^2*c^2)*b^2*c^2)*a^24 + 
          2*(b^2 + c^2)*(611*b^12 + 611*c^12 + 5*(1047*b^8 + 1047*c^8 - 
              2*(383*b^4 + 415*b^2*c^2 + 383*c^4)*b^2*c^2)*b^2*c^2)*a^22 + 
          (715*b^16 + 715*c^16 - (10098*b^12 + 10098*c^12 + (13348*b^8 + 
                13348*c^8 - (17962*b^4 + 9669*b^2*c^2 + 17962*c^4)*b^2*c^2)*b^
                2*c^2)*b^2*c^2)*a^20 - 2*(b^2 + c^2)*(1144*b^16 + 1144*c^16 - 
            (4180*b^12 + 4180*c^12 + (4511*b^8 + 4511*c^8 - 
                (12977*b^4 - 10856*b^2*c^2 + 12977*c^4)*b^2*c^2)*b^2*c^2)*b^2*
             c^2)*a^18 + (b^2 - c^2)^2*(3575*b^16 + 3575*c^16 - 
            (66*b^12 + 66*c^12 + (8741*b^8 + 8741*c^8 + 2*(11609*b^4 - 
                  1956*b^2*c^2 + 11609*c^4)*b^2*c^2)*b^2*c^2)*b^2*c^2)*a^16 - 
          2*(b^4 - c^4)*(b^2 - c^2)*(2405*b^16 + 2405*c^16 - 
            2*(2180*b^12 + 2180*c^12 - (2787*b^8 + 2787*c^8 - 
                (8472*b^4 - 11243*b^2*c^2 + 8472*c^4)*b^2*c^2)*b^2*c^2)*b^2*
             c^2)*a^14 + (b^2 - c^2)^2*(5135*b^20 + 5135*c^20 - 
            (6518*b^16 + 6518*c^16 - (2337*b^12 + 2337*c^12 - 
                2*(1678*b^8 + 1678*c^8 + (10631*b^4 - 22512*b^2*c^2 + 
                    10631*c^4)*b^2*c^2)*b^2*c^2)*b^2*c^2)*b^2*c^2)*a^12 - 
          2*(b^4 - c^4)*(b^2 - c^2)^3*(1958*b^16 + 1958*c^16 - 
            (499*b^12 + 499*c^12 + (1190*b^8 + 1190*c^8 - (5985*b^4 - 
                  11968*b^2*c^2 + 5985*c^4)*b^2*c^2)*b^2*c^2)*b^2*c^2)*a^10 + 
          (b^2 - c^2)^6*(2009*b^16 + 2009*c^16 + 2*(3114*b^12 + 3114*c^12 + 
              (2208*b^8 + 2208*c^8 + (3512*b^4 + 7701*b^2*c^2 + 3512*c^4)*b^2*
                 c^2)*b^2*c^2)*b^2*c^2)*a^8 - 2*(b^2 - c^2)^6*(b^2 + c^2)*
           (323*b^16 + 323*c^16 + (931*b^12 + 931*c^12 - (439*b^8 + 439*c^8 + 
                (685*b^4 - 2656*b^2*c^2 + 685*c^4)*b^2*c^2)*b^2*c^2)*b^2*c^2)*
           a^6 + (b^2 - c^2)^8*(110*b^16 + 110*c^16 + 
            (870*b^12 + 870*c^12 + (1904*b^8 + 1904*c^8 + (1154*b^4 - 
                  57*b^2*c^2 + 1154*c^4)*b^2*c^2)*b^2*c^2)*b^2*c^2)*a^4 - 
          2*(b^2 - c^2)^10*(b^2 + c^2)*(2*b^12 + 2*c^12 + 
            (54*b^8 + 54*c^8 + (171*b^4 + 275*b^2*c^2 + 171*c^4)*b^2*c^2)*b^2*
             c^2)*a^2 - (b^2 - c^2)^14*(b^2 + b*c + c^2)^2*
           (b^2 - b*c + c^2)^2)*(a^18 + 2*(b^2 - 3*c^2)*a^16 - 
          (25*b^4 - 16*b^2*c^2 - 15*c^4)*a^14 + 
          (53*b^6 - 21*c^6 + 3*(5*b^2 - 17*c^2)*b^2*c^2)*a^12 - 
          (31*b^8 - 21*c^8 + (108*b^4 - 99*b^2*c^2 - 20*c^4)*b^2*c^2)*a^10 - 
          (b^2 - c^2)*(31*b^8 - 21*c^8 - (135*b^4 + 72*b^2*c^2 - 25*c^4)*b^2*
             c^2)*a^8 + (b^2 - c^2)*(53*b^10 - 21*c^10 - 
            (55*b^6 - 15*c^6 + 2*(59*b^2 - 39*c^2)*b^2*c^2)*b^2*c^2)*a^6 - 
          (b^2 - c^2)^3*(25*b^8 - 15*c^8 + 2*(30*b^4 + 3*b^2*c^2 - 20*c^4)*
             b^2*c^2)*a^4 + (2*b^8 + 6*c^8 + (24*b^4 + 33*b^2*c^2 + 16*c^4)*
             b^2*c^2)*(b^2 - c^2)^4*a^2 + (b^4 + b^2*c^2 + c^4)*
           (b^2 - c^2)^7))}, "X5677" -> 
      {b*c*(a*(a^3 - (b - c)*a^2 - (b^2 - b*c + c^2)*a + (b + c)*(b^2 - c^2))*
         (a^3 + (b - c)*a^2 - (b^2 - b*c + c^2)*a - (b + c)*(b^2 - c^2))*
         (a^15 - 2*(b + c)*a^14 - 4*(b^2 + b*c + c^2)*a^13 + 
          (b + c)*(11*b^2 - 10*b*c + 11*c^2)*a^12 + 
          3*(b^4 + c^4 + 2*(b + c)^2*b*c)*a^11 - 3*(b + c)*
           (8*b^4 + 8*c^4 - (11*b^2 - 14*b*c + 11*c^2)*b*c)*a^10 + 
          2*(5*b^6 + 5*c^6 + 3*(2*b^4 + 2*c^4 - 3*(b + c)^2*b*c)*b*c)*a^9 + 
          (b + c)*(25*b^6 + 25*c^6 - 3*(11*b^4 + 11*c^4 - 6*(3*b^2 - 4*b*c + 
                3*c^2)*b*c)*b*c)*a^8 - (25*b^8 + 25*c^8 + 
            (28*b^6 + 28*c^6 - (23*b^4 + 23*c^4 + 3*(10*b^2 + 3*b*c + 10*c^2)*
                 b*c)*b*c)*b*c)*a^7 - (b + c)*(10*b^8 + 10*c^8 - 
            (2*b^6 + 2*c^6 - (25*b^4 + 25*c^4 - 3*(19*b^2 - 18*b*c + 19*c^2)*
                 b*c)*b*c)*b*c)*a^6 + 3*(b^2 - c^2)^2*(8*b^6 + 8*c^6 + 
            (4*b^4 + 4*c^4 + 9*(b + c)^2*b*c)*b*c)*a^5 - 
          3*(b^6 - c^6)*(b - c)*(b^4 + c^4 - 2*(b^2 + 4*b*c + c^2)*b*c)*a^4 - 
          (b^2 - c^2)^2*(11*b^8 + 11*c^8 - (6*b^6 + 6*c^6 - 
              (13*b^4 + 13*c^4 + 3*(8*b^2 - b*c + 8*c^2)*b*c)*b*c)*b*c)*a^3 + 
          (b^2 - c^2)^3*(b - c)*(4*b^6 + 4*c^6 + (5*b^4 + 5*c^4 + 
              (5*b^2 - b*c + 5*c^2)*b*c)*b*c)*a^2 + (b^2 - c^2)^4*(b - c)^2*
           (2*b^2 + c^2)*(b^2 + 2*c^2)*a - (b^2 - c^2)^6*(b + c)*
           (b^2 + b*c + c^2)))}, "X5678" -> 
      {b*c*(a^2*(2*Sqrt[3]*(a^2 + b^2 - c^2)*S + a^4 - 2*(b^2 - 2*c^2)*a^2 + 
          (b^2 - c^2)*(b^2 + 5*c^2))*(-2*Sqrt[3]*(a^16 - 6*(b^2 + c^2)*a^14 + 
            (14*b^4 + 9*b^2*c^2 + 14*c^4)*a^12 - (b^2 + c^2)*
             (14*b^4 - 11*b^2*c^2 + 14*c^4)*a^10 + 36*(b^2 - c^2)^2*b^2*c^2*
             a^8 + 2*(b^2 + c^2)*(7*b^8 + 7*c^8 - (49*b^4 - 86*b^2*c^2 + 
                49*c^4)*b^2*c^2)*a^6 - (b^2 - c^2)^2*(14*b^8 + 14*c^8 - 
              (29*b^4 + 102*b^2*c^2 + 29*c^4)*b^2*c^2)*a^4 + 
            3*(b^4 - c^4)*(b^2 - c^2)*(2*b^8 + 2*c^8 + (b^2 - 4*b*c - c^2)*(
                b^2 + 4*b*c - c^2)*b^2*c^2)*a^2 - (b^2 - c^2)^4*
             (b^8 + c^8 + 2*(5*b^4 + 7*b^2*c^2 + 5*c^4)*b^2*c^2))*S + a^18 - 
          3*(b^2 + c^2)*a^16 - (6*b^4 - 59*b^2*c^2 + 6*c^4)*a^14 + 
          2*(b^2 + c^2)*(21*b^4 - 82*b^2*c^2 + 21*c^4)*a^12 - 
          3*(28*b^8 + 28*c^8 + (5*b^4 - 132*b^2*c^2 + 5*c^4)*b^2*c^2)*a^10 + 
          4*(b^2 + c^2)*(21*b^8 + 21*c^8 + 4*(8*b^4 - 29*b^2*c^2 + 8*c^4)*b^2*
             c^2)*a^8 - (b^2 - c^2)^2*(42*b^8 + 42*c^8 + 
            (239*b^4 + 474*b^2*c^2 + 239*c^4)*b^2*c^2)*a^6 + 
          6*(b^4 - c^4)*(b^2 - c^2)*(b^4 + c^4 - 2*(b^2 - 2*b*c - c^2)*b*c)*
           (b^4 + c^4 + 2*(b^2 + 2*b*c - c^2)*b*c)*a^4 + 
          (3*b^8 + 3*c^8 + (11*b^4 + 26*b^2*c^2 + 11*c^4)*b^2*c^2)*
           (b^2 - c^2)^4*a^2 - (b^2 + c^2)*(b^2 - c^2)^8)*
         (2*Sqrt[3]*(a^2 - b^2 + c^2)*S + a^4 + 2*(2*b^2 - c^2)*a^2 - 
          (b^2 - c^2)*(5*b^2 + c^2)))}, "X5679" -> 
      {b*c*(a^2*(-2*Sqrt[3]*(a^2 + b^2 - c^2)*S + a^4 - 2*(b^2 - 2*c^2)*a^2 + 
          (b^2 - c^2)*(b^2 + 5*c^2))*(2*Sqrt[3]*(a^16 - 6*(b^2 + c^2)*a^14 + 
            (14*b^4 + 9*b^2*c^2 + 14*c^4)*a^12 - (b^2 + c^2)*
             (14*b^4 - 11*b^2*c^2 + 14*c^4)*a^10 + 36*(b^2 - c^2)^2*b^2*c^2*
             a^8 + 2*(b^2 + c^2)*(7*b^8 + 7*c^8 - (49*b^4 - 86*b^2*c^2 + 
                49*c^4)*b^2*c^2)*a^6 - (b^2 - c^2)^2*(14*b^8 + 14*c^8 - 
              (29*b^4 + 102*b^2*c^2 + 29*c^4)*b^2*c^2)*a^4 + 
            3*(b^4 - c^4)*(b^2 - c^2)*(2*b^8 + 2*c^8 + (b^2 - 4*b*c - c^2)*(
                b^2 + 4*b*c - c^2)*b^2*c^2)*a^2 - (b^2 - c^2)^4*
             (b^8 + c^8 + 2*(5*b^4 + 7*b^2*c^2 + 5*c^4)*b^2*c^2))*S + a^18 - 
          3*(b^2 + c^2)*a^16 - (6*b^4 - 59*b^2*c^2 + 6*c^4)*a^14 + 
          2*(b^2 + c^2)*(21*b^4 - 82*b^2*c^2 + 21*c^4)*a^12 - 
          3*(28*b^8 + 28*c^8 + (5*b^4 - 132*b^2*c^2 + 5*c^4)*b^2*c^2)*a^10 + 
          4*(b^2 + c^2)*(21*b^8 + 21*c^8 + 4*(8*b^4 - 29*b^2*c^2 + 8*c^4)*b^2*
             c^2)*a^8 - (b^2 - c^2)^2*(42*b^8 + 42*c^8 + 
            (239*b^4 + 474*b^2*c^2 + 239*c^4)*b^2*c^2)*a^6 + 
          6*(b^4 - c^4)*(b^2 - c^2)*(b^4 + c^4 - 2*(b^2 - 2*b*c - c^2)*b*c)*
           (b^4 + c^4 + 2*(b^2 + 2*b*c - c^2)*b*c)*a^4 + 
          (3*b^8 + 3*c^8 + (11*b^4 + 26*b^2*c^2 + 11*c^4)*b^2*c^2)*
           (b^2 - c^2)^4*a^2 - (b^2 + c^2)*(b^2 - c^2)^8)*
         (-2*Sqrt[3]*(a^2 - b^2 + c^2)*S + a^4 + 2*(2*b^2 - c^2)*a^2 - 
          (b^2 - c^2)*(5*b^2 + c^2)))}, "X5680" -> 
      {b*c*(a*(a^6 + (b - c)*a^5 - (b^2 - b*c + c^2)*a^4 - 
          2*(b^3 - c^3)*a^3 - (b^2 - c^2)^2*a^2 + (b^4 - c^4)*(b + c)*a + 
          (b^2 - c^2)*(b - c)*(b^3 + c^3))*(a^6 - (b - c)*a^5 - 
          (b^2 - b*c + c^2)*a^4 + 2*(b^3 - c^3)*a^3 - (b^2 - c^2)^2*a^2 - 
          (b^4 - c^4)*(b + c)*a + (b^2 - c^2)*(b - c)*(b^3 + c^3))*
         (a^21 + 2*(b + c)*a^20 - 4*(b^2 + b*c + c^2)*a^19 - 
          (b + c)*(11*b^2 - 10*b*c + 11*c^2)*a^18 + 
          (3*b^4 + 3*c^4 + 10*(b + c)^2*b*c)*a^17 + 
          (b + c)*(24*b^4 + 24*c^4 - (41*b^2 - 58*b*c + 41*c^2)*b*c)*a^16 + 
          (9*b^6 + 9*c^6 + (10*b^4 + 10*c^4 - (29*b^2 + 56*b*c + 29*c^2)*b*c)*
             b*c)*a^15 - (b + c)*(27*b^6 + 27*c^6 - 
            (49*b^4 + 49*c^4 - 4*(27*b^2 - 38*b*c + 27*c^2)*b*c)*b*c)*a^14 - 
          (21*b^8 + 21*c^8 + (50*b^6 + 50*c^6 + (3*b^4 + 3*c^4 - 
                (64*b^2 + 77*b*c + 64*c^2)*b*c)*b*c)*b*c)*a^13 + 
          (b + c)*(21*b^8 + 21*c^8 + (10*b^6 + 10*c^6 + (65*b^4 + 65*c^4 - 
                3*(63*b^2 - 64*b*c + 63*c^2)*b*c)*b*c)*b*c)*a^12 + 
          (21*b^8 + 21*c^8 - 2*(4*b^6 + 4*c^6 - 3*(4*b^4 + 4*c^4 + 
                (8*b^2 - 29*b*c + 8*c^2)*b*c)*b*c)*b*c)*(b + c)^2*a^11 - 
          (b^2 - c^2)*(b - c)*(21*b^8 + 21*c^8 + 5*(b^2 + c^2)*
             (19*b^4 + 19*c^4 + (27*b^2 + 8*b*c + 27*c^2)*b*c)*b*c)*a^10 - 
          (b^2 - c^2)^2*(21*b^8 + 21*c^8 - (34*b^6 + 34*c^6 - 
              (23*b^4 + 23*c^4 + 3*(48*b^2 + 29*b*c + 48*c^2)*b*c)*b*c)*b*c)*
           a^9 + (b^2 - c^2)*(b - c)*(21*b^10 + 21*c^10 + 
            (52*b^8 + 52*c^8 + (44*b^6 + 44*c^6 + (149*b^4 + 149*c^4 + 
                  (203*b^2 + 102*b*c + 203*c^2)*b*c)*b*c)*b*c)*b*c)*a^8 + 
          (b^2 - c^2)^2*(27*b^10 + 27*c^10 - (50*b^8 + 50*c^8 + 
              (21*b^6 + 21*c^6 + 2*(6*b^4 + 6*c^4 - (13*b^2 + 102*b*c + 
                    13*c^2)*b*c)*b*c)*b*c)*b*c)*a^7 - (b^2 - c^2)^2*(b + c)*
           (9*b^10 + 9*c^10 - (31*b^8 + 31*c^8 - (46*b^6 + 46*c^6 + 
                (34*b^4 + 34*c^4 - (67*b^2 - 114*b*c + 67*c^2)*b*c)*b*c)*b*c)*
             b*c)*a^6 - (b^2 - c^2)^4*(24*b^8 + 24*c^8 - 
            (10*b^6 + 10*c^6 - (37*b^4 + 37*c^4 - (104*b^2 - 7*b*c + 104*c^2)*
                 b*c)*b*c)*b*c)*a^5 - (b^2 - c^2)^4*(b + c)*
           (3*b^8 + 3*c^8 + (14*b^6 + 14*c^6 - (31*b^4 + 31*c^4 - 
                (55*b^2 - 64*b*c + 55*c^2)*b*c)*b*c)*b*c)*a^4 + 
          (b^2 - c^2)^4*(b - c)^2*(11*b^8 + 11*c^8 + 
            2*(16*b^6 + 16*c^6 + (40*b^4 + 40*c^4 + (56*b^2 + 71*b*c + 
                  56*c^2)*b*c)*b*c)*b*c)*a^3 + (b^2 - c^2)^5*(b - c)*
           (4*b^8 + 4*c^8 + (3*b^6 + 3*c^6 + (3*b^4 + 3*c^4 + 
                (15*b^2 + 4*b*c + 15*c^2)*b*c)*b*c)*b*c)*a^2 - 
          (b^2 - c^2)^6*(b^2 + b*c + c^2)^2*(2*b^2 + c^2)*(b^2 + 2*c^2)*a - 
          (b^3 - c^3)*(b^2 - c^2)^7*(b^2 - b*c + c^2)^2))}, 
     "X5681" -> {b*c*(324*Sqrt[3]*((24*a^22 - 288*(b^2 + c^2)*a^20 + 
            6*(145*b^4 + 266*b^2*c^2 + 145*c^4)*a^18 - 18*(b^2 + c^2)*
             (51*b^4 + 70*b^2*c^2 + 51*c^4)*a^16 + 6*(45*b^8 + 45*c^8 + 
              2*(65*b^4 - b^2*c^2 + 65*c^4)*b^2*c^2)*a^14 - 
            6*(b^2 + c^2)*(141*b^8 + 141*c^8 + 2*(44*b^4 - 465*b^2*c^2 + 
                44*c^4)*b^2*c^2)*a^12 + 6*(447*b^12 + 447*c^12 + 
              2*(144*b^8 + 144*c^8 - (417*b^4 + 419*b^2*c^2 + 417*c^4)*b^2*
                 c^2)*b^2*c^2)*a^10 - 6*(b^2 + c^2)*(495*b^12 + 495*c^12 - 
              2*(443*b^8 + 443*c^8 - (492*b^4 - 671*b^2*c^2 + 492*c^4)*b^2*
                 c^2)*b^2*c^2)*a^8 + 6*(243*b^12 + 243*c^12 - 
              (184*b^8 + 184*c^8 + (213*b^4 + 328*b^2*c^2 + 213*c^4)*b^2*c^2)*
               b^2*c^2)*(b^2 - c^2)^2*a^6 - 6*(b^4 - c^4)*(b^2 - c^2)*
             (55*b^12 + 55*c^12 - (182*b^8 + 182*c^8 + (217*b^4 - 
                  76*b^2*c^2 + 217*c^4)*b^2*c^2)*b^2*c^2)*a^4 + 
            6*(12*b^12 + 12*c^12 + (34*b^8 + 34*c^8 - (187*b^4 + 222*b^2*
                   c^2 + 187*c^4)*b^2*c^2)*b^2*c^2)*(b^2 - c^2)^4*a^2 - 
            6*(b^2 - c^2)^6*(b^2 + c^2)*(2*b^4 - 7*b^2*c^2 + 2*c^4)*
             (2*b^4 + 11*b^2*c^2 + 2*c^4))*S + Sqrt[3]*
           (12*a^24 - 52*(b^2 + c^2)*a^22 + (17*b^4 - 78*b^2*c^2 + 17*c^4)*
             a^20 + 2*(b^2 + c^2)*(97*b^4 + 410*b^2*c^2 + 97*c^4)*a^18 - 
            4*(42*b^8 + 42*c^8 + (468*b^4 + 799*b^2*c^2 + 468*c^4)*b^2*c^2)*
             a^16 - 2*(b^2 + c^2)*(237*b^8 + 237*c^8 - (933*b^4 + 
                806*b^2*c^2 + 933*c^4)*b^2*c^2)*a^14 + 
            (930*b^12 + 930*c^12 - (1560*b^8 + 1560*c^8 + (1329*b^4 + 
                  454*b^2*c^2 + 1329*c^4)*b^2*c^2)*b^2*c^2)*a^12 - 
            2*(b^2 + c^2)*(213*b^12 + 213*c^12 - (1677*b^8 + 1677*c^8 - 
                (2321*b^4 - 1786*b^2*c^2 + 2321*c^4)*b^2*c^2)*b^2*c^2)*a^10 - 
            (264*b^16 + 264*c^16 + (2496*b^12 + 2496*c^12 - 
                (2863*b^8 + 2863*c^8 - 2*(863*b^4 - 1767*b^2*c^2 + 863*c^4)*
                   b^2*c^2)*b^2*c^2)*b^2*c^2)*a^8 + 6*(b^4 - c^4)*(b^2 - c^2)*
             (53*b^12 + 53*c^12 + (183*b^8 + 183*c^8 - (91*b^4 - 226*b^2*
                   c^2 + 91*c^4)*b^2*c^2)*b^2*c^2)*a^6 - (b^2 - c^2)^2*
             (83*b^16 + 83*c^16 + (360*b^12 + 360*c^12 - (67*b^8 + 67*c^8 + 
                  4*(319*b^4 - 234*b^2*c^2 + 319*c^4)*b^2*c^2)*b^2*c^2)*b^2*c^
                2)*a^4 - 2*(b^4 - c^4)*(b^2 - c^2)^3*(4*b^12 + 4*c^12 - 
              (93*b^8 + 93*c^8 - 2*(15*b^4 + 113*b^2*c^2 + 15*c^4)*b^2*c^2)*b^
                2*c^2)*a^2 + (4*b^12 + 4*c^12 - (48*b^8 + 48*c^8 + 
                (15*b^4 - 172*b^2*c^2 + 15*c^4)*b^2*c^2)*b^2*c^2)*
             (b^2 - c^2)^6))*((-4*a^6 - 2*(3*b^2 + c^2)*a^4 + 
            2*(2*b^2 + c^2)*(3*b^2 - c^2)*a^2 - 2*(b^2 - c^2)*
             (b^4 - 5*b^2*c^2 - 2*c^4))*S + Sqrt[3]*
           (2*a^8 - (5*b^2 + 7*c^2)*a^6 + (3*b^4 - 3*b^2*c^2 + 10*c^4)*a^4 + 
            (b^2 - c^2)*(b^4 + 10*b^2*c^2 + 7*c^4)*a^2 - (b^2 + 2*c^2)*
             (b^2 - c^2)^3))*((-4*a^6 - 2*(b^2 + 3*c^2)*a^4 - 
            2*(b^2 - 3*c^2)*(b^2 + 2*c^2)*a^2 - 2*(b^2 - c^2)*
             (2*b^4 + 5*b^2*c^2 - c^4))*S + Sqrt[3]*
           (2*a^8 - (7*b^2 + 5*c^2)*a^6 + (10*b^4 - 3*b^2*c^2 + 3*c^4)*a^4 - 
            (b^2 - c^2)*(7*b^4 + 10*b^2*c^2 + c^4)*a^2 + (2*b^2 + c^2)*
             (b^2 - c^2)^3)))}, "X5682" -> 
      {b*c*((-2*Sqrt[3]*(4*a^22 - 48*(b^2 + c^2)*a^20 + 
            (145*b^4 + 266*b^2*c^2 + 145*c^4)*a^18 - 3*(b^2 + c^2)*
             (51*b^4 + 70*b^2*c^2 + 51*c^4)*a^16 + 
            (45*b^8 + 45*c^8 + 2*(65*b^4 - b^2*c^2 + 65*c^4)*b^2*c^2)*a^14 - 
            (b^2 + c^2)*(141*b^8 + 141*c^8 + 2*(44*b^4 - 465*b^2*c^2 + 
                44*c^4)*b^2*c^2)*a^12 + (447*b^12 + 447*c^12 + 
              2*(144*b^8 + 144*c^8 - (417*b^4 + 419*b^2*c^2 + 417*c^4)*b^2*
                 c^2)*b^2*c^2)*a^10 - (b^2 + c^2)*(495*b^12 + 495*c^12 - 
              2*(443*b^8 + 443*c^8 - (492*b^4 - 671*b^2*c^2 + 492*c^4)*b^2*
                 c^2)*b^2*c^2)*a^8 + (243*b^12 + 243*c^12 - (184*b^8 + 
                184*c^8 + (213*b^4 + 328*b^2*c^2 + 213*c^4)*b^2*c^2)*b^2*c^2)*
             (b^2 - c^2)^2*a^6 - (b^4 - c^4)*(b^2 - c^2)*(55*b^12 + 55*c^12 - 
              (182*b^8 + 182*c^8 + (217*b^4 - 76*b^2*c^2 + 217*c^4)*b^2*c^2)*
               b^2*c^2)*a^4 + (12*b^12 + 12*c^12 + (34*b^8 + 34*c^8 - 
                (187*b^4 + 222*b^2*c^2 + 187*c^4)*b^2*c^2)*b^2*c^2)*
             (b^2 - c^2)^4*a^2 - (b^2 - c^2)^6*(b^2 + c^2)*
             (2*b^4 - 7*b^2*c^2 + 2*c^4)*(2*b^4 + 11*b^2*c^2 + 2*c^4))*S + 
          12*a^24 - 52*(b^2 + c^2)*a^22 + (17*b^4 - 78*b^2*c^2 + 17*c^4)*
           a^20 + 2*(b^2 + c^2)*(97*b^4 + 410*b^2*c^2 + 97*c^4)*a^18 - 
          4*(42*b^8 + 42*c^8 + (468*b^4 + 799*b^2*c^2 + 468*c^4)*b^2*c^2)*
           a^16 - 2*(b^2 + c^2)*(237*b^8 + 237*c^8 - 
            (933*b^4 + 806*b^2*c^2 + 933*c^4)*b^2*c^2)*a^14 + 
          (930*b^12 + 930*c^12 - (1560*b^8 + 1560*c^8 + (1329*b^4 + 
                454*b^2*c^2 + 1329*c^4)*b^2*c^2)*b^2*c^2)*a^12 - 
          2*(b^2 + c^2)*(213*b^12 + 213*c^12 - (1677*b^8 + 1677*c^8 - 
              (2321*b^4 - 1786*b^2*c^2 + 2321*c^4)*b^2*c^2)*b^2*c^2)*a^10 - 
          (264*b^16 + 264*c^16 + (2496*b^12 + 2496*c^12 - (2863*b^8 + 
                2863*c^8 - 2*(863*b^4 - 1767*b^2*c^2 + 863*c^4)*b^2*c^2)*b^
                2*c^2)*b^2*c^2)*a^8 + 6*(b^4 - c^4)*(b^2 - c^2)*
           (53*b^12 + 53*c^12 + (183*b^8 + 183*c^8 - (91*b^4 - 226*b^2*c^2 + 
                91*c^4)*b^2*c^2)*b^2*c^2)*a^6 - (b^2 - c^2)^2*
           (83*b^16 + 83*c^16 + (360*b^12 + 360*c^12 - (67*b^8 + 67*c^8 + 
                4*(319*b^4 - 234*b^2*c^2 + 319*c^4)*b^2*c^2)*b^2*c^2)*b^2*
             c^2)*a^4 - 2*(b^4 - c^4)*(b^2 - c^2)^3*(4*b^12 + 4*c^12 - 
            (93*b^8 + 93*c^8 - 2*(15*b^4 + 113*b^2*c^2 + 15*c^4)*b^2*c^2)*b^2*
             c^2)*a^2 + (4*b^12 + 4*c^12 - (48*b^8 + 48*c^8 + 
              (15*b^4 - 172*b^2*c^2 + 15*c^4)*b^2*c^2)*b^2*c^2)*
           (b^2 - c^2)^6)*(2*(2*a^6 + (3*b^2 + c^2)*a^4 - (2*b^2 + c^2)*
             (3*b^2 - c^2)*a^2 + (b^2 - c^2)*(b^4 - 5*b^2*c^2 - 2*c^4))*S + 
          Sqrt[3]*(2*a^8 - (5*b^2 + 7*c^2)*a^6 + (3*b^4 - 3*b^2*c^2 + 10*c^4)*
             a^4 + (b^2 - c^2)*(b^4 + 10*b^2*c^2 + 7*c^4)*a^2 - 
            (b^2 + 2*c^2)*(b^2 - c^2)^3))*
         (2*(2*a^6 + (b^2 + 3*c^2)*a^4 + (b^2 - 3*c^2)*(b^2 + 2*c^2)*a^2 + 
            (b^2 - c^2)*(2*b^4 + 5*b^2*c^2 - c^4))*S + 
          Sqrt[3]*(2*a^8 - (7*b^2 + 5*c^2)*a^6 + (10*b^4 - 3*b^2*c^2 + 3*c^4)*
             a^4 - (b^2 - c^2)*(7*b^4 + 10*b^2*c^2 + c^4)*a^2 + 
            (2*b^2 + c^2)*(b^2 - c^2)^3)))}, 
     "X5683" -> {b*c*(a^2*(a^12 - 3*(b^2 + c^2)*a^10 + 
          (3*b^4 + 5*b^2*c^2 + c^4)*a^8 - 2*(b^2 - c^2)*(b^4 + 2*b^2*c^2 + 
            3*c^4)*a^6 + (b^2 - c^2)*(3*b^6 + 9*c^6 + (b^2 + 3*c^2)*b^2*c^2)*
           a^4 - (b^2 - c^2)^3*(3*b^4 + 4*b^2*c^2 + 5*c^4)*a^2 + 
          (b^4 + b^2*c^2 - c^4)*(b^2 - c^2)^4)*(a^12 - 3*(b^2 + c^2)*a^10 + 
          (b^4 + 5*b^2*c^2 + 3*c^4)*a^8 + 2*(b^2 - c^2)*(3*b^4 + 2*b^2*c^2 + 
            c^4)*a^6 - (b^2 - c^2)*(9*b^6 + 3*c^6 + (3*b^2 + c^2)*b^2*c^2)*
           a^4 + (5*b^4 + 4*b^2*c^2 + 3*c^4)*(b^2 - c^2)^3*a^2 - 
          (b^4 - b^2*c^2 - c^4)*(b^2 - c^2)^4)*(-a^2 + b^2 + c^2)*
         (a^24 - 6*(b^2 + c^2)*a^22 + (15*b^4 + 28*b^2*c^2 + 15*c^4)*a^20 - 
          22*(b^4 + b^2*c^2 + c^4)*(b^2 + c^2)*a^18 + 
          (27*b^8 + 27*c^8 + (22*b^4 + 35*b^2*c^2 + 22*c^4)*b^2*c^2)*a^16 - 
          12*(b^2 + c^2)*(3*b^8 + 3*c^8 - 2*(b^4 + c^4)*b^2*c^2)*a^14 + 
          2*(b^2 - c^2)^2*(21*b^8 + 21*c^8 + 2*(35*b^4 + 36*b^2*c^2 + 35*c^4)*
             b^2*c^2)*a^12 - 4*(b^4 - c^4)*(b^2 - c^2)*(9*b^8 + 9*c^8 + 
            (23*b^4 + 10*b^2*c^2 + 23*c^4)*b^2*c^2)*a^10 + 
          (b^2 - c^2)^2*(27*b^12 + 27*c^12 + (18*b^8 + 18*c^8 + 
              83*(b^4 + c^4)*b^2*c^2)*b^2*c^2)*a^8 - 2*(b^4 - c^4)*
           (b^2 - c^2)^3*(11*b^8 + 11*c^8 - 2*(8*b^4 - 15*b^2*c^2 + 8*c^4)*
             b^2*c^2)*a^6 + (b^2 - c^2)^6*(15*b^8 + 15*c^8 + 
            2*(11*b^4 + 9*b^2*c^2 + 11*c^4)*b^2*c^2)*a^4 - 
          2*(b^2 - c^2)^6*(b^2 + c^2)*(3*b^8 + 3*c^8 + 
            (5*b^4 - 4*b^2*c^2 + 5*c^4)*b^2*c^2)*a^2 + 
          (b^6 - c^6)*(b^2 - c^2)^7*(b^4 + 5*b^2*c^2 + c^4)))}, 
     "X5686" -> {b*c*(b + c - a)*(a^2 - (b - c)^2 + 4*a*(b + c))}, 
     "X5687" -> {b*c*(a*(a^3 - (b + c)^2*a + 2*b*c*(b + c)))}, 
     "X5688" -> {b*c*(b^3 + c^3 - a^3 + b^2*c + b*c^2 + (b + c)*S)}, 
     "X5689" -> {b*c*(b^3 + c^3 - a^3 + b^2*c + b*c^2 - (b + c)*S)}, 
     "X5690" -> {b*c*(2*(b + c)*a^3 - (b^2 + 4*b*c + c^2)*a^2 - 
         2*(b^2 - c^2)*(b - c)*a + (b^2 - c^2)^2)}, 
     "X5691" -> {b*c*(3*a^4 - a^3*(b + c) - a^2*(b - c)^2 + 
         a*(b - c)^2*(b + c) - 2*(b^2 - c^2)^2)}, 
     "X5692" -> {a*b*c + (b + c)*(b^2 + c^2 - a^2)}, 
     "X5693" -> {b*c*(a*(b^6 + c^6 - a^5*b - a^5*c + a^4*b^2 + a^4*c^2 + 
          a^4*b*c + 2*a^3*b^3 + 2*a^3*c^3 - a^3*b^2*c - a^3*b*c^2 - 
          2*a^2*b^4 - 2*a^2*c^4 - a^2*b^3*c - a^2*b*c^3 + 2*a^2*b^2*c^2 - 
          a*b^5 - a*c^5 + 2*a*b^4*c + 2*a*b*c^4 - a*b^3*c^2 - a*b^2*c^3 - 
          b^4*c^2 - b^2*c^4))}, "X5694" -> 
      {b*c*(a*(b^6 + c^6 - a^5*b - a^5*c + a^4*b^2 + a^4*c^2 + 2*a^4*b*c + 
          2*a^3*b^3 + 2*a^3*c^3 - a^3*b^2*c - a^3*b*c^2 - 2*a^2*b^4 - 
          2*a^2*c^4 - 2*a^2*b^3*c - 2*a^2*b*c^3 + 2*a^2*b^2*c^2 - a*b^5 - 
          a*c^5 + 2*a*b^4*c + 2*a*b*c^4 - a*b^3*c^2 - a*b^2*c^3 - b^4*c^2 - 
          b^2*c^4))}, "X5695" -> {b*c*(a^3 - a^2*b - a^2*c + 2*b^2*c + 
         2*b*c^2)}, "X5696" -> 
      {b*c*(a*(b^5 + c^5 - a^4*b - a^4*c + 2*a^3*b^2 + 2*a^3*c^2 - a^3*b*c + 
          2*a^2*b^2*c + 2*a^2*b*c^2 - a*b^3*c - a*b*c^3 - 2*a*b^4 - 2*a*c^4 + 
          b^4*c + b*c^4 - 2*b^3*c^2 - 2*b^2*c^3 - 2*a*b^2*c^2))}, 
     "X5697" -> {b*c*(a*(b^3 + c^3 - a^2*b - a^2*c + 3*a*b*c - b^2*c - 
          b*c^2))}, "X5698" -> {b*c*(b^3 + c^3 - 3*a^3 + a^2*b + a^2*c + 
         a*b^2 + a*c^2 + 2*a*b*c - b^2*c - b*c^2)}, 
     "X5699" -> {b*c*(3*a^2*(a + b + c)*(a^2 - b^2 - c^2) - 
         2*3^(1/2)*(a^3 - a^2*b - a^2*c + 2*b^2*c + 2*b*c^2)*S)}, 
     "X5700" -> {b*c*(3*a^2*(a + b + c)*(a^2 - b^2 - c^2) + 
         2*3^(1/2)*(a^3 - a^2*b - a^2*c + 2*b^2*c + 2*b*c^2)*S)}, 
     "X5701" -> {b*(b - c)^2*c*(b + c) + a^3*(b^2 + c^2) - 
        2*a^2*(b^3 + c^3) + a*(b^4 - b^3*c + 2*b^2*c^2 - b*c^3 + c^4)}, 
     "X5702" -> {b*c*(SB*SC*(5*a^2*SA - SB*SC))}, 
     "X5703" -> {b*c*(3*a^4 - 2*a^3*b - 4*a^2*b^2 + 2*a*b^3 + b^4 - 2*a^3*c - 
         4*a^2*b*c - 2*a*b^2*c - 4*a^2*c^2 - 2*a*b*c^2 - 2*b^2*c^2 + 
         2*a*c^3 + c^4)}, "X5704" -> 
      {b*c*(a^4 + 2*a^3*b - 4*a^2*b^2 - 2*a*b^3 + 3*b^4 + 2*a^3*c + 
         4*a^2*b*c + 2*a*b^2*c - 4*a^2*c^2 + 2*a*b*c^2 - 6*b^2*c^2 - 
         2*a*c^3 + 3*c^4)}, "X5705" -> 
      {b*c*(a^4 + a^3*b - 3*a^2*b^2 - a*b^3 + 2*b^4 + a^3*c - 2*a^2*b*c - 
         3*a*b^2*c - 3*a^2*c^2 - 3*a*b*c^2 - 4*b^2*c^2 - a*c^3 + 2*c^4)}, 
     "X5706" -> {a^6 + a^5*b - 2*a^4*b^2 - 2*a^3*b^3 + a^2*b^4 + a*b^5 + 
        a^5*c - 2*a^4*b*c - 2*a^3*b^2*c + a*b^4*c + 2*b^5*c - 2*a^4*c^2 - 
        2*a^3*b*c^2 - 2*a^2*b^2*c^2 - 2*a*b^3*c^2 - 2*a^3*c^3 - 2*a*b^2*c^3 - 
        4*b^3*c^3 + a^2*c^4 + a*b*c^4 + a*c^5 + 2*b*c^5}, 
     "X5707" -> {b*c*(a*(a^6 + a^5*b - 2*a^4*b^2 - 2*a^3*b^3 + a^2*b^4 + 
          a*b^5 + a^5*c - 2*a^3*b^2*c - 2*a^2*b^3*c + a*b^4*c + 2*b^5*c - 
          2*a^4*c^2 - 2*a^3*b*c^2 - 2*a^2*b^2*c^2 - 2*a*b^3*c^2 - 2*a^3*c^3 - 
          2*a^2*b*c^3 - 2*a*b^2*c^3 - 4*b^3*c^3 + a^2*c^4 + a*b*c^4 + a*c^5 + 
          2*b*c^5))}, "X5708" -> 
      {b*c*(a*(a^3 + 2*a^2*b - a*b^2 - 2*b^3 + 2*a^2*c + 4*a*b*c + 2*b^2*c - 
          a*c^2 + 2*b*c^2 - 2*c^3))}, "X5709" -> 
      {b*c*(a*(a^6 - 3*a^4*b^2 + 3*a^2*b^4 - b^6 - 2*a^4*b*c + 2*b^5*c - 
          3*a^4*c^2 + 2*a^2*b^2*c^2 + b^4*c^2 - 4*b^3*c^3 + 3*a^2*c^4 + 
          b^2*c^4 + 2*b*c^5 - c^6))}, "X5710" -> 
      {b*c*(a*(a^3 + 2*a^2*b + a*b^2 + 2*a^2*c + 2*b^2*c + a*c^2 + 
          2*b*c^2))}, "X5711" -> {a^3 + 2*a^2*b + a*b^2 + 2*a^2*c + 2*a*b*c + 
        2*b^2*c + a*c^2 + 2*b*c^2}, "X5712" -> 
      {b*c*(a^3 + 3*a^2*b + a*b^2 - b^3 + 3*a^2*c + 2*a*b*c + b^2*c + a*c^2 + 
         b*c^2 - c^3)}, "X5713" -> {b*c*(a^7 + a^6*b - a^5*b^2 - 3*a^4*b^3 - 
         a^3*b^4 + 3*a^2*b^5 + a*b^6 - b^7 + a^6*c - 3*a^4*b^2*c - 
         2*a^3*b^3*c + a^2*b^4*c + 2*a*b^5*c + b^6*c - a^5*c^2 - 
         3*a^4*b*c^2 - 2*a^3*b^2*c^2 - 4*a^2*b^3*c^2 - a*b^4*c^2 + 
         3*b^5*c^2 - 3*a^4*c^3 - 2*a^3*b*c^3 - 4*a^2*b^2*c^3 - 4*a*b^3*c^3 - 
         3*b^4*c^3 - a^3*c^4 + a^2*b*c^4 - a*b^2*c^4 - 3*b^3*c^4 + 
         3*a^2*c^5 + 2*a*b*c^5 + 3*b^2*c^5 + a*c^6 + b*c^6 - c^7)}, 
     "X5714" -> {b*c*(a^4 + 2*a^3*b + 2*a^2*b^2 - 2*a*b^3 - 3*b^4 + 2*a^3*c + 
         4*a^2*b*c + 2*a*b^2*c + 2*a^2*c^2 + 2*a*b*c^2 + 6*b^2*c^2 - 
         2*a*c^3 - 3*c^4)}, "X5715" -> 
      {b*c*(-a^7 + a^5*b^2 + 2*a^4*b^3 + a^3*b^4 - 4*a^2*b^5 - a*b^6 + 
         2*b^7 + 2*a^5*b*c + 2*a^4*b^2*c - 2*a*b^5*c - 2*b^6*c + a^5*c^2 + 
         2*a^4*b*c^2 - 2*a^3*b^2*c^2 + 4*a^2*b^3*c^2 + a*b^4*c^2 - 
         6*b^5*c^2 + 2*a^4*c^3 + 4*a^2*b^2*c^3 + 4*a*b^3*c^3 + 6*b^4*c^3 + 
         a^3*c^4 + a*b^2*c^4 + 6*b^3*c^4 - 4*a^2*c^5 - 2*a*b*c^5 - 
         6*b^2*c^5 - a*c^6 - 2*b*c^6 + 2*c^7)}, 
     "X5716" -> {b*c*(-3*a^4 - 2*a^3*b - 2*a^2*b^2 - 2*a*b^3 + b^4 - 
         2*a^3*c - 4*a^2*b*c - 2*a*b^2*c - 2*a^2*c^2 - 2*a*b*c^2 - 
         2*b^2*c^2 - 2*a*c^3 + c^4)}, "X5717" -> 
      {b*c*(-2*a^4 - 3*a^3*b - 3*a^2*b^2 - a*b^3 + b^4 - 3*a^3*c - 
         6*a^2*b*c - 3*a*b^2*c - 3*a^2*c^2 - 3*a*b*c^2 - 2*b^2*c^2 - a*c^3 + 
         c^4)}, "X5718" -> {b*c*(2*a^2*(b + c) + a*(b^2 + c^2) - 
         (b - c)^2*(b + c))}, "X5719" -> 
      {b*c*(2*a^4 - 2*a^3*b - 3*a^2*b^2 + 2*a*b^3 + b^4 - 2*a^3*c - 
         4*a^2*b*c - 2*a*b^2*c - 3*a^2*c^2 - 2*a*b*c^2 - 2*b^2*c^2 + 
         2*a*c^3 + c^4)}, "X5720" -> {a^6 - 2*a^5*b - a^4*b^2 + 4*a^3*b^3 - 
        a^2*b^4 - 2*a*b^5 + b^6 - 2*a^5*c + 2*a^4*b*c - 4*a^2*b^3*c + 
        2*a*b^4*c + 2*b^5*c - a^4*c^2 + 2*a^2*b^2*c^2 - b^4*c^2 + 4*a^3*c^3 - 
        4*a^2*b*c^3 - 4*b^3*c^3 - a^2*c^4 + 2*a*b*c^4 - b^2*c^4 - 2*a*c^5 + 
        2*b*c^5 + c^6}, "X5721" -> {b*c*(-2*a^6*b + a^5*b^2 + 3*a^4*b^3 - 
         2*a^3*b^4 + a*b^6 - b^7 - 2*a^6*c + a^4*b^2*c + b^6*c + a^5*c^2 + 
         a^4*b*c^2 + 4*a^3*b^2*c^2 - a*b^4*c^2 + 3*b^5*c^2 + 3*a^4*c^3 - 
         3*b^4*c^3 - 2*a^3*c^4 - a*b^2*c^4 - 3*b^3*c^4 + 3*b^2*c^5 + a*c^6 + 
         b*c^6 - c^7)}, "X5722" -> {b*c*(-a^4 + a^3*b - a*b^3 + b^4 + a^3*c + 
         2*a^2*b*c + a*b^2*c + a*b*c^2 - 2*b^2*c^2 - a*c^3 + c^4)}, 
     "X5723" -> {b*c*(a + b - c)*(a - b + c)*(2*a^3 - 2*a^2*b + a*b^2 - b^3 - 
         2*a^2*c + b^2*c + a*c^2 + b*c^2 - c^3)}, 
     "X5724" -> {b*c*(-2*a^4 - a^2*b^2 - 2*a*b^3 + b^4 - 4*a^2*b*c - 
         a^2*c^2 - 2*b^2*c^2 - 2*a*c^3 + c^4)}, 
     "X5725" -> {b*c*(a^4 + a^3*b + 2*a^2*b^2 + a*b^3 - b^4 + a^3*c + 
         4*a^2*b*c + a*b^2*c + 2*a^2*c^2 + a*b*c^2 + 2*b^2*c^2 + a*c^3 - 
         c^4)}, "X5726" -> {b*c*((a + b - c)*(a - b + c)*
         (a^2 - a*b + 4*b^2 - a*c + 8*b*c + 4*c^2))}, 
     "X5727" -> {b*c*(a - b - c)*(3*a^3 - a*b^2 + 2*b^3 + 2*a*b*c - 2*b^2*c - 
         a*c^2 - 2*b*c^2 + 2*c^3)}, "X5728" -> 
      {b*c*(a*(a^4*b - 2*a^3*b^2 + 2*a*b^4 - b^5 + a^4*c - 2*a^2*b^2*c + 
          b^4*c - 2*a^3*c^2 - 2*a^2*b*c^2 - 4*a*b^2*c^2 + 2*a*c^4 + b*c^4 - 
          c^5))}, "X5729" -> {b*c*(a*(a^5 - 4*a^3*b^2 + 2*a^2*b^3 + 3*a*b^4 - 
          2*b^5 - 4*a^3*c^2 - 6*a*b^2*c^2 + 2*b^3*c^2 + 2*a^2*c^3 + 
          2*b^2*c^3 + 3*a*c^4 - 2*c^5))}, 
     "X5730" -> {b*c*(a*(a^3 - 2*a^2*b - a*b^2 + 2*b^3 - 2*a^2*c + 2*a*b*c - 
          a*c^2 + 2*c^3))}, "X5731" -> 
      {b*c*(-5*a^4 + 2*a^3*b + 4*a^2*b^2 - 2*a*b^3 + b^4 + 2*a^3*c - 
         4*a^2*b*c + 2*a*b^2*c + 4*a^2*c^2 + 2*a*b*c^2 - 2*b^2*c^2 - 
         2*a*c^3 + c^4)}, "X5732" -> {a^5 - 3*a^4*b + 2*a^3*b^2 + 2*a^2*b^3 - 
        3*a*b^4 + b^5 - 3*a^4*c - 4*a^3*b*c + 2*a^2*b^2*c + 4*a*b^3*c + 
        b^4*c + 2*a^3*c^2 + 2*a^2*b*c^2 - 2*a*b^2*c^2 - 2*b^3*c^2 + 
        2*a^2*c^3 + 4*a*b*c^3 - 2*b^2*c^3 - 3*a*c^4 + b*c^4 + c^5}, 
     "X5733" -> {b*c*(-3*a^6 + 5*a^4*b^2 + 2*a^3*b^3 - 3*a^2*b^4 - 2*a*b^5 + 
         b^6 + 2*a^3*b^2*c + 2*a^2*b^3*c - 2*a*b^4*c - 2*b^5*c + 5*a^4*c^2 + 
         2*a^3*b*c^2 + 2*a^2*b^2*c^2 + 4*a*b^3*c^2 - b^4*c^2 + 2*a^3*c^3 + 
         2*a^2*b*c^3 + 4*a*b^2*c^3 + 4*b^3*c^3 - 3*a^2*c^4 - 2*a*b*c^4 - 
         b^2*c^4 - 2*a*c^5 - 2*b*c^5 + c^6)}, 
     "X5734" -> {b*c*(3*a^4 - 6*a^3*b - 4*a^2*b^2 + 6*a*b^3 + b^4 - 6*a^3*c + 
         12*a^2*b*c - 6*a*b^2*c - 4*a^2*c^2 - 6*a*b*c^2 - 2*b^2*c^2 + 
         6*a*c^3 + c^4)}, "X5735" -> 
      {b*c*(3*a^6 - 3*a^5*b - 4*a^4*b^2 + 2*a^3*b^3 + 3*a^2*b^4 + a*b^5 - 
         2*b^6 - 3*a^5*c + 2*a^3*b^2*c - 4*a^2*b^3*c + a*b^4*c + 4*b^5*c - 
         4*a^4*c^2 + 2*a^3*b*c^2 + 2*a^2*b^2*c^2 - 2*a*b^3*c^2 + 2*b^4*c^2 + 
         2*a^3*c^3 - 4*a^2*b*c^3 - 2*a*b^2*c^3 - 8*b^3*c^3 + 3*a^2*c^4 + 
         a*b*c^4 + 2*b^2*c^4 + a*c^5 + 4*b*c^5 - 2*c^6)}, 
     "X5736" -> {b*c*(a^5 - 2*a^3*b^2 + a*b^4 - 2*a^3*b*c - 3*a^2*b^2*c + 
         b^4*c - 2*a^3*c^2 - 3*a^2*b*c^2 - 2*a*b^2*c^2 - b^3*c^2 - b^2*c^3 + 
         a*c^4 + b*c^4)}, "X5737" -> 
      {b*c*(a^3 - a^2*b - 2*a*b^2 - a^2*c - 2*a*b*c - 2*b^2*c - 2*a*c^2 - 
         2*b*c^2)}, "X5738" -> {b*c*(a^5 - a^4*b - 2*a^3*b^2 + 2*a^2*b^3 + 
         a*b^4 - b^5 - a^4*c - 4*a^3*b*c - 4*a^2*b^2*c + b^4*c - 2*a^3*c^2 - 
         4*a^2*b*c^2 - 2*a*b^2*c^2 + 2*a^2*c^3 + a*c^4 + b*c^4 - c^5)}, 
     "X5739" -> {b*c*(-a^3 - a^2*b + a*b^2 + b^3 - a^2*c + 2*a*b*c + b^2*c + 
         a*c^2 + b*c^2 + c^3)}, "X5740" -> 
      {b*c*(a^4*b - 2*a^2*b^3 + b^5 + a^4*c + 2*a^3*b*c + a^2*b^2*c + 
         a^2*b*c^2 - b^3*c^2 - 2*a^2*c^3 - b^2*c^3 + c^5)}, 
     "X5741" -> {b*c*((-a^2)*b + b^3 - a^2*c + 2*a*b*c + c^3)}, 
     "X5742" -> {b*c*(2*a^4*b - a^3*b^2 - 3*a^2*b^3 + a*b^4 + b^5 + 2*a^4*c - 
         5*a^2*b^2*c - 2*a*b^3*c + b^4*c - a^3*c^2 - 5*a^2*b*c^2 - 
         6*a*b^2*c^2 - 2*b^3*c^2 - 3*a^2*c^3 - 2*a*b*c^3 - 2*b^2*c^3 + 
         a*c^4 + b*c^4 + c^5)}, "X5743" -> 
      {b*c*(b^3 + 4*a*b*c + (a + b)*c^2 + c^3 + b^2*(a + c))}, 
     "X5744" -> {b*c*(-3*a^3 + a^2*b + 3*a*b^2 - b^3 + a^2*c - 2*a*b*c + 
         b^2*c + 3*a*c^2 + b*c^2 - c^3)}, 
     "X5745" -> {b*c*((a - b - c)*(2*a^2 + a*b - b^2 + a*c + 2*b*c - c^2))}, 
     "X5746" -> {b*c*(a^5 - 3*a^4*b - 2*a^3*b^2 + 2*a^2*b^3 + a*b^4 + b^5 - 
         3*a^4*c - 4*a^3*b*c - 2*a^2*b^2*c + b^4*c - 2*a^3*c^2 - 
         2*a^2*b*c^2 - 2*a*b^2*c^2 - 2*b^3*c^2 + 2*a^2*c^3 - 2*b^2*c^3 + 
         a*c^4 + b*c^4 + c^5)}, "X5747" -> 
      {b*c*(a^5 - a^4*b - 2*a^3*b^2 + a*b^4 + b^5 - a^4*c - 2*a^3*b*c - 
         2*a^2*b^2*c + b^4*c - 2*a^3*c^2 - 2*a^2*b*c^2 - 2*a*b^2*c^2 - 
         2*b^3*c^2 - 2*b^2*c^3 + a*c^4 + b*c^4 + c^5)}, 
     "X5748" -> {b*c*(-a^3 + 3*a^2*b + a*b^2 - 3*b^3 + 3*a^2*c - 6*a*b*c + 
         3*b^2*c + a*c^2 + 3*b*c^2 - 3*c^3)}, 
     "X5749" -> {b*c*(3*a^2 + (b + c)^2)}, 
     "X5750" -> {b*c*(2*a^2 + a*b + b^2 + a*c + 2*b*c + c^2)}, 
     "X5751" -> {a*(a^5*b^2 - a^4*b^3 - 2*a^3*b^4 + 2*a^2*b^5 + a*b^6 - b^7 + 
         a^5*b*c + a^4*b^2*c - 2*a^3*b^3*c - 2*a^2*b^4*c + a*b^5*c + b^6*c + 
         a^5*c^2 + a^4*b*c^2 - 2*a^2*b^3*c^2 - a*b^4*c^2 + b^5*c^2 - 
         a^4*c^3 - 2*a^3*b*c^3 - 2*a^2*b^2*c^3 - 2*a*b^3*c^3 - b^4*c^3 - 
         2*a^3*c^4 - 2*a^2*b*c^4 - a*b^2*c^4 - b^3*c^4 + 2*a^2*c^5 + 
         a*b*c^5 + b^2*c^5 + a*c^6 + b*c^6 - c^7)}, 
     "X5752" -> {a*(SA + S*(S/(r^2 + 2*r*R - sp^2)))}, 
     "X5753" -> {a*(SA + S*(4*(r + 2*R)*(sp/((r + 2*R)*(r + 4*R) - 
             3*sp^2))))}, "X5754" -> 
      {a*(a^4*b - a^3*b^2 - 3*a^2*b^3 + a*b^4 + 2*b^5 + a^4*c - 2*a^3*b*c - 
         2*a^2*b^2*c + 2*a*b^3*c + b^4*c - a^3*c^2 - 2*a^2*b*c^2 - 
         2*a*b^2*c^2 - b^3*c^2 - 3*a^2*c^3 + 2*a*b*c^3 - b^2*c^3 + a*c^4 + 
         b*c^4 + 2*c^5)}, "X5755" -> 
      {a*(SA - S*(r*((r + 2*R)/((r + R)*sp))))}, 
     "X5756" -> {a*(SA + S*(3*r + 4*R)*(sp/(r^2 + 4*r*R - 2*sp^2)))}, 
     "X5757" -> {b*c*(a^9 - 2*a^8*b - 2*a^7*b^2 + 4*a^6*b^3 + 2*a^5*b^4 - 
         2*a^4*b^5 - 2*a^3*b^6 + a*b^8 - 2*a^8*c - 2*a^7*b*c + 3*a^6*b^2*c + 
         4*a^5*b^3*c + a^4*b^4*c - 2*a^3*b^5*c - 3*a^2*b^6*c + b^8*c - 
         2*a^7*c^2 + 3*a^6*b*c^2 + 4*a^5*b^2*c^2 + a^4*b^3*c^2 + 
         2*a^3*b^4*c^2 - 3*a^2*b^5*c^2 - 4*a*b^6*c^2 - b^7*c^2 + 4*a^6*c^3 + 
         4*a^5*b*c^3 + a^4*b^2*c^3 + 4*a^3*b^3*c^3 + 6*a^2*b^4*c^3 - 
         3*b^6*c^3 + 2*a^5*c^4 + a^4*b*c^4 + 2*a^3*b^2*c^4 + 6*a^2*b^3*c^4 + 
         6*a*b^4*c^4 + 3*b^5*c^4 - 2*a^4*c^5 - 2*a^3*b*c^5 - 3*a^2*b^2*c^5 + 
         3*b^4*c^5 - 2*a^3*c^6 - 3*a^2*b*c^6 - 4*a*b^2*c^6 - 3*b^3*c^6 - 
         b^2*c^7 + a*c^8 + b*c^8)}, "X5758" -> 
      {b*c*(-a^7 - a^6*b + 3*a^5*b^2 + 3*a^4*b^3 - 3*a^3*b^4 - 3*a^2*b^5 + 
         a*b^6 + b^7 - a^6*c + 6*a^5*b*c + a^4*b^2*c - 4*a^3*b^3*c + 
         a^2*b^4*c - 2*a*b^5*c - b^6*c + 3*a^5*c^2 + a^4*b*c^2 - 
         2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 - a*b^4*c^2 - 3*b^5*c^2 + 3*a^4*c^3 - 
         4*a^3*b*c^3 + 2*a^2*b^2*c^3 + 4*a*b^3*c^3 + 3*b^4*c^3 - 3*a^3*c^4 + 
         a^2*b*c^4 - a*b^2*c^4 + 3*b^3*c^4 - 3*a^2*c^5 - 2*a*b*c^5 - 
         3*b^2*c^5 + a*c^6 - b*c^6 + c^7)}, 
     "X5759" -> {b*c*(3*a^6 - 4*a^5*b - 3*a^4*b^2 + 4*a^3*b^3 + a^2*b^4 - 
         b^6 - 4*a^5*c - 2*a^4*b*c + 4*a^3*b^2*c + 2*b^5*c - 3*a^4*c^2 + 
         4*a^3*b*c^2 - 2*a^2*b^2*c^2 + b^4*c^2 + 4*a^3*c^3 - 4*b^3*c^3 + 
         a^2*c^4 + b^2*c^4 + 2*b*c^5 - c^6)}, 
     "X5760" -> {b*c*(-a^9 + a^8*b + 3*a^7*b^2 - 2*a^6*b^3 - 4*a^5*b^4 + 
         a^4*b^5 + 3*a^3*b^6 - a*b^8 + a^8*c + 2*a^7*b*c - 4*a^5*b^3*c - 
         4*a^4*b^4*c + 2*a^3*b^5*c + 4*a^2*b^6*c - b^8*c + 3*a^7*c^2 - 
         4*a^5*b^2*c^2 - 3*a^4*b^3*c^2 - 3*a^3*b^4*c^2 + 2*a^2*b^5*c^2 + 
         4*a*b^6*c^2 + b^7*c^2 - 2*a^6*c^3 - 4*a^5*b*c^3 - 3*a^4*b^2*c^3 - 
         4*a^3*b^3*c^3 - 6*a^2*b^4*c^3 + 3*b^6*c^3 - 4*a^5*c^4 - 
         4*a^4*b*c^4 - 3*a^3*b^2*c^4 - 6*a^2*b^3*c^4 - 6*a*b^4*c^4 - 
         3*b^5*c^4 + a^4*c^5 + 2*a^3*b*c^5 + 2*a^2*b^2*c^5 - 3*b^4*c^5 + 
         3*a^3*c^6 + 4*a^2*b*c^6 + 4*a*b^2*c^6 + 3*b^3*c^6 + b^2*c^7 - 
         a*c^8 - b*c^8)}, "X5761" -> 
      {b*c*(a^7 - 3*a^6*b - a^5*b^2 + 7*a^4*b^3 - a^3*b^4 - 5*a^2*b^5 + 
         a*b^6 + b^7 - 3*a^6*c + 6*a^5*b*c + a^4*b^2*c - 4*a^3*b^3*c + 
         3*a^2*b^4*c - 2*a*b^5*c - b^6*c - a^5*c^2 + a^4*b*c^2 + 
         2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 - a*b^4*c^2 - 3*b^5*c^2 + 7*a^4*c^3 - 
         4*a^3*b*c^3 + 2*a^2*b^2*c^3 + 4*a*b^3*c^3 + 3*b^4*c^3 - a^3*c^4 + 
         3*a^2*b*c^4 - a*b^2*c^4 + 3*b^3*c^4 - 5*a^2*c^5 - 2*a*b*c^5 - 
         3*b^2*c^5 + a*c^6 - b*c^6 + c^7)}, 
     "X5763" -> {b*c*(-2*a^6*b + a^5*b^2 + 5*a^4*b^3 - 2*a^3*b^4 - 
         4*a^2*b^5 + a*b^6 + b^7 - 2*a^6*c + 8*a^5*b*c + a^4*b^2*c - 
         6*a^3*b^3*c + 2*a^2*b^4*c - 2*a*b^5*c - b^6*c + a^5*c^2 + 
         a^4*b*c^2 + 2*a^2*b^3*c^2 - a*b^4*c^2 - 3*b^5*c^2 + 5*a^4*c^3 - 
         6*a^3*b*c^3 + 2*a^2*b^2*c^3 + 4*a*b^3*c^3 + 3*b^4*c^3 - 2*a^3*c^4 + 
         2*a^2*b*c^4 - a*b^2*c^4 + 3*b^3*c^4 - 4*a^2*c^5 - 2*a*b*c^5 - 
         3*b^2*c^5 + a*c^6 - b*c^6 + c^7)}, 
     "X5764" -> {b*c*(-2*a^6 + a^5*b + 2*a^4*b^2 - a*b^5 + a^5*c + 
         2*a^4*b*c + 3*a^3*b^2*c + 3*a^2*b^3*c - b^5*c + 2*a^4*c^2 + 
         3*a^3*b*c^2 + 6*a^2*b^2*c^2 + a*b^3*c^2 + 3*a^2*b*c^3 + a*b^2*c^3 + 
         2*b^3*c^3 - a*c^5 - b*c^5)}, "X5765" -> 
      {b*c*(3*a^6 - 4*a^4*b^2 - 2*a^3*b^3 + a^2*b^4 + 2*a*b^5 - 4*a^4*b*c - 
         10*a^3*b^2*c - 6*a^2*b^3*c + 2*a*b^4*c + 2*b^5*c - 4*a^4*c^2 - 
         10*a^3*b*c^2 - 14*a^2*b^2*c^2 - 4*a*b^3*c^2 - 2*a^3*c^3 - 
         6*a^2*b*c^3 - 4*a*b^2*c^3 - 4*b^3*c^3 + a^2*c^4 + 2*a*b*c^4 + 
         2*a*c^5 + 2*b*c^5)}, "X5766" -> 
      {b*c*((a - b - c)*(5*a^5 - 3*a^4*b - 6*a^3*b^2 + 2*a^2*b^3 + a*b^4 + 
          b^5 - 3*a^4*c - 8*a^3*b*c - 2*a^2*b^2*c - 3*b^4*c - 6*a^3*c^2 - 
          2*a^2*b*c^2 - 2*a*b^2*c^2 + 2*b^3*c^2 + 2*a^2*c^3 + 2*b^2*c^3 + 
          a*c^4 - 3*b*c^4 + c^5))}, "X5767" -> 
      {b*c*(-a^7 - 2*a^6*b + a^5*b^2 + 2*a^4*b^3 - a^3*b^4 + a*b^6 - 
         2*a^6*c + a^4*b^2*c + b^6*c + a^5*c^2 + a^4*b*c^2 + 2*a^3*b^2*c^2 - 
         a*b^4*c^2 + b^5*c^2 + 2*a^4*c^3 - 2*b^4*c^3 - a^3*c^4 - a*b^2*c^4 - 
         2*b^3*c^4 + b^2*c^5 + a*c^6 + b*c^6)}, 
     "X5768" -> {b*c*(-a^7 + 3*a^6*b - a^5*b^2 - 5*a^4*b^3 + 5*a^3*b^4 + 
         a^2*b^5 - 3*a*b^6 + b^7 + 3*a^6*c + 2*a^5*b*c + a^4*b^2*c - 
         4*a^3*b^3*c - 3*a^2*b^4*c + 2*a*b^5*c - b^6*c - a^5*c^2 + 
         a^4*b*c^2 - 2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 + 3*a*b^4*c^2 - 
         3*b^5*c^2 - 5*a^4*c^3 - 4*a^3*b*c^3 + 2*a^2*b^2*c^3 - 4*a*b^3*c^3 + 
         3*b^4*c^3 + 5*a^3*c^4 - 3*a^2*b*c^4 + 3*a*b^2*c^4 + 3*b^3*c^4 + 
         a^2*c^5 + 2*a*b*c^5 - 3*b^2*c^5 - 3*a*c^6 - b*c^6 + c^7)}, 
     "X5769" -> {b*c*(a^7 + a^6*b - 2*a^5*b^2 - a^4*b^3 + 2*a^3*b^4 - a*b^6 + 
         a^6*c - a^4*b^2*c + a^2*b^4*c - b^6*c - 2*a^5*c^2 - a^4*b*c^2 + 
         a^2*b^3*c^2 + a*b^4*c^2 - b^5*c^2 - a^4*c^3 + a^2*b^2*c^3 + 
         2*b^4*c^3 + 2*a^3*c^4 + a^2*b*c^4 + a*b^2*c^4 + 2*b^3*c^4 - 
         b^2*c^5 - a*c^6 - b*c^6)}, "X5770" -> 
      {b*c*(a^7 + a^6*b - 5*a^5*b^2 - a^4*b^3 + 7*a^3*b^4 - a^2*b^5 - 
         3*a*b^6 + b^7 + a^6*c + 2*a^5*b*c + a^4*b^2*c - 4*a^3*b^3*c - 
         a^2*b^4*c + 2*a*b^5*c - b^6*c - 5*a^5*c^2 + a^4*b*c^2 + 
         2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 + 3*a*b^4*c^2 - 3*b^5*c^2 - a^4*c^3 - 
         4*a^3*b*c^3 + 2*a^2*b^2*c^3 - 4*a*b^3*c^3 + 3*b^4*c^3 + 7*a^3*c^4 - 
         a^2*b*c^4 + 3*a*b^2*c^4 + 3*b^3*c^4 - a^2*c^5 + 2*a*b*c^5 - 
         3*b^2*c^5 - 3*a*c^6 - b*c^6 + c^7)}, 
     "X5771" -> {b*c*(2*a^7 - 7*a^5*b^2 + a^4*b^3 + 8*a^3*b^4 - 2*a^2*b^5 - 
         3*a*b^6 + b^7 - 4*a^5*b*c + a^4*b^2*c + 2*a^3*b^3*c + 2*a*b^5*c - 
         b^6*c - 7*a^5*c^2 + a^4*b*c^2 + 4*a^3*b^2*c^2 + 2*a^2*b^3*c^2 + 
         3*a*b^4*c^2 - 3*b^5*c^2 + a^4*c^3 + 2*a^3*b*c^3 + 2*a^2*b^2*c^3 - 
         4*a*b^3*c^3 + 3*b^4*c^3 + 8*a^3*c^4 + 3*a*b^2*c^4 + 3*b^3*c^4 - 
         2*a^2*c^5 + 2*a*b*c^5 - 3*b^2*c^5 - 3*a*c^6 - b*c^6 + c^7)}, 
     "X5772" -> {b*c*(a^3 + 3*b^3 - a*(b - c)^2 + 5*b^2*c + 5*b*c^2 + 3*c^3 + 
         5*a^2*(b + c))}, "X5773" -> 
      {b*c*(-2*a^5 + a^4*b + a^3*b^2 - a^2*b^3 + a*b^4 + a^4*c - 2*a*b^3*c + 
         b^4*c + a^3*c^2 + 2*a*b^2*c^2 - b^3*c^2 - a^2*c^3 - 2*a*b*c^3 - 
         b^2*c^3 + a*c^4 + b*c^4)}, "X5774" -> 
      {b*c*(a^4 + 2*a^3*b - a^2*b^2 - 2*a*b^3 + 2*a^3*c - 2*a^2*b*c - 
         2*a*b^2*c - 2*b^3*c - a^2*c^2 - 2*a*b*c^2 - 4*b^2*c^2 - 2*a*c^3 - 
         2*b*c^3)}, "X5775" -> {b*c*(a^4 + 6*a^3*b - 4*a^2*b^2 - 6*a*b^3 + 
         3*b^4 + 6*a^3*c - 4*a^2*b*c - 2*a*b^2*c - 4*a^2*c^2 - 2*a*b*c^2 - 
         6*b^2*c^2 - 6*a*c^3 + 3*c^4)}, "X5776" -> 
      {b*c*(a*(a^7 - 2*a^6*b - a^5*b^2 + 4*a^4*b^3 - a^3*b^4 - 2*a^2*b^5 + 
          a*b^6 - 2*a^6*c - 2*a^4*b^2*c + 2*a^2*b^4*c + 2*b^6*c - a^5*c^2 - 
          2*a^4*b*c^2 + 2*a^3*b^2*c^2 - a*b^4*c^2 + 2*b^5*c^2 + 4*a^4*c^3 - 
          4*b^4*c^3 - a^3*c^4 + 2*a^2*b*c^4 - a*b^2*c^4 - 4*b^3*c^4 - 
          2*a^2*c^5 + 2*b^2*c^5 + a*c^6 + 2*b*c^6))}, 
     "X5777" -> {b*c*(a*(a^5*b - a^4*b^2 - 2*a^3*b^3 + 2*a^2*b^4 + a*b^5 - 
          b^6 + a^5*c + 2*a^2*b^3*c - a*b^4*c - 2*b^5*c - a^4*c^2 + b^4*c^2 - 
          2*a^3*c^3 + 2*a^2*b*c^3 + 4*b^3*c^3 + 2*a^2*c^4 - a*b*c^4 + 
          b^2*c^4 + a*c^5 - 2*b*c^5 - c^6))}, 
     "X5778" -> {b*c*(a*(a^7 - 2*a^6*b - a^5*b^2 + 4*a^4*b^3 - a^3*b^4 - 
          2*a^2*b^5 + a*b^6 - 2*a^6*c + 2*a^5*b*c - 2*a^3*b^3*c + 2*b^6*c - 
          a^5*c^2 + 2*a^3*b^2*c^2 - 2*a^2*b^3*c^2 - a*b^4*c^2 + 2*b^5*c^2 + 
          4*a^4*c^3 - 2*a^3*b*c^3 - 2*a^2*b^2*c^3 - 4*b^4*c^3 - a^3*c^4 - 
          a*b^2*c^4 - 4*b^3*c^4 - 2*a^2*c^5 + 2*b^2*c^5 + a*c^6 + 2*b*c^6))}, 
     "X5779" -> {a^5 - 4*a^3*b^2 + 2*a^2*b^3 + 3*a*b^4 - 2*b^5 + 2*a^3*b*c + 
        2*a^2*b^2*c - 2*a*b^3*c - 2*b^4*c - 4*a^3*c^2 + 2*a^2*b*c^2 - 
        2*a*b^2*c^2 + 4*b^3*c^2 + 2*a^2*c^3 - 2*a*b*c^3 + 4*b^2*c^3 + 
        3*a*c^4 - 2*b*c^4 - 2*c^5}, "X5780" -> 
      {b*c*(a*(a^6 - 3*a^5*b + 6*a^3*b^3 - 3*a^2*b^4 - 3*a*b^5 + 2*b^6 - 
          3*a^5*c + 6*a^4*b*c - 10*a^2*b^3*c + 3*a*b^4*c + 4*b^5*c + 
          2*a^2*b^2*c^2 - 2*b^4*c^2 + 6*a^3*c^3 - 10*a^2*b*c^3 - 8*b^3*c^3 - 
          3*a^2*c^4 + 3*a*b*c^4 - 2*b^2*c^4 - 3*a*c^5 + 4*b*c^5 + 2*c^6))}, 
     "X5781" -> {b*c*(a*(a^6 - 3*a^5*b + 2*a^4*b^2 + 2*a^3*b^3 - 3*a^2*b^4 + 
          a*b^5 - 3*a^5*c - 2*a^4*b*c + 2*a^3*b^2*c + a*b^4*c + 2*b^5*c + 
          2*a^4*c^2 + 2*a^3*b*c^2 - 2*a^2*b^2*c^2 - 2*a*b^3*c^2 + 2*a^3*c^3 - 
          2*a*b^2*c^3 - 4*b^3*c^3 - 3*a^2*c^4 + a*b*c^4 + a*c^5 + 2*b*c^5))}, 
     "X5782" -> {b*c*(a*(a^4 - a^3*b - a^2*b^2 + a*b^3 - a^3*c + 4*a^2*b*c - 
          a*b^2*c + 2*b^3*c - a^2*c^2 - a*b*c^2 + 4*b^2*c^2 + a*c^3 + 
          2*b*c^3))}, "X5783" -> 
      {b*c*(a*(a^4 - a^3*b - a^2*b^2 + a*b^3 - a^3*c + 2*a^2*b*c + a*b^2*c + 
          2*b^3*c - a^2*c^2 + a*b*c^2 + 4*b^2*c^2 + a*c^3 + 2*b*c^3))}, 
     "X5784" -> {b*c*(a*(a^4*b - 2*a^3*b^2 + 2*a*b^4 - b^5 + a^4*c - b^4*c - 
          2*a^3*c^2 + 4*a*b^2*c^2 + 2*b^3*c^2 + 2*b^2*c^3 + 2*a*c^4 - b*c^4 - 
          c^5))}, "X5785" -> {b*c*(a*(a^5 + a^4*b - 6*a^3*b^2 + 2*a^2*b^3 + 
          5*a*b^4 - 3*b^5 + a^4*c - 4*a^3*b*c + 2*a^2*b^2*c + 4*a*b^3*c - 
          3*b^4*c - 6*a^3*c^2 + 2*a^2*b*c^2 + 14*a*b^2*c^2 + 6*b^3*c^2 + 
          2*a^2*c^3 + 4*a*b*c^3 + 6*b^2*c^3 + 5*a*c^4 - 3*b*c^4 - 3*c^5))}, 
     "X5786" -> {b*c*(a^7 + 3*a^6*b - 2*a^4*b^3 + a^3*b^4 - a^2*b^5 - 
         2*a*b^6 + 3*a^6*c + 2*a^5*b*c - a^2*b^4*c - 2*a*b^5*c - 2*b^6*c - 
         2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 + 2*a*b^4*c^2 - 2*b^5*c^2 - 
         2*a^4*c^3 + 2*a^2*b^2*c^3 + 4*a*b^3*c^3 + 4*b^4*c^3 + a^3*c^4 - 
         a^2*b*c^4 + 2*a*b^2*c^4 + 4*b^3*c^4 - a^2*c^5 - 2*a*b*c^5 - 
         2*b^2*c^5 - 2*a*c^6 - 2*b*c^6)}, 
     "X5787" -> {b*c*(-a^7 + 2*a^6*b - 3*a^4*b^3 + 3*a^3*b^4 - 2*a*b^6 + 
         b^7 + 2*a^6*c + 2*a^5*b*c + a^4*b^2*c - 2*a^3*b^3*c - 2*a^2*b^4*c - 
         b^6*c + a^4*b*c^2 - 2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 + 2*a*b^4*c^2 - 
         3*b^5*c^2 - 3*a^4*c^3 - 2*a^3*b*c^3 + 2*a^2*b^2*c^3 + 3*b^4*c^3 + 
         3*a^3*c^4 - 2*a^2*b*c^4 + 2*a*b^2*c^4 + 3*b^3*c^4 - 3*b^2*c^5 - 
         2*a*c^6 - b*c^6 + c^7)}, "X5788" -> 
      {b*c*(a^7 + a^6*b - 2*a^5*b^2 + 3*a^3*b^4 - a^2*b^5 - 2*a*b^6 + a^6*c + 
         2*a^3*b^3*c + a^2*b^4*c - 2*a*b^5*c - 2*b^6*c - 2*a^5*c^2 + 
         2*a^3*b^2*c^2 + 4*a^2*b^3*c^2 + 2*a*b^4*c^2 - 2*b^5*c^2 + 
         2*a^3*b*c^3 + 4*a^2*b^2*c^3 + 4*a*b^3*c^3 + 4*b^4*c^3 + 3*a^3*c^4 + 
         a^2*b*c^4 + 2*a*b^2*c^4 + 4*b^3*c^4 - a^2*c^5 - 2*a*b*c^5 - 
         2*b^2*c^5 - 2*a*c^6 - 2*b*c^6)}, 
     "X5789" -> {b*c*(a^7 + a^6*b - 6*a^5*b^2 + 9*a^3*b^4 - 3*a^2*b^5 - 
         4*a*b^6 + 2*b^7 + a^6*c + 2*a^5*b*c + 2*a^4*b^2*c - 2*a^3*b^3*c - 
         a^2*b^4*c - 2*b^6*c - 6*a^5*c^2 + 2*a^4*b*c^2 + 2*a^3*b^2*c^2 + 
         4*a^2*b^3*c^2 + 4*a*b^4*c^2 - 6*b^5*c^2 - 2*a^3*b*c^3 + 
         4*a^2*b^2*c^3 + 6*b^4*c^3 + 9*a^3*c^4 - a^2*b*c^4 + 4*a*b^2*c^4 + 
         6*b^3*c^4 - 3*a^2*c^5 - 6*b^2*c^5 - 4*a*c^6 - 2*b*c^6 + 2*c^7)}, 
     "X5790" -> {b*c*(a^4 - 2*a^3*b + a^2*b^2 + 2*a*b^3 - 2*b^4 - 2*a^3*c + 
         4*a^2*b*c - 2*a*b^2*c + a^2*c^2 - 2*a*b*c^2 + 4*b^2*c^2 + 2*a*c^3 - 
         2*c^4)}, "X5791" -> {b*c*(a^4 + a^3*b - 2*a^2*b^2 - a*b^3 + b^4 + 
         a^3*c - 2*a^2*b*c - 3*a*b^2*c - 2*a^2*c^2 - 3*a*b*c^2 - 2*b^2*c^2 - 
         a*c^3 + c^4)}, "X5792" -> {b*c*(3*a^5 - a^4*b - a^3*b^2 + a^2*b^3 - 
         2*a*b^4 - a^4*c + a^2*b^2*c + 2*a*b^3*c - 2*b^4*c - a^3*c^2 + 
         a^2*b*c^2 + 2*b^3*c^2 + a^2*c^3 + 2*a*b*c^3 + 2*b^2*c^3 - 2*a*c^4 - 
         2*b*c^4)}, "X5793" -> {b*c*(a^4 + a^2*b^2 + 2*a*b^3 + 4*a^2*b*c + 
         2*a*b^2*c + 2*b^3*c + a^2*c^2 + 2*a*b*c^2 + 4*b^2*c^2 + 2*a*c^3 + 
         2*b*c^3)}, "X5794" -> {b*c*(a^4 - a^3*b + a*b^3 - b^4 - a^3*c + 
         2*a^2*b*c + a*b^2*c + a*b*c^2 + 2*b^2*c^2 + a*c^3 - c^4)}, 
     "X5795" -> {b*c*((a - b - c)*(2*a^3 + a^2*b + b^3 + a^2*c + 4*a*b*c - 
          b^2*c - b*c^2 + c^3))}, "X5796" -> 
      {b*c*(a^8*b + 2*a^7*b^2 - 4*a^6*b^3 - 4*a^5*b^4 + 4*a^4*b^5 + 
         2*a^3*b^6 - b^9 + a^8*c + 2*a^7*b*c - a^6*b^2*c - 4*a^5*b^3*c - 
         a^4*b^4*c + 2*a^3*b^5*c + a^2*b^6*c + 2*a^7*c^2 - a^6*b*c^2 - 
         3*a^4*b^3*c^2 - 2*a^3*b^4*c^2 + a^2*b^5*c^2 + 3*b^7*c^2 - 
         4*a^6*c^3 - 4*a^5*b*c^3 - 3*a^4*b^2*c^3 - 4*a^3*b^3*c^3 - 
         2*a^2*b^4*c^3 + b^6*c^3 - 4*a^5*c^4 - a^4*b*c^4 - 2*a^3*b^2*c^4 - 
         2*a^2*b^3*c^4 - 3*b^5*c^4 + 4*a^4*c^5 + 2*a^3*b*c^5 + a^2*b^2*c^5 - 
         3*b^4*c^5 + 2*a^3*c^6 + a^2*b*c^6 + b^3*c^6 + 3*b^2*c^7 - c^9)}, 
     "X5797" -> {b*c*(a^6*b - 2*a^5*b^2 - 3*a^4*b^3 + 2*a^3*b^4 + a^2*b^5 + 
         b^7 + a^6*c - 2*a^5*b*c - 2*a^4*b^2*c + a^2*b^4*c + 2*a*b^5*c - 
         2*a^5*c^2 - 2*a^4*b*c^2 - 4*a^3*b^2*c^2 - 2*a^2*b^3*c^2 - 
         2*b^5*c^2 - 3*a^4*c^3 - 2*a^2*b^2*c^3 - 4*a*b^3*c^3 + b^4*c^3 + 
         2*a^3*c^4 + a^2*b*c^4 + b^3*c^4 + a^2*c^5 + 2*a*b*c^5 - 2*b^2*c^5 + 
         c^7)}, "X5798" -> {b*c*(-2*a^7*b + a^6*b^2 + 4*a^5*b^3 - a^4*b^4 - 
         2*a^3*b^5 - a^2*b^6 + b^8 - 2*a^7*c + 4*a^6*b*c + 2*a^5*b^2*c + 
         2*a^3*b^4*c - 4*a^2*b^5*c - 2*a*b^6*c + a^6*c^2 + 2*a^5*b*c^2 + 
         2*a^4*b^2*c^2 + a^2*b^4*c^2 - 2*a*b^5*c^2 - 4*b^6*c^2 + 4*a^5*c^3 + 
         8*a^2*b^3*c^3 + 4*a*b^4*c^3 - a^4*c^4 + 2*a^3*b*c^4 + a^2*b^2*c^4 + 
         4*a*b^3*c^4 + 6*b^4*c^4 - 2*a^3*c^5 - 4*a^2*b*c^5 - 2*a*b^2*c^5 - 
         a^2*c^6 - 2*a*b*c^6 - 4*b^2*c^6 + c^8)}, 
     "X5799" -> {b*c*(-3*a^5*b^2 - 3*a^4*b^3 + 2*a^3*b^4 + 2*a^2*b^5 + 
         a*b^6 + b^7 - 4*a^5*b*c - 3*a^4*b^2*c + 2*a^2*b^4*c + 4*a*b^5*c + 
         b^6*c - 3*a^5*c^2 - 3*a^4*b*c^2 - 4*a^3*b^2*c^2 - 4*a^2*b^3*c^2 - 
         a*b^4*c^2 - b^5*c^2 - 3*a^4*c^3 - 4*a^2*b^2*c^3 - 8*a*b^3*c^3 - 
         b^4*c^3 + 2*a^3*c^4 + 2*a^2*b*c^4 - a*b^2*c^4 - b^3*c^4 + 
         2*a^2*c^5 + 4*a*b*c^5 - b^2*c^5 + a*c^6 + b*c^6 + c^7)}, 
     "X5800" -> {b*c*(a^6 + a^4*b^2 - a^2*b^4 - b^6 + 4*a^4*b*c + 
         4*a^3*b^2*c + a^4*c^2 + 4*a^3*b*c^2 + 2*a^2*b^2*c^2 + b^4*c^2 - 
         a^2*c^4 + b^2*c^4 - c^6)}, "X5801" -> 
      {b*c*(a^6 + 2*a^5*b + 7*a^4*b^2 - 5*a^2*b^4 - 2*a*b^5 - 3*b^6 + 
         2*a^5*c + 18*a^4*b*c + 16*a^3*b^2*c - 2*a*b^4*c - 2*b^5*c + 
         7*a^4*c^2 + 16*a^3*b*c^2 + 10*a^2*b^2*c^2 + 4*a*b^3*c^2 + 
         3*b^4*c^2 + 4*a*b^2*c^3 + 4*b^3*c^3 - 5*a^2*c^4 - 2*a*b*c^4 + 
         3*b^2*c^4 - 2*a*c^5 - 2*b*c^5 - 3*c^6)}, 
     "X5802" -> {b*c*(a - b - c)*(3*a^4 + 2*a^3*b + 2*a*b^3 + b^4 + 2*a^3*c - 
         2*a*b^2*c - 2*a*b*c^2 - 2*b^2*c^2 + 2*a*c^3 + c^4)}, 
     "X5803" -> {b*c*(a^9 - a^8*b - 2*a^7*b^2 + 2*a^6*b^3 + 2*a^5*b^4 - 
         2*a^4*b^5 - 2*a^3*b^6 + 2*a^2*b^7 + a*b^8 - b^9 - a^8*c - 
         2*a^7*b*c + 4*a^5*b^3*c + 4*a^4*b^4*c - 2*a^3*b^5*c - 4*a^2*b^6*c + 
         b^8*c - 2*a^7*c^2 + 4*a^5*b^2*c^2 + 2*a^4*b^3*c^2 + 2*a^3*b^4*c^2 - 
         4*a^2*b^5*c^2 - 4*a*b^6*c^2 + 2*b^7*c^2 + 2*a^6*c^3 + 4*a^5*b*c^3 + 
         2*a^4*b^2*c^3 + 4*a^3*b^3*c^3 + 6*a^2*b^4*c^3 - 2*b^6*c^3 + 
         2*a^5*c^4 + 4*a^4*b*c^4 + 2*a^3*b^2*c^4 + 6*a^2*b^3*c^4 + 
         6*a*b^4*c^4 - 2*a^4*c^5 - 2*a^3*b*c^5 - 4*a^2*b^2*c^5 - 2*a^3*c^6 - 
         4*a^2*b*c^6 - 4*a*b^2*c^6 - 2*b^3*c^6 + 2*a^2*c^7 + 2*b^2*c^7 + 
         a*c^8 + b*c^8 - c^9)}, "X5804" -> 
      {b*c*(-a^7 + 3*a^6*b - a^5*b^2 - 5*a^4*b^3 + 5*a^3*b^4 + a^2*b^5 - 
         3*a*b^6 + b^7 + 3*a^6*c - 6*a^5*b*c + a^4*b^2*c - 4*a^3*b^3*c - 
         3*a^2*b^4*c + 10*a*b^5*c - b^6*c - a^5*c^2 + a^4*b*c^2 - 
         2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 + 3*a*b^4*c^2 - 3*b^5*c^2 - 
         5*a^4*c^3 - 4*a^3*b*c^3 + 2*a^2*b^2*c^3 - 20*a*b^3*c^3 + 3*b^4*c^3 + 
         5*a^3*c^4 - 3*a^2*b*c^4 + 3*a*b^2*c^4 + 3*b^3*c^4 + a^2*c^5 + 
         10*a*b*c^5 - 3*b^2*c^5 - 3*a*c^6 - b*c^6 + c^7)}, 
     "X5805" -> {b*c*(a^6 - a^5*b - a^4*b^2 + a^2*b^4 + a*b^5 - b^6 - a^5*c - 
         2*a^2*b^3*c + a*b^4*c + 2*b^5*c - a^4*c^2 + 2*a^2*b^2*c^2 - 
         2*a*b^3*c^2 + b^4*c^2 - 2*a^2*b*c^3 - 2*a*b^2*c^3 - 4*b^3*c^3 + 
         a^2*c^4 + a*b*c^4 + b^2*c^4 + a*c^5 + 2*b*c^5 - c^6)}, 
     "X5806" -> {b*c*(a*(a^5*b - a^4*b^2 - 2*a^3*b^3 + 2*a^2*b^4 + a*b^5 - 
          b^6 + a^5*c - 4*a^4*b*c - 2*a^2*b^3*c - a*b^4*c + 6*b^5*c - 
          a^4*c^2 + b^4*c^2 - 2*a^3*c^3 - 2*a^2*b*c^3 - 12*b^3*c^3 + 
          2*a^2*c^4 - a*b*c^4 + b^2*c^4 + a*c^5 + 6*b*c^5 - c^6))}, 
     "X5807" -> {b*c*(a^6 - 2*a^5*b + a^4*b^2 - a^2*b^4 + 2*a*b^5 - b^6 - 
         2*a^5*c - 6*a^4*b*c - 6*a^3*b^2*c - 2*a^2*b^3*c + a^4*c^2 - 
         6*a^3*b*c^2 - 2*a^2*b^2*c^2 - 2*a*b^3*c^2 + b^4*c^2 - 2*a^2*b*c^3 - 
         2*a*b^2*c^3 - a^2*c^4 + b^2*c^4 + 2*a*c^5 - c^6)}, 
     "X5808" -> {b*c*(a^6 - a^5*b - a^4*b^2 + a^2*b^4 + a*b^5 - b^6 - a^5*c - 
         6*a^4*b*c - 8*a^3*b^2*c - 2*a^2*b^3*c + a*b^4*c - a^4*c^2 - 
         8*a^3*b*c^2 - 6*a^2*b^2*c^2 - 2*a*b^3*c^2 + b^4*c^2 - 2*a^2*b*c^3 - 
         2*a*b^2*c^3 + a^2*c^4 + a*b*c^4 + b^2*c^4 + a*c^5 - c^6)}, 
     "X5809" -> {b*c*(a - b - c)*(a^5 - 3*a^4*b + 2*a^3*b^2 + 2*a^2*b^3 - 
         3*a*b^4 + b^5 - 3*a^4*c - 8*a^3*b*c - 2*a^2*b^2*c - 3*b^4*c + 
         2*a^3*c^2 - 2*a^2*b*c^2 + 6*a*b^2*c^2 + 2*b^3*c^2 + 2*a^2*c^3 + 
         2*b^2*c^3 - 3*a*c^4 - 3*b*c^4 + c^5)}, 
     "X5810" -> {b*c*(a^7 + a^6*b - a^5*b^2 - a^4*b^3 + a^3*b^4 + a^2*b^5 - 
         a*b^6 - b^7 + a^6*c - a^4*b^2*c + 2*a^3*b^3*c + a^2*b^4*c - 
         2*a*b^5*c - b^6*c - a^5*c^2 - a^4*b*c^2 + 2*a^3*b^2*c^2 + 
         2*a^2*b^3*c^2 + a*b^4*c^2 + b^5*c^2 - a^4*c^3 + 2*a^3*b*c^3 + 
         2*a^2*b^2*c^3 + 4*a*b^3*c^3 + b^4*c^3 + a^3*c^4 + a^2*b*c^4 + 
         a*b^2*c^4 + b^3*c^4 + a^2*c^5 - 2*a*b*c^5 + b^2*c^5 - a*c^6 - 
         b*c^6 - c^7)}, "X5811" -> {b*c*(-a^7 - a^6*b + 3*a^5*b^2 + 
         3*a^4*b^3 - 3*a^3*b^4 - 3*a^2*b^5 + a*b^6 + b^7 - a^6*c - 
         2*a^5*b*c + a^4*b^2*c - 4*a^3*b^3*c + a^2*b^4*c + 6*a*b^5*c - 
         b^6*c + 3*a^5*c^2 + a^4*b*c^2 - 2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 - 
         a*b^4*c^2 - 3*b^5*c^2 + 3*a^4*c^3 - 4*a^3*b*c^3 + 2*a^2*b^2*c^3 - 
         12*a*b^3*c^3 + 3*b^4*c^3 - 3*a^3*c^4 + a^2*b*c^4 - a*b^2*c^4 + 
         3*b^3*c^4 - 3*a^2*c^5 + 6*a*b*c^5 - 3*b^2*c^5 + a*c^6 - b*c^6 + 
         c^7)}, "X5812" -> {b*c*(-a^7 + 2*a^5*b^2 + a^4*b^3 - a^3*b^4 - 
         2*a^2*b^5 + b^7 + 2*a^5*b*c + a^4*b^2*c - 2*a^3*b^3*c - b^6*c + 
         2*a^5*c^2 + a^4*b*c^2 - 2*a^3*b^2*c^2 + 2*a^2*b^3*c^2 - 3*b^5*c^2 + 
         a^4*c^3 - 2*a^3*b*c^3 + 2*a^2*b^2*c^3 + 3*b^4*c^3 - a^3*c^4 + 
         3*b^3*c^4 - 2*a^2*c^5 - 3*b^2*c^5 - b*c^6 + c^7)}, 
     "X5813" -> {b*c*(a^5 + a^4*b - a*b^4 - b^5 + a^4*c - 4*a^3*b*c + 
         2*a^2*b^2*c + b^4*c + 2*a^2*b*c^2 + 2*a*b^2*c^2 - a*c^4 + b*c^4 - 
         c^5)}, "X5814" -> {b*c*(-a^4 - a^3*b + a*b^3 + b^4 - a^3*c + 
         3*a*b^2*c + 2*b^3*c + 3*a*b*c^2 + 2*b^2*c^2 + a*c^3 + 2*b*c^3 + 
         c^4)}, "X5815" -> {b*c*(-a^4 - 2*a^3*b + 2*a*b^3 + b^4 - 2*a^3*c - 
         4*a^2*b*c + 6*a*b^2*c + 6*a*b*c^2 - 2*b^2*c^2 + 2*a*c^3 + c^4)}, 
     "X5816" -> {b*c*(-a^5 + a^4*b - 2*a^2*b^3 + a*b^4 + b^5 + a^4*c - 
         2*a^3*b*c + b^4*c - 2*a*b^2*c^2 - 2*b^3*c^2 - 2*a^2*c^3 - 
         2*b^2*c^3 + a*c^4 + b*c^4 + c^5)}, 
     "X5817" -> {b*c*(a^6 - 5*a^4*b^2 + 4*a^3*b^3 + 3*a^2*b^4 - 4*a*b^5 + 
         b^6 + 2*a^4*b*c + 4*a^3*b^2*c - 4*a*b^4*c - 2*b^5*c - 5*a^4*c^2 + 
         4*a^3*b*c^2 - 6*a^2*b^2*c^2 + 8*a*b^3*c^2 - b^4*c^2 + 4*a^3*c^3 + 
         8*a*b^2*c^3 + 4*b^3*c^3 + 3*a^2*c^4 - 4*a*b*c^4 - b^2*c^4 - 
         4*a*c^5 - 2*b*c^5 + c^6)}, "X5818" -> 
      {b*c*(a^4 - 2*a^3*b + 2*a^2*b^2 + 2*a*b^3 - 3*b^4 - 2*a^3*c + 
         4*a^2*b*c - 2*a*b^2*c + 2*a^2*c^2 - 2*a*b*c^2 + 6*b^2*c^2 + 
         2*a*c^3 - 3*c^4)}, "X5819" -> 
      {b*c*(-3*a^4 + 2*a^3*b - 2*a^2*b^2 + 2*a*b^3 + b^4 + 2*a^3*c - 
         2*a*b^2*c - 2*a^2*c^2 - 2*a*b*c^2 - 2*b^2*c^2 + 2*a*c^3 + c^4)}, 
     "X5820" -> {b*c*(a^6 - a^4*b^2 + a^2*b^4 - b^6 + 2*a^4*b*c + 
         2*a^3*b^2*c - a^4*c^2 + 2*a^3*b*c^2 + 2*a^2*b^2*c^2 + b^4*c^2 + 
         a^2*c^4 + b^2*c^4 - c^6)}, "X5821" -> 
      {b*c*(a^6 + a^4*b^2 + 2*a^3*b^3 + a^2*b^4 - 2*a*b^5 - 3*b^6 + 
         8*a^4*b*c + 10*a^3*b^2*c + 2*a^2*b^3*c - 2*a*b^4*c - 2*b^5*c + 
         a^4*c^2 + 10*a^3*b*c^2 + 10*a^2*b^2*c^2 + 4*a*b^3*c^2 + 3*b^4*c^2 + 
         2*a^3*c^3 + 2*a^2*b*c^3 + 4*a*b^2*c^3 + 4*b^3*c^3 + a^2*c^4 - 
         2*a*b*c^4 + 3*b^2*c^4 - 2*a*c^5 - 2*b*c^5 - 3*c^6)}, 
     "X5822" -> {b*c*((a - b - c)*(3*a^4 - 2*a^2*b^2 + 2*a*b^3 + b^4 + 
          2*a^2*b*c - 2*a*b^2*c - 2*a^2*c^2 - 2*a*b*c^2 - 2*b^2*c^2 + 
          2*a*c^3 + c^4))}, "X5823" -> 
      {b*c*(a^6 + a^5*b - 3*a^4*b^2 + a^2*b^4 - a*b^5 + b^6 + a^5*c + 
         4*a^4*b*c + 3*a^3*b^2*c - a^2*b^3*c + b^5*c - 3*a^4*c^2 + 
         3*a^3*b*c^2 - 4*a^2*b^2*c^2 + a*b^3*c^2 - b^4*c^2 - a^2*b*c^3 + 
         a*b^2*c^3 - 2*b^3*c^3 + a^2*c^4 - b^2*c^4 - a*c^5 + b*c^5 + c^6)}, 
     "X5824" -> {b*c*(-a^6 - 2*a^5*b + 2*a^4*b^2 + 2*a^3*b^3 + a^2*b^4 - 
         2*b^6 - 2*a^5*c - 8*a^4*b*c - 6*a^3*b^2*c + 2*a^2*b^3*c - 2*b^5*c + 
         2*a^4*c^2 - 6*a^3*b*c^2 + 2*a^2*b^2*c^2 + 2*b^4*c^2 + 2*a^3*c^3 + 
         2*a^2*b*c^3 + 4*b^3*c^3 + a^2*c^4 + 2*b^2*c^4 - 2*b*c^5 - 2*c^6)}, 
     "X5825" -> {b*c*(a - b - c)*(3*a^5 + 3*a^4*b - 10*a^3*b^2 - 2*a^2*b^3 + 
         7*a*b^4 - b^5 + 3*a^4*c + 8*a^3*b*c + 2*a^2*b^2*c + 3*b^4*c - 
         10*a^3*c^2 + 2*a^2*b*c^2 - 14*a*b^2*c^2 - 2*b^3*c^2 - 2*a^2*c^3 - 
         2*b^2*c^3 + 7*a*c^4 + 3*b*c^4 - c^5)}, 
     "X5826" -> {b*c*(a^5 - 2*a^4*b - a^3*b^2 + a^2*b^3 + b^5 - 2*a^4*c + 
         4*a^3*b*c - 2*a^2*b^2*c + 2*a*b^3*c - 2*b^4*c - a^3*c^2 - 
         2*a^2*b*c^2 - 4*a*b^2*c^2 + b^3*c^2 + a^2*c^3 + 2*a*b*c^3 + 
         b^2*c^3 - 2*b*c^4 + c^5)}, "X5827" -> 
      {b*c*(a^4 + a^2*b^2 - 2*b^4 + 2*a^2*b*c - 4*a*b^2*c - 2*b^3*c + 
         a^2*c^2 - 4*a*b*c^2 - 2*b*c^3 - 2*c^4)}, 
     "X5828" -> {b*c*(a^4 - 2*a^3*b + 4*a^2*b^2 + 2*a*b^3 - 5*b^4 - 2*a^3*c + 
         12*a^2*b*c - 10*a*b^2*c + 4*a^2*c^2 - 10*a*b*c^2 + 10*b^2*c^2 + 
         2*a*c^3 - 5*c^4)}, "X5829" -> 
      {b*c*(-2*a^7 + 2*a^6*b + a^5*b^2 + a^4*b^3 - 4*a^2*b^5 + a*b^6 + b^7 + 
         2*a^6*c - a^4*b^2*c + 4*a^3*b^3*c - 4*a*b^5*c - b^6*c + a^5*c^2 - 
         a^4*b*c^2 + 4*a^2*b^3*c^2 - a*b^4*c^2 - 3*b^5*c^2 + a^4*c^3 + 
         4*a^3*b*c^3 + 4*a^2*b^2*c^3 + 8*a*b^3*c^3 + 3*b^4*c^3 - a*b^2*c^4 + 
         3*b^3*c^4 - 4*a^2*c^5 - 4*a*b*c^5 - 3*b^2*c^5 + a*c^6 - b*c^6 + 
         c^7)}, "X5830" -> {b*c*(2*a^5 - 2*a^4*b - a^3*b^2 + a^2*b^3 - 
         a*b^4 + b^5 - 2*a^4*c + 4*a^3*b*c - 5*a^2*b^2*c - 2*a*b^3*c + 
         b^4*c - a^3*c^2 - 5*a^2*b*c^2 - 2*a*b^2*c^2 - 2*b^3*c^2 + a^2*c^3 - 
         2*a*b*c^3 - 2*b^2*c^3 - a*c^4 + b*c^4 + c^5)}, 
     "X5831" -> {b*c*(a^5 - a^3*b^2 - a^2*b^3 + b^5 + 2*a^3*b*c - 
         5*a^2*b^2*c - 2*a*b^3*c + b^4*c - a^3*c^2 - 5*a^2*b*c^2 - 
         4*a*b^2*c^2 - 2*b^3*c^2 - a^2*c^3 - 2*a*b*c^3 - 2*b^2*c^3 + b*c^4 + 
         c^5)}, "X5832" -> {b*c*(a^6 - a^5*b - a^4*b^2 + a^2*b^4 + a*b^5 - 
         b^6 - a^5*c + 2*a^4*b*c - 4*a^2*b^3*c + a*b^4*c + 2*b^5*c - 
         a^4*c^2 - 2*a^2*b^2*c^2 - 2*a*b^3*c^2 + b^4*c^2 - 4*a^2*b*c^3 - 
         2*a*b^2*c^3 - 4*b^3*c^3 + a^2*c^4 + a*b*c^4 + b^2*c^4 + a*c^5 + 
         2*b*c^5 - c^6)}, "X5833" -> 
      {b*c*(a^6 - a^5*b - 2*a^3*b^3 + a^2*b^4 + 3*a*b^5 - 2*b^6 - a^5*c + 
         8*a^4*b*c - 2*a^3*b^2*c - 12*a^2*b^3*c + 3*a*b^4*c + 4*b^5*c - 
         2*a^3*b*c^2 - 10*a^2*b^2*c^2 - 6*a*b^3*c^2 + 2*b^4*c^2 - 2*a^3*c^3 - 
         12*a^2*b*c^3 - 6*a*b^2*c^3 - 8*b^3*c^3 + a^2*c^4 + 3*a*b*c^4 + 
         2*b^2*c^4 + 3*a*c^5 + 4*b*c^5 - 2*c^6)}, 
     "X5834" -> {b*c*(-2*a^4*b - a^3*b^2 + a^2*b^3 + a*b^4 + b^5 - 2*a^4*c + 
         4*a^3*b*c - 3*a^2*b^2*c + 2*a*b^3*c - b^4*c - a^3*c^2 - 
         3*a^2*b*c^2 - 6*a*b^2*c^2 + a^2*c^3 + 2*a*b*c^3 + a*c^4 - b*c^4 + 
         c^5)}, "X5835" -> {b*c*(2*a^3*b + a^2*b^2 + b^4 + 2*a^3*c + 
         4*a*b^2*c + 2*b^3*c + a^2*c^2 + 4*a*b*c^2 + 2*b^2*c^2 + 2*b*c^3 + 
         c^4)}, "X5836" -> {b*c*(a*(a^2*b - b^3 + a^2*c - 2*a*b*c + 3*b^2*c + 
          3*b*c^2 - c^3))}, "X5837" -> 
      {b*c*(a - b - c)*(3*a^2*b + 2*a*b^2 - b^3 + 3*a^2*c + b^2*c + 2*a*c^2 + 
         b*c^2 - c^3)}, "X5838" -> 
      {b*c*((a - b - c)*(5*a^3 - a^2*b + 3*a*b^2 + b^3 - a^2*c - 6*a*b*c - 
          b^2*c + 3*a*c^2 - b*c^2 + c^3))}, 
     "X5839" -> {b*c*(3*a^2 - (b + c)^2)}, 
     "X5858" -> {b*c*(-2*a^2 + b^2 + c^2 + (2*S)/3^2^(-1))}, 
     "X5859" -> {b*c*(-2*a^2 + b^2 + c^2 - (2*S)/3^2^(-1))}, 
     "X5860" -> {b*c*(-2*a^2 + b^2 + c^2 + S)}, 
     "X5861" -> {b*c*(-2*a^2 + b^2 + c^2 - S)}, 
     "X5862" -> {b*c*(-2*a^2 + b^2 + c^2 + S/3^2^(-1))}, 
     "X5863" -> {b*c*(-2*a^2 + b^2 + c^2 - S/3^2^(-1))}, 
     "X5864" -> {a*(2*SA^2 - 2*SB*SC + S*SA*(4/3)^(1/2))}, 
     "X5865" -> {a*(2*SA^2 - 2*SB*SC - S*SA*(4/3)^(1/2))}, 
     "X5866" -> {b*c*(a^2*(b^2 + c^2 - a^2)*
         (a^6 - a^2*(b^4 - 5*b^2*c^2 + c^4) - (b^2 + c^2)*
           (a^4 - b^4 + 3*b^2*c^2 - c^4)))}, 
     "X5867" -> {a*((a + b)*(a + c)*(2*a^3*b^2 - 2*a*b^4 + 5*a^3*b*c + 
          3*a^2*b^2*c - 3*a*b^3*c - b^4*c + 2*a^3*c^2 + 3*a^2*b*c^2 - 
          a*b^2*c^2 - b^3*c^2 - 3*a*b*c^3 - b^2*c^3 - 2*a*c^4 - b*c^4))}, 
     "X5868" -> {b*c*(3*(2*a^6 - a^4*b^2 - b^6 - a^4*c^2 + b^4*c^2 + 
           b^2*c^4 - c^6) + 2*Sqrt[3]*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
          S)}, "X5869" -> {b*c*(3*(2*a^6 - a^4*b^2 - b^6 - a^4*c^2 + 
           b^4*c^2 + b^2*c^4 - c^6) - 2*Sqrt[3]*(a^2 + b^2 - c^2)*
          (a^2 - b^2 + c^2)*S)}, "X5871" -> 
      {b*c*(a^2*SB*SC - SA*(SB^2 + SC^2) - S*SB*SC)}, 
     "X5872" -> {b*c*(3*SA*(-2*a^4 - (b^2 - c^2)^2 + a^2*(b^2 + c^2)) - 
         ((b^2 - c^2)^2 - a^2*(b^2 + c^2))*Sqrt[3]*S)}, 
     "X5873" -> {b*c*(3*SA*(-2*a^4 - (b^2 - c^2)^2 + a^2*(b^2 + c^2)) + 
         ((b^2 - c^2)^2 - a^2*(b^2 + c^2))*Sqrt[3]*S)}, 
     "X5874" -> {b*c*(2*SA*(a^2*SA - SB^2 - SC^2) + S*(SB*SC + S^2))}, 
     "X5875" -> {b*c*(2*SA*(a^2*SA - SB^2 - SC^2) - S*(SB*SC + S^2))}, 
     "X5876" -> {a*(a^6*(b^2 + c^2) - 3*a^4*(b^4 + c^4) + 3*a^2*(b^6 + c^6) - 
         (b^2 - c^2)^2*(b^4 + 3*b^2*c^2 + c^4))}, 
     "X5877" -> {b*c*(a^12 + 5*a^8*b^2*c^2 - (4*a^4 + (b^2 - c^2)^2)*
          (b^2 - c^2)*(b^6 - c^6) - a^6*(b^2 + c^2)*(2*a^4 - 3*b^4 + 
           7*b^2*c^2 - 3*c^4) + 3*a^2*(b^2 - c^2)^2*(b^6 + c^6))}, 
     "X5878" -> {b*c*(SA^2*(20*R^2 - 3*SW) + SA*(3*SW^2 - 20*R^2*SW + S^2) + 
         S^2*(16*R^2 - 3*SW))}, "X5879" -> 
      {b*c*(a^2*(a^10 + (b^2 - 3*c^2)*a^8 - 2*(4*b^4 - 4*b^2*c^2 - c^4)*a^6 + 
          2*(b^2 - c^2)*(4*b^4 + 8*b^2*c^2 - c^4)*a^4 - 
          (b^2 - c^2)*(b^6 - 3*c^6 + (13*b^2 + 5*c^2)*b^2*c^2)*a^2 - 
          (b^4 + 4*b^2*c^2 + c^4)*(b^2 - c^2)^3)*(a^10 - (3*b^2 - c^2)*a^8 + 
          2*(b^4 + 4*b^2*c^2 - 4*c^4)*a^6 + 2*(b^2 - c^2)*(b^4 - 8*b^2*c^2 - 
            4*c^4)*a^4 - (b^2 - c^2)*(3*b^6 - c^6 - (5*b^2 + 13*c^2)*b^2*c^2)*
           a^2 + (b^4 + 4*b^2*c^2 + c^4)*(b^2 - c^2)^3))}, 
     "X5880" -> {b*c*(a^3 - b^3 - c^3 + 2*a*b*c + b^2*c + b*c^2)}, 
     "X5881" -> {b*c*(3*a^4 - 3*a^3*b - a^2*b^2 + 3*a*b^3 - 2*b^4 - 3*a^3*c + 
         6*a^2*b*c - 3*a*b^2*c - a^2*c^2 - 3*a*b*c^2 + 4*b^2*c^2 + 3*a*c^3 - 
         2*c^4)}, "X5882" -> {b*c*(3*(a/(2*sp)) - SB*(SC/S^2))}, 
     "X5883" -> {a^2*(b + c) + 2*a*b*c - (b + c)*(b^2 - 3*b*c + c^2)}, 
     "X5884" -> {a^5*(b + c) - a^4*(b^2 + c^2) - a^3*(b + c)*
         (2*b^2 - 3*b*c + 2*c^2) + a^2*(b - c)^2*(2*b^2 + 3*b*c + 2*c^2) + 
        a*(b - c)^2*(b^3 + c^3) - (b^2 - c^2)^2*(b^2 - b*c + c^2)}, 
     "X5885" -> {a^5*(b + c) - a^4*(b^2 + c^2) - a^3*(b + c)*
         (2*b^2 - 3*b*c + 2*c^2) + 2*a^2*(b^4 - b^3*c - b^2*c^2 - b*c^3 + 
          c^4) + a*(b - c)^2*(b^3 + c^3) - (b - c)^4*(b + c)^2}, 
     "X5886" -> {b*c*(a^4 - a^3*(b + c) - 2*a^2*(b^2 - b*c + c^2) + 
         a*(b - c)^2*(b + c) + (b^2 - c^2)^2)}, 
     "X5887" -> {b*c*(a*(a*(b + c)*(a^2 - (b - c)^2)^2 - a^4*(b + c)^2 + 
          2*a^2*((b^2 - c^2)^2 + b*c*(b^2 + c^2)) - (b^2 + c^2)*
           (b^2 - c^2)^2))}, "X5888" -> 
      {b*c*(a^2*(a^4 + a^2*(b^2 + c^2) - 2*b^4 - 11*b^2*c^2 - 2*c^4))}, 
     "X5889" -> {b*c*(a^2*(a^6*(b^2 + c^2) - a^4*(3*b^4 + b^2*c^2 + 3*c^4) + 
          a^2*(3*b^6 - b^4*c^2 - b^2*c^4 + 3*c^6) - b^8 + b^6*c^2 + b^2*c^6 - 
          c^8))}, "X5890" -> 
      {a*(a^6*(b^2 + c^2) - a^4*(3*b^4 - b^2*c^2 + 3*c^4) + 
         3*a^2*(b^6 - b^4*c^2 - b^2*c^4 + c^6) - b^8 + b^6*c^2 + b^2*c^6 - 
         c^8)}, "X5891" -> {a*(a^2*(b^2 + c^2) - (b^2 - c^2)^2)*
        (a^4 + b^4 + c^4 - 2*a^2*(b^2 + c^2) + 4*b^2*c^2)}, 
     "X5892" -> {b*c*(a^2*(a^6*(b^2 + c^2) - a^4*(3*b^4 - 4*b^2*c^2 + 
            3*c^4) + 3*a^2*(b^2 + c^2)*(b^4 - 4*b^2*c^2 + c^4) - 
          (b^2 - c^2)^4))}, "X5893" -> 
      {b*c*(2*a^10 + a^8*b^2 - 12*a^6*b^4 + 10*a^4*b^6 + 2*a^2*b^8 - 3*b^10 + 
         a^8*c^2 + 16*a^6*b^2*c^2 - 10*a^4*b^4*c^2 - 16*a^2*b^6*c^2 + 
         9*b^8*c^2 - 12*a^6*c^4 - 10*a^4*b^2*c^4 + 28*a^2*b^4*c^4 - 
         6*b^6*c^4 + 10*a^4*c^6 - 16*a^2*b^2*c^6 - 6*b^4*c^6 + 2*a^2*c^8 + 
         9*b^2*c^8 - 3*c^10)}, "X5894" -> 
      {b*c*(4*a^10 - b^10 - c^10 - 5*a^8*(b^2 + c^2) - 
         8*a^6*(b^4 + c^4 - 3*b^2*c^2) + 14*a^4*(b^6 + c^6 - b^4*c^2 - 
           b^2*c^4) - 4*a^2*(b^8 + c^8 - 6*b^4*c^4 + 2*b^6*c^2 + 2*b^2*c^6) + 
         3*b^8*c^2 + 3*b^2*c^8 - 2*b^6*c^4 - 2*b^4*c^6)}, 
     "X5895" -> {b*c*((3*a^4 - b^4 - c^4 - 2*a^2*b^2 - 2*a^2*c^2 + 2*b^2*c^2)*
         (a^6 + 2*b^6 + 2*c^6 - 3*a^2*b^4 - 3*a^2*c^4 + 6*a^2*b^2*c^2 - 
          2*b^4*c^2 - 2*b^2*c^4))}, "X5897" -> 
      {a*(a^10 + (2*b^2 - 3*c^2)*a^8 - 2*(b^2 - c^2)*(5*b^2 + c^2)*a^6 + 
         2*(b^2 - c^2)*(4*b^4 + 9*b^2*c^2 - c^4)*a^4 + 
         (b^2 - c^2)*(b^6 + 3*c^6 - 5*(3*b^2 + c^2)*b^2*c^2)*a^2 - 
         (2*b^4 + 5*b^2*c^2 + c^4)*(b^2 - c^2)^3)*
        (a^10 - (3*b^2 - 2*c^2)*a^8 + 2*(b^2 - c^2)*(b^2 + 5*c^2)*a^6 + 
         2*(b^2 - c^2)*(b^4 - 9*b^2*c^2 - 4*c^4)*a^4 - 
         (b^2 - c^2)*(3*b^6 + c^6 - 5*(b^2 + 3*c^2)*b^2*c^2)*a^2 + 
         (b^4 + 5*b^2*c^2 + 2*c^4)*(b^2 - c^2)^3)}, 
     "X5898" -> {a*(a^2*(a^8*(a^4 + b^4 + c^4) - a^4*(5*b^8 + 20*b^6*c^2 + 
             17*b^4*c^4 + 20*b^2*c^6 + 5*c^8) + 3*(b^2 - c^2)^2*
            (b^8 - 2*b^6*c^2 - 2*b^4*c^4 - 2*b^2*c^6 + c^8)) - 
         (b^2 + c^2)*(3*a^12 - 5*a^8*(b^2 + c^2)^2 + 
           a^4*(b^8 - 16*b^6*c^2 + 15*b^4*c^4 - 16*b^2*c^6 + c^8) + 
           (b^2 - c^2)^6))}, "X5899" -> 
      {a*(a^8 - 2*a^6*b^2 + 2*a^2*b^6 - b^8 - 2*a^6*c^2 - 3*a^4*b^2*c^2 + 
         a^2*b^4*c^2 + 4*b^6*c^2 + a^2*b^2*c^4 - 6*b^4*c^4 + 2*a^2*c^6 + 
         4*b^2*c^6 - c^8)}, "X5900" -> 
      {1/(Sin[angleB]*Sin[2*angleC]*Sin[angleA - angleB]*
          (1 + 2*Sin[angleA]^2 + 2*Sin[angleC]^2) + Sin[angleC]*Sin[2*angleB]*
          Sin[angleA - angleC]*(1 + 2*Sin[angleA]^2 + 2*Sin[angleB]^2))}, 
     "X5901" -> {b*c*(2*a^4 - a^2*(3*b^2 - 4*b*c + 3*c^2) + (b^2 - c^2)^2 - 
         2*a*(b + c)*(a^2 - (b - c)^2))}, 
     "X5902" -> {a*b*c + (b + c)*(a - b + c)*(a + b - c)}, 
     "X5903" -> {(-a)*b*c + (b + c)*(a - b + c)*(a + b - c)}, 
     "X5904" -> {b*c*(a^2*b*c - a*(b + c)*(b^2 + c^2 - a^2))}, 
     "X5905" -> {b*c*(Cos[angleB] + Cos[angleC] - Cos[angleA])}, 
     "X5906" -> {b*c*(Sin[angleB]*Cos[angleB]^2 + Sin[angleC]*Cos[angleC]^2 - 
         Sin[angleA]*Cos[angleA]^2)}, "X5907" -> 
      {a*(b^2 - c^2)*(a^14*(b^2 + c^2) - 6*a^12*(b^4 + b^2*c^2 + c^4) - 
         b^2*c^2*(b^2 - c^2)^4*(b^4 + 4*b^2*c^2 + c^4) + 
         a^10*(15*b^6 + 16*b^4*c^2 + 16*b^2*c^4 + 15*c^6) - 
         5*a^8*(4*b^8 + 5*b^6*c^2 + 4*b^4*c^4 + 5*b^2*c^6 + 4*c^8) + 
         a^2*(b^2 - c^2)^2*(b^10 + 8*b^8*c^2 + 7*b^6*c^4 + 7*b^4*c^6 + 
           8*b^2*c^8 + c^10) + a^6*(15*b^10 + 25*b^8*c^2 + 8*b^6*c^4 + 
           8*b^4*c^6 + 25*b^2*c^8 + 15*c^10) - 2*a^4*(3*b^12 + 8*b^10*c^2 - 
           5*b^8*c^4 + 4*b^6*c^6 - 5*b^4*c^8 + 8*b^2*c^10 + 3*c^12))}, 
     "X5908" -> {a^12*b^2 + 3*a^11*b^3 - a^10*b^4 - 11*a^9*b^5 - 6*a^8*b^6 + 
        14*a^7*b^7 + 14*a^6*b^8 - 6*a^5*b^9 - 11*a^4*b^10 - a^3*b^11 + 
        3*a^2*b^12 + a*b^13 - 3*a^11*b^2*c - 3*a^10*b^3*c + 11*a^9*b^4*c + 
        11*a^8*b^5*c - 14*a^7*b^6*c - 14*a^6*b^7*c + 6*a^5*b^8*c + 
        6*a^4*b^9*c + a^3*b^10*c + a^2*b^11*c - a*b^12*c - b^13*c - 
        a^12*c^2 + 3*a^11*b*c^2 - 8*a^9*b^3*c^2 + 8*a^8*b^4*c^2 + 
        10*a^7*b^5*c^2 - 12*a^6*b^6*c^2 - 12*a^5*b^7*c^2 + 3*a^4*b^8*c^2 + 
        11*a^3*b^9*c^2 + 4*a^2*b^10*c^2 - 4*a*b^11*c^2 - 2*b^12*c^2 - 
        3*a^11*c^3 + 3*a^10*b*c^3 + 8*a^9*b^2*c^3 - 18*a^7*b^4*c^3 - 
        6*a^6*b^5*c^3 + 20*a^5*b^6*c^3 + 4*a^4*b^7*c^3 - 3*a^3*b^8*c^3 - 
        5*a^2*b^9*c^3 - 4*a*b^10*c^3 + 4*b^11*c^3 + a^10*c^4 - 11*a^9*b*c^4 - 
        8*a^8*b^2*c^4 + 18*a^7*b^3*c^4 + 12*a^5*b^5*c^4 + 14*a^4*b^6*c^4 - 
        18*a^3*b^7*c^4 - 17*a^2*b^8*c^4 - a*b^9*c^4 + 10*b^10*c^4 + 
        11*a^9*c^5 - 11*a^8*b*c^5 - 10*a^7*b^2*c^5 + 6*a^6*b^3*c^5 - 
        12*a^5*b^4*c^5 - 6*a^3*b^6*c^5 + 10*a^2*b^7*c^5 + 17*a*b^8*c^5 - 
        5*b^9*c^5 + 6*a^8*c^6 + 14*a^7*b*c^6 + 12*a^6*b^2*c^6 - 
        20*a^5*b^3*c^6 - 14*a^4*b^4*c^6 + 6*a^3*b^5*c^6 + 16*a*b^7*c^6 - 
        20*b^8*c^6 - 14*a^7*c^7 + 14*a^6*b*c^7 + 12*a^5*b^2*c^7 - 
        4*a^4*b^3*c^7 + 18*a^3*b^4*c^7 - 10*a^2*b^5*c^7 - 16*a*b^6*c^7 - 
        14*a^6*c^8 - 6*a^5*b*c^8 - 3*a^4*b^2*c^8 + 3*a^3*b^3*c^8 + 
        17*a^2*b^4*c^8 - 17*a*b^5*c^8 + 20*b^6*c^8 + 6*a^5*c^9 - 
        6*a^4*b*c^9 - 11*a^3*b^2*c^9 + 5*a^2*b^3*c^9 + a*b^4*c^9 + 
        5*b^5*c^9 + 11*a^4*c^10 - a^3*b*c^10 - 4*a^2*b^2*c^10 + 
        4*a*b^3*c^10 - 10*b^4*c^10 + a^3*c^11 - a^2*b*c^11 + 4*a*b^2*c^11 - 
        4*b^3*c^11 - 3*a^2*c^12 + a*b*c^12 + 2*b^2*c^12 - a*c^13 + b*c^13}, 
     "X5909" -> {a^8*(b + c) - (b - c)^6*(b + c)^3 + 
        2*a^7*(b^2 - b*c + c^2) - 2*a*(b - c)^2*(b + c)^4*(b^2 - b*c + c^2) + 
        2*a^3*(b^2 - c^2)^2*(3*b^2 + b*c + 3*c^2) - 
        2*a^6*(b^3 + b^2*c + b*c^2 + c^3) + 4*a^4*b*c*(b^3 + b^2*c + b*c^2 + 
          c^3) + a^5*(-6*b^4 + 2*b^3*c + 2*b*c^3 - 6*c^4) + 
        2*a^2*(b - c)^2*(b^5 - b^4*c - 4*b^3*c^2 - 4*b^2*c^3 - b*c^4 + c^5)}, 
     "X5910" -> {b*c*(((b^2 + c^2)*a^18 - (9*b^4 - 4*b^2*c^2 + 9*c^4)*a^16 + 
          4*(b^2 + c^2)*(9*b^4 - 16*b^2*c^2 + 9*c^4)*a^14 - 
          4*(b^2 - c^2)^2*(21*b^4 + 34*b^2*c^2 + 21*c^4)*a^12 + 
          2*(b^4 - c^4)*(b^2 - c^2)*(63*b^4 + 86*b^2*c^2 + 63*c^4)*a^10 - 
          2*(b^2 - c^2)^2*(63*b^8 + 63*c^8 + 2*(97*b^4 + 95*b^2*c^2 + 97*c^4)*
             b^2*c^2)*a^8 + 4*(b^4 - c^4)*(b^2 - c^2)*(21*b^8 + 21*c^8 + 
            2*(25*b^4 + 9*b^2*c^2 + 25*c^4)*b^2*c^2)*a^6 - 
          4*(b^2 - c^2)^2*(9*b^12 + 9*c^12 + (26*b^8 + 26*c^8 + 
              (39*b^4 - 20*b^2*c^2 + 39*c^4)*b^2*c^2)*b^2*c^2)*a^4 + 
          (b^4 - c^4)*(b^2 - c^2)^3*(9*b^8 + 9*c^8 + 
            10*(2*b^4 + 7*b^2*c^2 + 2*c^4)*b^2*c^2)*a^2 - 
          (b^4 + 4*b^2*c^2 + c^4)*(b^2 - c^2)^8)*a^2)}, 
     "X5911" -> {b*c*(a*((b + c)*a^14 - 2*(2*b^2 - b*c + 2*c^2)*a^13 + 
          (b + c)*(b^2 - 6*b*c + c^2)*a^12 + 4*(4*b^4 + 4*c^4 - 
            b*c*(3*b^2 - 2*b*c + 3*c^2))*a^11 - (b^2 - c^2)*(b - c)*
           (19*b^2 + 10*b*c + 19*c^2)*a^10 - 10*(2*b^4 + 2*c^4 + 
            b*c*(b + c)^2)*(b - c)^2*a^9 + 5*(b^2 - c^2)*(b - c)*
           (9*b^4 + 9*c^4 + 2*b*c*(4*b^2 + 7*b*c + 4*c^2))*a^8 - 
          8*(5*b^4 + 5*c^4 + 2*b*c*(2*b^2 + b*c + 2*c^2))*(b - c)^2*b*c*a^7 - 
          (b^2 - c^2)*(b - c)*(45*b^6 + 45*c^6 + (50*b^4 + 50*c^4 + 
              b*c*(67*b^2 + 60*b*c + 67*c^2))*b*c)*a^6 + 
          2*(b^2 - c^2)^2*(10*b^6 + 10*c^6 + (15*b^4 + 15*c^4 - 
              2*b*c*(b^2 - 9*b*c + c^2))*b*c)*a^5 + (b^2 - c^2)^2*(b + c)*
           (19*b^6 + 19*c^6 - (10*b^4 + 10*c^4 - b*c*(29*b^2 - 12*b*c + 
                29*c^2))*b*c)*a^4 - 4*(b^2 - c^2)^2*(b + c)^2*
           (4*b^6 + 4*c^6 - b*c*(5*b^2 - 2*b*c + 5*c^2)*(b - c)^2)*a^3 - 
          (b^2 - c^2)^4*(b + c)^5*a^2 + 2*(b^2 - c^2)^4*(2*b^6 + 2*c^6 + 
            (b^4 + c^4 + 2*b*c*(5*b^2 + 3*b*c + 5*c^2))*b*c)*a - 
          (b^2 - c^2)^7*(b - c)))}, "X5912" -> 
      {b*c*(2*a^10 - 4*a^8*(b^2 + c^2) - 3*a^6*(b^4 - 6*b^2*c^2 + c^4) + 
         2*a^4*(b^2 + c^2)*(b^4 - 4*b^2*c^2 + c^4) - 
         a^2*(b^8 + c^8 - 11*b^6*c^2 - 11*b^2*c^6 + 18*b^4*c^4) - 
         3*b^2*c^2*(b^2 - c^2)^2*(b^2 + c^2))}, 
     "X5913" -> {b*c*(3*a^4*b^2 + 2*a^2*b^4 - b^6 + 3*a^4*c^2 - 
         10*a^2*b^2*c^2 + b^4*c^2 + 2*a^2*c^4 + b^2*c^4 - c^6)}, 
     "X5914" -> {b*c*(4*a^10 - 8*a^8*b^2 - 3*a^6*b^4 + 4*a^4*b^6 - 
         5*a^2*b^8 - 8*a^8*c^2 + 30*a^6*b^2*c^2 - 12*a^4*b^4*c^2 + 
         25*a^2*b^6*c^2 - 3*b^8*c^2 - 3*a^6*c^4 - 12*a^4*b^2*c^4 - 
         36*a^2*b^4*c^4 + 3*b^6*c^4 + 4*a^4*c^6 + 25*a^2*b^2*c^6 + 
         3*b^4*c^6 - 5*a^2*c^8 - 3*b^2*c^8)}, 
     "X5915" -> {b*c*(-4*a^12 + 8*a^10*b^2 - 7*a^8*b^4 + 11*a^6*b^6 - 
         13*a^4*b^8 + 5*a^2*b^10 + 8*a^10*c^2 - 10*a^8*b^2*c^2 - 
         3*a^6*b^4*c^2 + 17*a^4*b^6*c^2 - 7*a^2*b^8*c^2 + 3*b^10*c^2 - 
         7*a^8*c^4 - 3*a^6*b^2*c^4 - 12*a^4*b^4*c^4 + 2*a^2*b^6*c^4 - 
         12*b^8*c^4 + 11*a^6*c^6 + 17*a^4*b^2*c^6 + 2*a^2*b^4*c^6 + 
         18*b^6*c^6 - 13*a^4*c^8 - 7*a^2*b^2*c^8 - 12*b^4*c^8 + 5*a^2*c^10 + 
         3*b^2*c^10)}, "X5916" -> {b*c*(2*a^12 - 4*a^10*b^2 + 2*a^8*b^4 - 
         a^6*b^6 + 2*a^4*b^8 - a^2*b^10 - 4*a^10*c^2 + 8*a^8*b^2*c^2 - 
         3*a^6*b^4*c^2 - 4*a^4*b^6*c^2 + 2*a^2*b^8*c^2 - 3*b^10*c^2 + 
         2*a^8*c^4 - 3*a^6*b^2*c^4 + 6*a^4*b^4*c^4 - a^2*b^6*c^4 + 
         12*b^8*c^4 - a^6*c^6 - 4*a^4*b^2*c^6 - a^2*b^4*c^6 - 18*b^6*c^6 + 
         2*a^4*c^8 + 2*a^2*b^2*c^8 + 12*b^4*c^8 - a^2*c^10 - 3*b^2*c^10 + 
         2*Sqrt[3]*(a^2 - b^2)*(a^2 - c^2)*(2*a^2 - b^2 - c^2)*(b^2 - c^2)^2*
          S)}, "X5917" -> {b*c*(2*a^12 - 4*a^10*b^2 + 2*a^8*b^4 - a^6*b^6 + 
         2*a^4*b^8 - a^2*b^10 - 4*a^10*c^2 + 8*a^8*b^2*c^2 - 3*a^6*b^4*c^2 - 
         4*a^4*b^6*c^2 + 2*a^2*b^8*c^2 - 3*b^10*c^2 + 2*a^8*c^4 - 
         3*a^6*b^2*c^4 + 6*a^4*b^4*c^4 - a^2*b^6*c^4 + 12*b^8*c^4 - a^6*c^6 - 
         4*a^4*b^2*c^6 - a^2*b^4*c^6 - 18*b^6*c^6 + 2*a^4*c^8 + 
         2*a^2*b^2*c^8 + 12*b^4*c^8 - a^2*c^10 - 3*b^2*c^10 - 
         2*Sqrt[3]*(a^2 - b^2)*(a^2 - c^2)*(2*a^2 - b^2 - c^2)*(b^2 - c^2)^2*
          S)}, "X5918" -> {(b - c)*((-a^9)*(b + c) + b*c*(b^2 - c^2)^4 + 
         4*a^8*(b^2 - b*c + c^2) + a^7*(-4*b^3 + 13*b^2*c + 13*b*c^2 - 
           4*c^3) + a^6*(-4*b^4 + b^3*c - 42*b^2*c^2 + b*c^3 - 4*c^4) + 
         a^5*(10*b^5 - 19*b^4*c + 19*b^3*c^2 + 19*b^2*c^3 - 19*b*c^4 + 
           10*c^5) + a^4*(-4*b^6 + 3*b^5*c + 28*b^4*c^2 - 30*b^3*c^3 + 
           28*b^2*c^4 + 3*b*c^5 - 4*c^6) + a^2*(b - c)^2*(4*b^6 + 7*b^5*c + 
           4*b^4*c^2 + 10*b^3*c^3 + 4*b^2*c^4 + 7*b*c^5 + 4*c^6) + 
         a^3*(-4*b^7 + 11*b^6*c - 25*b^5*c^2 + 10*b^4*c^3 + 10*b^3*c^4 - 
           25*b^2*c^5 + 11*b*c^6 - 4*c^7) - a*(b - c)^2*(b^7 + 6*b^6*c + 
           2*b^5*c^2 - b^4*c^3 - b^3*c^4 + 2*b^2*c^5 + 6*b*c^6 + c^7))}, 
     "X5919" -> {(b + c)*(a^2 - (b - c)^2) - 8*a*b*c}, 
     "X5920" -> {b*c*(a*(-a + b + c)*((b + c)*a^7 - (b + c)^2*a^6 - 
          (b + c)*(3*b^2 + 8*b*c + 3*c^2)*a^5 + 
          (3*b^4 + 3*c^4 + 2*b*c*(b^2 + 11*b*c + c^2))*a^4 + 
          (b + c)*(3*b^4 + 3*c^4 + 2*b*c*(8*b^2 + 5*b*c + 8*c^2))*a^3 - 
          (3*b^4 + 3*c^4 + 2*b*c*(2*b^2 - 3*b*c + 2*c^2))*(b - c)^2*a^2 - 
          (b^2 - c^2)*(b - c)*(b^4 + c^4 + 2*b*c*(5*b^2 - 3*b*c + 5*c^2))*a + 
          (b^4 - c^4)*(b^2 - c^2)*(b - c)^2))}, 
     "X5921" -> {b*c*(5*a^6 - 5*(b^2 + c^2)*a^4 + (3*b^4 + 2*b^2*c^2 + 3*c^4)*
          a^2 - 3*(b^4 - c^4)*(b^2 - c^2))}, 
     "X5922" -> {b*c*((7*a^10 - 10*(b^2 + c^2)*a^8 + 
          2*(b^4 + 6*b^2*c^2 + c^4)*a^6 - (b^2 - c^2)^4*a^2 + 
          2*(b^4 - c^4)*(b^2 - c^2)^3)*(a^4 + 2*(b^2 - c^2)*a^2 - 
          (3*b^2 + c^2)*(b^2 - c^2))*(a^4 - 2*(b^2 - c^2)*a^2 + 
          (b^2 - c^2)*(b^2 + 3*c^2)))}, "X5923" -> 
      {b*c*(a^3 - a^2*b - a*b^2 + b^3 + a^2*c + 2*a*b*c + b^2*c - a*c^2 - 
         b*c^2 - c^3)*(a^3 + a^2*b - a*b^2 - b^3 - a^2*c + 2*a*b*c - b^2*c - 
         a*c^2 + b*c^2 + c^3)*(3*a^7 - 7*a^5*b^2 + 2*a^4*b^3 + 5*a^3*b^4 - 
         4*a^2*b^5 - a*b^6 + 2*b^7 - 2*a^5*b*c + 6*a^4*b^2*c - 4*a^3*b^3*c - 
         4*a^2*b^4*c + 6*a*b^5*c - 2*b^6*c - 7*a^5*c^2 + 6*a^4*b*c^2 - 
         2*a^3*b^2*c^2 + 8*a^2*b^3*c^2 + a*b^4*c^2 - 6*b^5*c^2 + 2*a^4*c^3 - 
         4*a^3*b*c^3 + 8*a^2*b^2*c^3 - 12*a*b^3*c^3 + 6*b^4*c^3 + 5*a^3*c^4 - 
         4*a^2*b*c^4 + a*b^2*c^4 + 6*b^3*c^4 - 4*a^2*c^5 + 6*a*b*c^5 - 
         6*b^2*c^5 - a*c^6 - 2*b*c^6 + 2*c^7)}, 
     "X5924" -> {b*c*(3*a^10 - 3*(b + c)*a^9 - 2*(5*b^2 - 2*b*c + 5*c^2)*
          a^8 + 8*(b^3 + c^3)*a^7 + 2*(7*b^4 + 2*b^2*c^2 + 7*c^4)*a^6 - 
         2*(b + c)*(3*b^4 + 3*c^4 - 2*b*c*(2*b - c)*(b - 2*c))*a^5 - 
         4*(b^2 - c^2)^2*(3*b^2 + 2*b*c + 3*c^2)*a^4 + 8*(b^2 - c^2)^2*
          (b + c)*b*c*a^3 + (b^2 - c^2)^2*(7*b^4 + 2*b^2*c^2 + 7*c^4)*a^2 + 
         (b^2 - c^2)^3*(b - c)*(b^2 - 6*b*c + c^2)*a - 2*(b^2 - c^2)^4*
          (b - c)^2)}, "X5925" -> {b*c*(5*a^10 - 6*(b^2 + c^2)*a^8 - 
         2*(5*b^4 - 14*b^2*c^2 + 5*c^4)*a^6 + 16*(b^4 - c^4)*(b^2 - c^2)*
          a^4 - 3*(b^2 - c^2)^2*(b^4 + 6*b^2*c^2 + c^4)*a^2 - 
         2*(b^4 - c^4)*(b^2 - c^2)^3)}, "X5926" -> 
      {b*c*(a^2*(b^2 - c^2)*(2*a^6 - 4*a^4*b^2 + 2*a^2*b^4 - 4*a^4*c^2 + 
          a^2*b^2*c^2 - b^4*c^2 + 2*a^2*c^4 - b^2*c^4))}, 
     "X5927" -> {(b + c)*(a^4 + 2*a^2*b*c - (b - c)^2*(b^2 + 4*b*c + c^2)) - 
        2*a*(a^2*(b^2 + c^2) - (b^2 - c^2)^2)}, 
     "X5928" -> {b*c*(a^6 + (b + c)*a^5 - (b^2 + c^2)*a^4 + 
         (b^2 - c^2)^2*a^2 - (b^2 - c^2)^2*(b + c)*a - 
         (b^4 - c^4)*(b^2 - c^2))}, "X5929" -> 
      {(b + c)*(a^5*(b + c) + 2*a^4*(b^2 + c^2) - 
         2*a^2*(b^4 - b^3*c + b^2*c^2 - b*c^3 + c^4) - 
         a*(b - c)^2*(b + c)^3 - 2*b*c*(b - c)^2*(b^2 + b*c + c^2))}, 
     "X5930" -> {b*c*((3*a^4 - b^4 - c^4 - 2*a^2*b^2 - 2*a^2*c^2 + 2*b^2*c^2)*
         ((b + c)/(b + c - a)))}, "X5931" -> 
      {b*c*((b + c - a)*(c + a)*((a + b)/(3*a^4 - b^4 - c^4 - 2*a^2*b^2 - 
           2*a^2*c^2 + 2*b^2*c^2)))}, "X5932" -> 
      {b*c*((a^6 - 2*a^5*(b + c) - a^4*(b + c)^2 + 4*a^3*(b^3 + c^3) - 
          a^2*(b^2 - c^2)^2 - 2*a*(b - c)^2*(b + c)*(b^2 + c^2) + 
          (b - c)^2*(b + c)^4)/(b + c - a))}, 
     "X5933" -> {b*c*((a^3 - a*(3*b^2 + 4*b*c + 3*c^2) - 
          (b + c)*(3*a^2 - b^2 - c^2))/(b + c - a))}, 
     "X5934" -> {(-S)*((2*R + r)*(4*r*R + r^2 - 2*b*c) + 4*sp*R*(sp - a)) + 
        b*c*a^2*(b*Cos[angleB]*Sin[angleC/2]^3 + c*Cos[angleC]*
           Sin[angleB/2]^3) - b*c*(2*sp - a)*(sp - b)*(sp - c)*
         Sin[angleA/2]}, "X5935" -> 
      {S*((2*R + r)*(4*r*R + r^2 - 2*b*c) + 4*sp*R*(sp - a)) + 
        b*c*a^2*(b*Cos[angleB]*Sin[angleC/2]^3 + c*Cos[angleC]*
           Sin[angleB/2]^3) - b*c*(2*sp - a)*(sp - b)*(sp - c)*
         Sin[angleA/2]}, "X5936" -> {b*c*(1/(3*a + b + c))}, 
     "X5937" -> {a*(a^4*(b + c) - (a^2 + b*c)*((b^3 + c^3) - 
           b^2*(c^2/(b + c))) + a*(a^2*(b^2 + c^2) - b^4 + b^2*c^2 - c^4))}, 
     "X5938" -> {b*c*(a^2*(a^8 - a^2*b^2*c^2*(b^2 + c^2 - a^2) - 
          (b^4 - c^4)^2))}, "X5939" -> 
      {b*c*(2*a^8 + a^4*(b^2 - c^2)^2 - b^2*c^2*(b^4 - 4*b^2*c^2 + c^4) - 
         a^2*(b^2 + c^2)*(a^4 + 2*b^4 - 3*b^2*c^2 + 2*c^4))}, 
     "X5940" -> {b*c*(a^2*(a^8 - 6*(b^2 + c^2)*a^6 + 43*b^2*c^2*a^4 + 
          2*(b^2 + c^2)*(3*b^4 - 17*b^2*c^2 + 3*c^4)*a^2 - 
          (b^4 - 5*b^2*c^2 + c^4)*(b^2 + c^2)^2))}, 
     "X5941" -> {b*c*(a^2*(a^12 - 2*(b^2 + c^2)*a^10 + 
          (b^4 + 7*b^2*c^2 + c^4)*a^8 - 5*(b^2 + c^2)*b^2*c^2*a^6 - 
          (b^8 + c^8 - 3*b^2*c^2*(3*b^4 - 4*b^2*c^2 + 3*c^4))*a^4 + 
          (b^4 - c^4)*(b^2 - c^2)*(2*b^4 - 3*b^2*c^2 + 2*c^4)*a^2 - 
          (b^2 - c^2)^2*(b^8 + c^8 - 2*(b^4 - 3*b^2*c^2 + c^4)*b^2*c^2)))}, 
     "X5942" -> {b*c*(b/(1 + Sec[angleB]) + c/(1 + Sec[angleC]) - 
         a/(1 + Sec[angleA]))}, "X5943" -> 
      {b*c*(a^2*(b^4 + c^4 - a^2*b^2 - a^2*c^2 - 4*b^2*c^2))}, 
     "X5944" -> {a*(S^2 + 3*SA^2 - 2*SA*(3*SW - 5*R^2))}, 
     "X5945" -> {b*c*((Sin[angleA]^2/angleA)*(Sin[angleB]^2/angleB + 
          Sin[angleC]^2/angleC - Sin[angleA]^2/angleA))}, 
     "X5946" -> {a*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 + a^6*c^2 - 
         4*a^2*b^4*c^2 + 3*b^6*c^2 - 3*a^4*c^4 - 4*a^2*b^2*c^4 - 4*b^4*c^4 + 
         3*a^2*c^6 + 3*b^2*c^6 - c^8)}, "X5947" -> 
      {b*c*((3*b^2 + 2*b*c + 3*c^2)*a^7 + (b + c)*(3*b^2 + 2*b*c + 3*c^2)*
          a^6 - (9*b^4 + 9*c^4 + 2*b*c*(3*b^2 + b*c + 3*c^2))*a^5 - 
         (b + c)*(9*b^4 + 9*c^4 + 2*b*c*(4*b^2 + 3*b*c + 4*c^2))*a^4 + 
         (9*b^6 + 9*c^6 + 2*(b^4 + c^4 - b*c*(9*b^2 + 13*b*c + 9*c^2))*b*c)*
          a^3 + (b^2 - c^2)*(b - c)*(9*b^4 + 9*c^4 + 
           b*c*(24*b^2 + 31*b*c + 24*c^2))*a^2 - (b^2 - c^2)^2*(b + c)^2*
          (3*b^2 - 8*b*c + 3*c^2)*a - 3*(b^2 - c^2)^4*(b + c))}, 
     "X5948" -> {b*c*(a^11*b^2 + a^10*b^3 - 5*a^9*b^4 - 5*a^8*b^5 + 
         10*a^7*b^6 + 10*a^6*b^7 - 10*a^5*b^8 - 10*a^4*b^9 + 5*a^3*b^10 + 
         5*a^2*b^11 - a*b^12 - b^13 + 2*a^11*b*c + 3*a^10*b^2*c - 
         8*a^9*b^3*c - 13*a^8*b^4*c + 12*a^7*b^5*c + 22*a^6*b^6*c - 
         8*a^5*b^7*c - 18*a^4*b^8*c + 2*a^3*b^9*c + 7*a^2*b^10*c - b^12*c + 
         a^11*c^2 + 3*a^10*b*c^2 - 2*a^9*b^2*c^2 - 14*a^8*b^3*c^2 - 
         5*a^7*b^4*c^2 + 17*a^6*b^5*c^2 + 18*a^5*b^6*c^2 + 2*a^4*b^7*c^2 - 
         18*a^3*b^8*c^2 - 14*a^2*b^9*c^2 + 6*a*b^10*c^2 + 6*b^11*c^2 + 
         a^10*c^3 - 8*a^9*b*c^3 - 14*a^8*b^2*c^3 - 6*a^7*b^3*c^3 + 
         11*a^6*b^4*c^3 + 22*a^5*b^5*c^3 + 18*a^4*b^6*c^3 - 8*a^3*b^7*c^3 - 
         22*a^2*b^8*c^3 + 6*b^10*c^3 - 5*a^9*c^4 - 13*a^8*b*c^4 - 
         5*a^7*b^2*c^4 + 11*a^6*b^3*c^4 + 16*a^5*b^4*c^4 + 8*a^4*b^5*c^4 + 
         13*a^3*b^6*c^4 + 5*a^2*b^7*c^4 - 15*a*b^8*c^4 - 15*b^9*c^4 - 
         5*a^8*c^5 + 12*a^7*b*c^5 + 17*a^6*b^2*c^5 + 22*a^5*b^3*c^5 + 
         8*a^4*b^4*c^5 + 12*a^3*b^5*c^5 + 19*a^2*b^6*c^5 - 15*b^8*c^5 + 
         10*a^7*c^6 + 22*a^6*b*c^6 + 18*a^5*b^2*c^6 + 18*a^4*b^3*c^6 + 
         13*a^3*b^4*c^6 + 19*a^2*b^5*c^6 + 20*a*b^6*c^6 + 20*b^7*c^6 + 
         10*a^6*c^7 - 8*a^5*b*c^7 + 2*a^4*b^2*c^7 - 8*a^3*b^3*c^7 + 
         5*a^2*b^4*c^7 + 20*b^6*c^7 - 10*a^5*c^8 - 18*a^4*b*c^8 - 
         18*a^3*b^2*c^8 - 22*a^2*b^3*c^8 - 15*a*b^4*c^8 - 15*b^5*c^8 - 
         10*a^4*c^9 + 2*a^3*b*c^9 - 14*a^2*b^2*c^9 - 15*b^4*c^9 + 
         5*a^3*c^10 + 7*a^2*b*c^10 + 6*a*b^2*c^10 + 6*b^3*c^10 + 5*a^2*c^11 + 
         6*b^2*c^11 - a*c^12 - b*c^12 - c^13)}, 
     "X5950" -> {b*c*(a^5*b - a^4*b^2 - 2*a^3*b^3 + 2*a^2*b^4 + a*b^5 - b^6 + 
         a^5*c + 4*a^4*b*c + a^3*b^2*c - 2*a^2*b^3*c - 2*a*b^4*c - 2*b^5*c - 
         a^4*c^2 + a^3*b*c^2 - 2*a^2*b^2*c^2 + a*b^3*c^2 + b^4*c^2 - 
         2*a^3*c^3 - 2*a^2*b*c^3 + a*b^2*c^3 + 4*b^3*c^3 + 2*a^2*c^4 - 
         2*a*b*c^4 + b^2*c^4 + a*c^5 - 2*b*c^5 - c^6)*(a^6*b + 2*a^5*b^2 - 
         a^4*b^3 - 4*a^3*b^4 - a^2*b^5 + 2*a*b^6 + b^7 + a^6*c - 2*a^5*b*c + 
         a^3*b^3*c + a*b^5*c - b^6*c + 2*a^5*c^2 + 4*a^3*b^2*c^2 + 
         a^2*b^3*c^2 - 2*a*b^4*c^2 - 3*b^5*c^2 - a^4*c^3 + a^3*b*c^3 + 
         a^2*b^2*c^3 - 2*a*b^3*c^3 + 3*b^4*c^3 - 4*a^3*c^4 - 2*a*b^2*c^4 + 
         3*b^3*c^4 - a^2*c^5 + a*b*c^5 - 3*b^2*c^5 + 2*a*c^6 - b*c^6 + c^7)}, 
     "X5951" -> {(a^6 + 2*a^5*b - a^4*b^2 - 4*a^3*b^3 - a^2*b^4 + 2*a*b^5 + 
         b^6 - a^5*c + 2*a^4*b*c - a^3*b^2*c - a^2*b^3*c + 2*a*b^4*c - 
         b^5*c - 2*a^4*c^2 + 2*a^3*b*c^2 + 2*a^2*b^2*c^2 + 2*a*b^3*c^2 - 
         2*b^4*c^2 + 2*a^3*c^3 - a^2*b*c^3 - a*b^2*c^3 + 2*b^3*c^3 + 
         a^2*c^4 - 4*a*b*c^4 + b^2*c^4 - a*c^5 - b*c^5)*
        (a^6 - a^5*b - 2*a^4*b^2 + 2*a^3*b^3 + a^2*b^4 - a*b^5 + 2*a^5*c + 
         2*a^4*b*c + 2*a^3*b^2*c - a^2*b^3*c - 4*a*b^4*c - b^5*c - a^4*c^2 - 
         a^3*b*c^2 + 2*a^2*b^2*c^2 - a*b^3*c^2 + b^4*c^2 - 4*a^3*c^3 - 
         a^2*b*c^3 + 2*a*b^2*c^3 + 2*b^3*c^3 - a^2*c^4 + 2*a*b*c^4 - 
         2*b^2*c^4 + 2*a*c^5 - b*c^5 + c^6)}, 
     "X5952" -> {b*c*((b - c)^2*(a^4 + 2*(b + c)*a^3 + b*c*a^2 - 
          (b + c)*(2*b^2 + b*c + 2*c^2)*a - (b^2 - c^2)^2)*
         (a^3 - (b + c)*a^2 - (b^2 + b*c + c^2)*a + (b + c)^3))}, 
     "X5953" -> {b*c*(a^8*b^2 + 2*a^7*b^3 - 2*a^6*b^4 - 6*a^5*b^5 + 
         6*a^3*b^7 + 2*a^2*b^8 - 2*a*b^9 - b^10 - 2*a^8*b*c + 2*a^7*b^2*c + 
         6*a^6*b^3*c - 8*a^5*b^4*c - 12*a^4*b^5*c + 6*a^3*b^6*c + 
         10*a^2*b^7*c - 2*b^9*c + a^8*c^2 + 2*a^7*b*c^2 + 8*a^6*b^2*c^2 - 
         2*a^5*b^3*c^2 - 19*a^4*b^4*c^2 - 10*a^3*b^5*c^2 + 7*a^2*b^6*c^2 + 
         10*a*b^7*c^2 + 3*b^8*c^2 + 2*a^7*c^3 + 6*a^6*b*c^3 - 2*a^5*b^2*c^3 - 
         18*a^4*b^3*c^3 - 22*a^3*b^4*c^3 - 10*a^2*b^5*c^3 + 6*a*b^6*c^3 + 
         8*b^7*c^3 - 2*a^6*c^4 - 8*a^5*b*c^4 - 19*a^4*b^2*c^4 - 
         22*a^3*b^3*c^4 - 18*a^2*b^4*c^4 - 14*a*b^5*c^4 - 2*b^6*c^4 - 
         6*a^5*c^5 - 12*a^4*b*c^5 - 10*a^3*b^2*c^5 - 10*a^2*b^3*c^5 - 
         14*a*b^4*c^5 - 12*b^5*c^5 + 6*a^3*b*c^6 + 7*a^2*b^2*c^6 + 
         6*a*b^3*c^6 - 2*b^4*c^6 + 6*a^3*c^7 + 10*a^2*b*c^7 + 10*a*b^2*c^7 + 
         8*b^3*c^7 + 2*a^2*c^8 + 3*b^2*c^8 - 2*a*c^9 - 2*b*c^9 - c^10)}, 
     "X5954" -> {b*c*(b - c)^2*(-a^6 + a^5*b + a^4*b^2 - a^2*b^4 - a*b^5 + 
         b^6 + a^5*c - 2*a^2*b^3*c + b^5*c + a^4*c^2 - 3*a^2*b^2*c^2 + 
         4*a*b^3*c^2 - b^4*c^2 - 2*a^2*b*c^3 + 4*a*b^2*c^3 - 2*b^3*c^3 - 
         a^2*c^4 - b^2*c^4 - a*c^5 + b*c^5 + c^6)}, 
     "X5955" -> {b*c*(a^4 + a^3*b + a*b^3 + b^4 + a^3*c + 2*a^2*b*c + 
         5*a*b^2*c + 2*b^3*c + 5*a*b*c^2 + 2*b^2*c^2 + a*c^3 + 2*b*c^3 + 
         c^4)}, "X5956" -> {a^4*b^2 + 3*a^3*b^3 + 3*a^2*b^4 + a*b^5 + 
        3*a^3*b^2*c + 3*a^2*b^3*c - a*b^4*c - b^5*c + a^4*c^2 + 3*a^3*b*c^2 - 
        2*a^2*b^2*c^2 - 8*a*b^3*c^2 - 4*b^4*c^2 + 3*a^3*c^3 + 3*a^2*b*c^3 - 
        8*a*b^2*c^3 - 6*b^3*c^3 + 3*a^2*c^4 - a*b*c^4 - 4*b^2*c^4 + a*c^5 - 
        b*c^5}, "X5960" -> {b*c*(b + c)*((-(b - c)^2)*(a + b + c)*
          Sqrt[(a^3 - a^2*b - a*b^2 + b^3 + a^2*c - 3*a*b*c + b^2*c - a*c^2 - 
             b*c^2 - c^3)*(a^3 + a^2*b - a*b^2 - b^3 - a^2*c - 3*a*b*c - 
             b^2*c - a*c^2 + b*c^2 + c^3)] + (a + b)*(a - b + c)*(b + c)*
          Sqrt[(-a^3 - a^2*b + a*b^2 + b^3 - a^2*c - 3*a*b*c - b^2*c + 
             a*c^2 - b*c^2 + c^3)*(a^3 + a^2*b - a*b^2 - b^3 - a^2*c - 
             3*a*b*c - b^2*c - a*c^2 + b*c^2 + c^3)] + (a + b - c)*(a + c)*
          (b + c)*Sqrt[(a^3 + a^2*b - a*b^2 - b^3 + a^2*c + 3*a*b*c + b^2*c - 
             a*c^2 + b*c^2 - c^3)*(-a^3 + a^2*b + a*b^2 - b^3 - a^2*c + 
             3*a*b*c - b^2*c + a*c^2 + b*c^2 + c^3)])}, 
     "X5961" -> {Sin[4*angleA]/Sin[3*angleA]}, 
     "X5962" -> {Sin[3*angleA]/Sin[4*angleA]}, 
     "X5963" -> {Sin[5*angleA]/Sin[4*angleA]}, 
     "X5964" -> {Sin[4*angleA]/Sin[5*angleA]}, 
     "X5966" -> {b*c*(a^2/(2*a^6 - b^6 - c^6 - 4*a^4*b^2 - 4*a^4*c^2 + 
          3*a^2*b^4 + 3*a^2*c^4 + b^4*c^2 + b^2*c^4))}, 
     "X5967" -> {b*c*(((2*a^2 - b^2 - c^2)*(a^2 + b^2 + c^2))/
         (b^4 + c^4 - a^2*(b^2 + c^2)))}, 
     "X5968" -> {a*(-a^2 + 2*b^2 - c^2)*(-a^2 - b^2 + 2*c^2)*
        (b^4 + c^4 - a^2*(b^2 + c^2))}, "X5970" -> 
      {a/(a^4*b^2 + a^4*c^2 - 2*a^2*b^4 - 2*a^2*c^4 + b^4*c^2 + b^2*c^4)}, 
     "X5971" -> {b*c*(a^6 - a^2*b^4 - a^2*c^4 + 5*a^2*b^2*c^2 - 2*b^4*c^2 - 
         2*b^2*c^4)}, "X5972" -> {b*c*(2*a^6 + b^6 + c^6 - 2*a^4*b^2 - 
         2*a^4*c^2 - a^2*b^4 - a^2*c^4 + 4*a^2*b^2*c^2 - b^4*c^2 - b^2*c^4)}, 
     "X5973" -> {b*c*((b + c)^2*((-a^14)*b - 3*a^13*b^2 - 2*a^12*b^3 + 
          2*a^11*b^4 + 5*a^10*b^5 + 7*a^9*b^6 + 4*a^8*b^7 - 4*a^7*b^8 - 
          7*a^6*b^9 - 5*a^5*b^10 - 2*a^4*b^11 + 2*a^3*b^12 + 3*a^2*b^13 + 
          a*b^14 - a^14*c - 2*a^13*b*c - 8*a^12*b^2*c - 16*a^11*b^3*c - 
          8*a^10*b^4*c + 4*a^9*b^5*c + 9*a^8*b^6*c + 16*a^7*b^7*c + 
          11*a^6*b^8*c - 2*a^5*b^9*c - 2*a^4*b^10*c - 2*a^2*b^12*c + b^14*c - 
          3*a^13*c^2 - 8*a^12*b*c^2 - 8*a^11*b^2*c^2 - 14*a^10*b^3*c^2 - 
          8*a^9*b^4*c^2 + 25*a^8*b^5*c^2 + 20*a^7*b^6*c^2 - 8*a^6*b^7*c^2 + 
          a^5*b^8*c^2 + 6*a^4*b^9*c^2 - 4*a^3*b^10*c^2 - 2*a^2*b^11*c^2 + 
          2*a*b^12*c^2 + b^13*c^2 - 2*a^12*c^3 - 16*a^11*b*c^3 - 
          14*a^10*b^2*c^3 + 2*a^9*b^3*c^3 - 2*a^8*b^4*c^3 + 4*a^7*b^5*c^3 + 
          36*a^6*b^6*c^3 + 16*a^5*b^7*c^3 - 18*a^4*b^8*c^3 - 4*a^3*b^9*c^3 + 
          2*a^2*b^10*c^3 - 2*a*b^11*c^3 - 2*b^12*c^3 + 2*a^11*c^4 - 
          8*a^10*b*c^4 - 8*a^9*b^2*c^4 - 2*a^8*b^3*c^4 + 28*a^7*b^4*c^4 - 
          16*a^5*b^6*c^4 + 20*a^4*b^7*c^4 + 2*a^3*b^8*c^4 - 8*a^2*b^9*c^4 - 
          8*a*b^10*c^4 - 2*b^11*c^4 + 5*a^10*c^5 + 4*a^9*b*c^5 + 
          25*a^8*b^2*c^5 + 4*a^7*b^3*c^5 + 28*a^5*b^5*c^5 - 4*a^4*b^6*c^5 - 
          12*a^3*b^7*c^5 - a^2*b^8*c^5 - b^10*c^5 + 7*a^9*c^6 + 9*a^8*b*c^6 + 
          20*a^7*b^2*c^6 + 36*a^6*b^3*c^6 - 16*a^5*b^4*c^6 - 4*a^4*b^5*c^6 + 
          32*a^3*b^6*c^6 + 8*a^2*b^7*c^6 + 5*a*b^8*c^6 - b^9*c^6 + 
          4*a^8*c^7 + 16*a^7*b*c^7 - 8*a^6*b^2*c^7 + 16*a^5*b^3*c^7 + 
          20*a^4*b^4*c^7 - 12*a^3*b^5*c^7 + 8*a^2*b^6*c^7 + 4*a*b^7*c^7 + 
          4*b^8*c^7 - 4*a^7*c^8 + 11*a^6*b*c^8 + a^5*b^2*c^8 - 
          18*a^4*b^3*c^8 + 2*a^3*b^4*c^8 - a^2*b^5*c^8 + 5*a*b^6*c^8 + 
          4*b^7*c^8 - 7*a^6*c^9 - 2*a^5*b*c^9 + 6*a^4*b^2*c^9 - 
          4*a^3*b^3*c^9 - 8*a^2*b^4*c^9 - b^6*c^9 - 5*a^5*c^10 - 
          2*a^4*b*c^10 - 4*a^3*b^2*c^10 + 2*a^2*b^3*c^10 - 8*a*b^4*c^10 - 
          b^5*c^10 - 2*a^4*c^11 - 2*a^2*b^2*c^11 - 2*a*b^3*c^11 - 
          2*b^4*c^11 + 2*a^3*c^12 - 2*a^2*b*c^12 + 2*a*b^2*c^12 - 
          2*b^3*c^12 + 3*a^2*c^13 + b^2*c^13 + a*c^14 + b*c^14))}, 
     "X5974" -> {a^6 + 2*a^5*b + 2*a^4*b^2 + 2*a^3*b^3 - 2*a*b^5 - b^6 + 
        2*a^5*c + 6*a^4*b*c + 8*a^3*b^2*c - 6*a*b^4*c - 2*b^5*c + 2*a^4*c^2 + 
        8*a^3*b*c^2 + a^2*b^2*c^2 - 8*a*b^3*c^2 - 4*b^4*c^2 + 2*a^3*c^3 - 
        8*a*b^2*c^3 - 6*b^3*c^3 - 6*a*b*c^4 - 4*b^2*c^4 - 2*a*c^5 - 2*b*c^5 - 
        c^6}, "X5975" -> {b*c*(a^2*((b + c)*a + b^2 + c^2)^2*
         (a^3 + b*c*a + (b + c)*(b^2 - b*c - c^2))*(a^3 + b*c*a - 
          (b + c)*(b^2 + b*c - c^2)))}, "X5976" -> 
      {b*c*((a^4 - b^2*c^2)*(b^4 + c^4 - a^2*b^2 - a^2*c^2))}, 
     "X5977" -> {b*c*(a^5*b - a^3*b^3 + a^5*c - a^2*b^3*c + a*b^4*c + b^5*c - 
         a*b^3*c^2 - a^3*c^3 - a^2*b*c^3 - a*b^2*c^3 + a*b*c^4 + b*c^5)}, 
     "X5978" -> {b*c*((a^2 + b^2 + c^2)*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 
           2*b^2*c^2 - c^4) - 2*Sqrt[3]*(a^2*b^2 - b^4 + a^2*c^2 - c^4)*S)}, 
     "X5979" -> {b*c*((a^2 + b^2 + c^2)*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 
           2*b^2*c^2 - c^4) + 2*Sqrt[3]*(a^2*b^2 - b^4 + a^2*c^2 - c^4)*S)}, 
     "X5980" -> {b*c*(Sqrt[3]*a^2*(a^2 - b^2 - c^2)*(a^2 + b^2 + c^2) + 
         2*(a^4 - a^2*b^2 - a^2*c^2 - 2*b^2*c^2)*S)}, 
     "X5981" -> {b*c*(Sqrt[3]*a^2*(a^2 - b^2 - c^2)*(a^2 + b^2 + c^2) - 
         2*(a^4 - a^2*b^2 - a^2*c^2 - 2*b^2*c^2)*S)}, 
     "X5982" -> {b*c*((a^2 - b^2)*(a^6 + b^6 - 3*b^4*c^2 + 4*b^2*c^4 - 
           2*c^6 - a^4*(b^2 + 3*c^2) - a^2*(b^4 - 4*c^4))*
          ((b^4 + c^4 - a^2*(b^2 + c^2))*(2*a^4 + (b^2 - c^2)^2 - 
             a^2*(b^2 + c^2))*(S^3 - Sqrt[3]*SA*SB*SW) - 
           (a^4 + b^4 - a^2*c^2 - b^2*c^2)*(a^4 + b^4 - b^2*c^2 + 2*c^4 - 
             a^2*(2*b^2 + c^2))*(S^3 - Sqrt[3]*SB*SC*SW)) + 
         (-a^2 + c^2)*(a^6 - 2*b^6 + 4*b^4*c^2 - 3*b^2*c^4 + c^6 - 
           a^4*(3*b^2 + c^2) + a^2*(4*b^4 - c^4))*
          ((b^4 + c^4 - a^2*(b^2 + c^2))*(2*a^4 + (b^2 - c^2)^2 - 
             a^2*(b^2 + c^2))*(S^3 - Sqrt[3]*SA*SC*SW) - 
           (a^4 - a^2*b^2 - b^2*c^2 + c^4)*(a^4 + 2*b^4 - b^2*c^2 + c^4 - 
             a^2*(b^2 + 2*c^2))*(S^3 - Sqrt[3]*SB*SC*SW)))}, 
     "X5983" -> {b*c*((a^2 - b^2)*(a^6 + b^6 - 3*b^4*c^2 + 4*b^2*c^4 - 
           2*c^6 - a^4*(b^2 + 3*c^2) - a^2*(b^4 - 4*c^4))*
          ((b^4 + c^4 - a^2*(b^2 + c^2))*(2*a^4 + (b^2 - c^2)^2 - 
             a^2*(b^2 + c^2))*(Sqrt[3]*S^3 + 3*SA*SB*SW) - 
           (a^4 + b^4 - a^2*c^2 - b^2*c^2)*(a^4 + b^4 - b^2*c^2 + 2*c^4 - 
             a^2*(2*b^2 + c^2))*(Sqrt[3]*S^3 + 3*SB*SC*SW)) + 
         (-a^2 + c^2)*(a^6 - 2*b^6 + 4*b^4*c^2 - 3*b^2*c^4 + c^6 - 
           a^4*(3*b^2 + c^2) + a^2*(4*b^4 - c^4))*
          ((b^4 + c^4 - a^2*(b^2 + c^2))*(2*a^4 + (b^2 - c^2)^2 - 
             a^2*(b^2 + c^2))*(Sqrt[3]*S^3 + 3*SA*SC*SW) - 
           (a^4 - a^2*b^2 - b^2*c^2 + c^4)*(a^4 + 2*b^4 - b^2*c^2 + c^4 - 
             a^2*(b^2 + 2*c^2))*(Sqrt[3]*S^3 + 3*SB*SC*SW)))}, 
     "X5984" -> {b*c*(3*a^8 - a^6*(b^2 + c^2) - 5*a^4*b^2*c^2 - 
         a^2*(b^2 + c^2)*(b^4 - 4*b^2*c^2 + c^4) - (b^2 - c^2)^2*
          (b^4 + 3*b^2*c^2 + c^4))}, "X5985" -> 
      {b*c*(a^8 - a^6*(b^2 + b*c + c^2) - a^5*b*c*(b + c) + 
         a^4*(b^4 + b^3*c - b^2*c^2 + b*c^3 + c^4) + a^3*b*c*(b + c)*
          (b^2 + c^2) - a^2*(b^6 + b^5*c - b^4*c^2 - b^3*c^3 - b^2*c^4 + 
           b*c^5 + c^6) - a*b*c*(b + c)*(b^4 - b^2*c^2 + c^4) - 
         b^2*c^2*(b^2 - c^2)^2)}, "X5986" -> 
      {b*c*(a^10 - a^6*b^2*c^2 - a^4*b^2*c^2*(b^2 + c^2) - 
         b^2*c^2*(b^2 - c^2)^2*(b^2 + c^2) + a^2*(-b^8 + b^6*c^2 + 
           2*b^4*c^4 + b^2*c^6 - c^8))}, "X5987" -> 
      {b*c*(a^10 - 2*a^4*b^2*c^2*(b^2 + c^2) + a^2*(2*b^6*c^2 + 2*b^2*c^6 + 
           b^4*c^4 - b^8 - c^8) - b^2*c^2*(b^2 - c^2)^2*(b^2 + c^2))}, 
     "X5988" -> {b*c*(b^5 + c^5 + a^4*b + a^4*c - a^3*b^2 - a^3*c^2 - 
         a^2*b^2*c - a^2*b*c^2 + a*b^4 + a*c^4 - b^3*c^2 - b^2*c^3)}, 
     "X5989" -> {b*c*(a^8 - a^4*b^2*c^2 - a^2*b^6 - a^2*c^6 + 2*b^4*c^4)}, 
     "X5990" -> {b*c*(a^7 - a^6*(b + c) + a^5*b*c + 
         a^3*(b^4 - b^3*c - b^2*c^2 - b*c^3 + c^4) - 
         a^2*(b + c)*(b^4 - 2*b^3*c + b^2*c^2 - 2*b*c^3 + c^4) + 
         a*b*c*(b^4 - b^3*c - b^2*c^2 - b*c^3 + c^4) - b^2*c^2*(b - c)^2*
          (b + c))}, "X5991" -> {b*c*(a^8 - a^7*(b + c) + a^6*b*c - 
         a^4*b^2*c^2 + a^3*(b + c)*(b^2 - b*c + c^2)^2 - 
         a^2*(b^6 - b^5*c + b^3*c^3 - b*c^5 + c^6) + a*b^2*c^2*(b - c)^2*
          (b + c) - b^3*c^3*(b - c)^2)}, "X5992" -> 
      {b*c*(a^5 - b^5 - c^5 - a^4*b - a^4*c + a^3*b^2 + a^3*c^2 - a^2*b^3 - 
         a^2*c^3 + a^2*b^2*c + a^2*b*c^2 - a*b^4 - a*c^4 - a*b^2*c^2 + 
         b^4*c + b^3*c^2 + b^2*c^3 + b*c^4)}, 
     "X5993" -> {b*c*((b - c)^2*(a^3 + b^3 + a*b*c + 2*b^2*c + 2*b*c^2 + c^3)*
         (-a^4 - a^3*b + a*b^3 + b^4 - a^3*c - a^2*b*c + 3*a*b^2*c + b^3*c + 
          3*a*b*c^2 + a*c^3 + b*c^3 + c^4))}, 
     "X5994" -> {b*c*(a^2*(a^2 - b^2)*(a^2 - c^2)*
         (Sqrt[3]*(a^2 + b^2 - c^2) - 2*S)*(Sqrt[3]*(a^2 - b^2 + c^2) - 
          2*S))}, "X5995" -> {b*c*(a^2*(a^2 - b^2)*(a^2 - c^2)*
         (Sqrt[3]*(a^2 + b^2 - c^2) + 2*S)*(Sqrt[3]*(a^2 - b^2 + c^2) + 
          2*S))}, "X5996" -> {b*c*(b^2 - c^2)*(-2*a^2*b^2 - 2*a^2*c^2 + 
         b^2*c^2)}, "X5997" -> {b*c*(a - ((a - b + c)*(a + b - c))^(1/2))}, 
     "X5998" -> {b*c*(a + ((a - b + c)*(a + b - c))^(1/2))}, 
     "X5999" -> {b*c*(a^8 + a^4*(b^4 + c^4 + b^2*c^2) - 2*a^2*(b^6 + c^6) - 
         b^2*c^2*(b^2 - c^2)^2)}, "X6010" -> 
      {a/((b - c)*(-a^3 - a^2*b - a^2*c - a*b*c + b^2*c + b*c^2))}, 
     "X6011" -> {1/((b - c)*(a^3 - a^2*b - a*b^2 + b^3 - a^2*c - a*b*c - 
          a*c^2 + c^3))}, "X6012" -> 
      {1/((b - c)*(a^2 - a*b + b^2 - a*c + c^2))}, 
     "X6013" -> {1/((b - c)*(2*a*b + 2*a*c + b*c))}, 
     "X6014" -> {a/((5*a - b - c)*(-b + c))}, 
     "X6015" -> {1/(a^2*b^2 - a*b^3 + a*b^2*c + a^2*c^2 + a*b*c^2 - 
         2*b^2*c^2 - a*c^3)}, "X6016" -> 
      {a/((b - c)*(-3*a^2 - a*b - a*c + 2*b*c))}, 
     "X6017" -> {b*c*(a^2/((b - c)*(4*a^2 - a*b + b^2 - a*c - 4*b*c + 
           c^2)))}, "X6018" -> {a*(a - b - c)*(a*b + b^2 + a*c - 4*b*c + c^2)^
         2}, "X6019" -> {a*(a - b - c)*(b + c)^2*(a^2 + b^2 - 3*b*c + c^2)^
         2}, "X6020" -> {a*(a - b - c)*(b - c)^2*
        (a^4 - b^4 + a^2*b*c - b^3*c - b*c^3 - c^4)^2}, 
     "X6021" -> {a*(a - b - c)*(2*a*b^2 - 2*a*b*c - b^2*c + 2*a*c^2 - b*c^2)^
         2}, "X6022" -> {a*(a - b - c)*(b + c)^2*
        (2*a^2*b^2 - 3*a^2*b*c + 2*a^2*c^2 - b^2*c^2)^2}, 
     "X6023" -> {a*(a + b - c)*(a - b + c)*(b + c)^2*
        (a^4 - b^4 - 2*a^2*b*c + b^3*c + b^2*c^2 + b*c^3 - c^4)^2}, 
     "X6024" -> {a*(a - b - c)*(a^2*b - 4*a*b^2 + b^3 + a^2*c + 4*a*b*c - 
          4*a*c^2 + c^3)^2}, "X6025" -> 
      {b*c*((a - b - c)*(a^3*b - a^2*b^2 + a^3*c + b^3*c - a^2*c^2 - 
           2*b^2*c^2 + b*c^3)^2)}, "X6026" -> 
      {b*c*((a - b - c)*(b - c)^2*(a^4*b^2 + a^4*b*c + a^4*c^2 + b^3*c^3)^
          2)}, "X6027" -> {a*(a - b - c)*(b - c)^2*
        (a^4 - b^4 + 2*a^2*b*c - b^3*c + b^2*c^2 - b*c^3 - c^4)^2}, 
     "X6028" -> {a*(a - b - c)*(a^4*b^2 + a*b^5 - 2*a^4*b*c - b^5*c + 
          a^4*c^2 + a*c^5 - b*c^5)^2}, "X6029" -> 
      {a*(a - b - c)*(a^3*b^2 + a*b^4 - 2*a^3*b*c - b^4*c + a^3*c^2 + a*c^4 - 
          b*c^4)^2}, "X6030" -> 
      {b*c*(a^2*(3*a^4 - a^2*b^2 - 2*b^4 - a^2*c^2 - b^2*c^2 - 2*c^4))}, 
     "X6031" -> {b*c*(4*a^6 - a^2*(4*b^4 + b^2*c^2 + 4*c^4) - 
         2*b^2*c^2*(b^2 + c^2))}, "X6032" -> 
      {b*c*(3*a^4*(b^2 + c^2) + a^2*(b^4 + b^2*c^2 + c^4) - 
         2*(b^2 - c^2)^2*(b^2 + c^2))}, "X6033" -> 
      {b*c*(a^8 - a^4*(b^4 + b^2*c^2 + c^4) + a^2*(b^6 + c^6) - 
         (b^2 - c^2)^2*(b^4 + c^4))}, "X6034" -> 
      {b*c*(a^6 + a^2*(2*b^4 - 3*b^2*c^2 + 2*c^4) - (b^2 + c^2)*
          (a^4 - (b^2 - c^2)^2))}, "X6035" -> 
      {b*c*(1/((b^2 - c^2)*(2*a^6 - b^6 - c^6 - 2*a^4*b^2 - 2*a^4*c^2 + 
           a^2*b^4 + a^2*c^4 + b^4*c^2 + b^2*c^4)))}, 
     "X6036" -> {b*c*(2*a^8 - 4*a^6*(b^2 + c^2) + 5*a^4*(b^4 + c^4) - 
         2*a^2*(2*b^6 - b^4*c^2 - b^2*c^4 + 2*c^6) + (b^2 - c^2)^4)}, 
     "X6037" -> {b*c*(1/((b^2 - c^2)*(a^4 - a^2*b^2 - a^2*c^2 - 2*b^2*c^2)*
          (a^2*b^2 + a^2*c^2 - b^4 - c^4)))}, 
     "X6038" -> {b*c*(3*(b^2 + c^2)*a^10 - (b^2 - c^2)^2*a^8 - 
         2*(b^2 - c^2)^2*b^4*c^4 + (b^4 - c^4)*(b^2 - c^2)*a^6 - 
         4*(b^4 - c^4)*(b^2 - c^2)*a^2*b^2*c^2 - 3*(b^8 + c^8)*a^4)}, 
     "X6041" -> {a*(b^2 - c^2)*(2*a^6 - b^6 - c^6 - 2*a^4*b^2 - 2*a^4*c^2 + 
         a^2*b^4 + a^2*c^4 + b^4*c^2 + b^2*c^4)}, 
     "X6042" -> {b*c*(a*(b + c)^2*(b^2 + c^2 + a*b + a*c)^2)}, 
     "X6043" -> {b*c*(a*(a + b)*(a + c)*(a^3 + a*b^2 + a*c^2 + 3*a*b*c - 
          b^2*c - b*c^2))}, "X6044" -> 
      {b*c*(a*(b + c)^2*(a^3 + b^3 - a*c^2 - b^2*c)*(a^3 + c^3 - a*b^2 - 
          b*c^2))}, "X6045" -> {a^7*b^2 - 3*a^5*b^4 + 3*a^3*b^6 - a*b^8 - 
        5*a^5*b^3*c - 3*a^4*b^4*c + 6*a^3*b^5*c + 2*a^2*b^6*c - a*b^7*c + 
        b^8*c + a^7*c^2 - 6*a^5*b^2*c^2 - 3*a^4*b^3*c^2 + 3*a^3*b^4*c^2 + 
        4*a^2*b^5*c^2 + 2*a*b^6*c^2 - b^7*c^2 - 5*a^5*b*c^3 - 3*a^4*b^2*c^3 + 
        2*a^2*b^4*c^3 + a*b^5*c^3 - 3*b^6*c^3 - 3*a^5*c^4 - 3*a^4*b*c^4 + 
        3*a^3*b^2*c^4 + 2*a^2*b^3*c^4 - 2*a*b^4*c^4 + 3*b^5*c^4 + 
        6*a^3*b*c^5 + 4*a^2*b^2*c^5 + a*b^3*c^5 + 3*b^4*c^5 + 3*a^3*c^6 + 
        2*a^2*b*c^6 + 2*a*b^2*c^6 - 3*b^3*c^6 - a*b*c^7 - b^2*c^7 - a*c^8 + 
        b*c^8}, "X6046" -> {b*c*((b + c)^2*(a + b - c)^3*(a - b + c)^3)}, 
     "X6047" -> {b*c*(b + c)*(-5*a^5*b - 3*a^4*b^2 + 6*a^3*b^3 + 2*a^2*b^4 - 
         a*b^5 + b^6 - 5*a^5*c - 10*a^4*b*c - 2*a^3*b^2*c + 4*a^2*b^3*c - 
         a*b^4*c - 2*b^5*c - 3*a^4*c^2 - 2*a^3*b*c^2 + 4*a^2*b^2*c^2 + 
         2*a*b^3*c^2 - b^4*c^2 + 6*a^3*c^3 + 4*a^2*b*c^3 + 2*a*b^2*c^3 + 
         4*b^3*c^3 + 2*a^2*c^4 - a*b*c^4 - b^2*c^4 - a*c^5 - 2*b*c^5 + c^6)}, 
     "X6048" -> {b*c*(a*(a^2*b + a^2*c + a*b^2 + a*c^2 + a*b*c - 3*b^2*c - 
          3*b*c^2))}, "X6049" -> {b*c*((b + c - 3*a)^2/(b + c - a))}, 
     "X6050" -> {(b - c)*(3*a^2 - b^2 - c^2 - 2*b*c)}, 
     "X6051" -> {a^2*b + 2*a*b^2 + b^3 + a^2*c + 6*a*b*c + 3*b^2*c + 
        2*a*c^2 + 3*b*c^2 + c^3}, "X6052" -> 
      {a^7*b^2 + 4*a^6*b^3 + 7*a^5*b^4 + 8*a^4*b^5 + 7*a^3*b^6 + 4*a^2*b^7 + 
        a*b^8 - 2*a^7*b*c - 4*a^6*b^2*c + 3*a^5*b^3*c + 17*a^4*b^4*c + 
        16*a^3*b^5*c - 2*a^2*b^6*c - 9*a*b^7*c - 3*b^8*c + a^7*c^2 - 
        4*a^6*b*c^2 - 24*a^5*b^2*c^2 - 29*a^4*b^3*c^2 - 45*a^3*b^4*c^2 - 
        80*a^2*b^5*c^2 - 60*a*b^6*c^2 - 15*b^7*c^2 + 4*a^6*c^3 + 
        3*a^5*b*c^3 - 29*a^4*b^2*c^3 - 120*a^3*b^3*c^3 - 202*a^2*b^4*c^3 - 
        139*a*b^5*c^3 - 33*b^6*c^3 + 7*a^5*c^4 + 17*a^4*b*c^4 - 
        45*a^3*b^2*c^4 - 202*a^2*b^3*c^4 - 178*a*b^4*c^4 - 45*b^5*c^4 + 
        8*a^4*c^5 + 16*a^3*b*c^5 - 80*a^2*b^2*c^5 - 139*a*b^3*c^5 - 
        45*b^4*c^5 + 7*a^3*c^6 - 2*a^2*b*c^6 - 60*a*b^2*c^6 - 33*b^3*c^6 + 
        4*a^2*c^7 - 9*a*b*c^7 - 15*b^2*c^7 + a*c^8 - 3*b*c^8}, 
     "X6053" -> {b*c*(2*a^10 - 10*(b^2 + c^2)*a^8 + 17*(b^4 + c^4)*a^6 - 
         (b^2 + c^2)*(11*b^4 - 14*b^2*c^2 + 11*c^4)*a^4 + 
         (b^4 + 12*b^2*c^2 + c^4)*(b^2 - c^2)^2*a^2 + 
         (b^4 - c^4)*(b^2 - c^2)^3)}, "X6054" -> 
      {b*c*(2*Sin[angleB]*Sec[angleB + angleW] + 2*Sin[angleC]*
          Sec[angleC + angleW] - Sin[angleA]*Sec[angleA + angleW])}, 
     "X6055" -> {b*c*(4*a^8 - 6*(b^2 + c^2)*a^6 + (7*b^4 - 2*b^2*c^2 + 7*c^4)*
          a^4 - 2*(b^2 + c^2)*(3*b^4 - 5*b^2*c^2 + 3*c^4)*a^2 + 
         (b^4 - 4*b^2*c^2 + c^4)*(b^2 - c^2)^2)}, 
     "X6056" -> {b*c*(a^4*(-a + b + c)*(a^2 - b^2 - c^2)^2)}, 
     "X6057" -> {b*c*((b + c)^2*(-a + b + c))}, 
     "X6058" -> {b*c*((a + b - c)^2*(a - b + c)^2*(b + c)^4*(-a + b + c))}, 
     "X6059" -> {b*c*(a^2*(-a + b + c)*(a^2 + b^2 - c^2)^2*
         (a^2 - b^2 + c^2)^2)}, "X6060" -> 
      {b*c*((-a + b + c)*(3*a^4 - 2*a^2*b^2 - b^4 - 2*a^2*c^2 + 2*b^2*c^2 - 
           c^4)^2)}, "X6061" -> {b*c*(a^2*(a + b)^2*(a + c)^2*
         (b + c - a)^3)}, "X6062" -> 
      {b*c*((-a + b + c)*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4)^
          2)}, "X6063" -> {b*(c/(a^2*(-a + b + c)))}, 
     "X6064" -> {b*c*((-a + b + c)/(b^2 - c^2)^2)}, 
     "X6065" -> {b*c*((a^2*(-a + b + c))/(b - c)^2)}, 
     "X6066" -> {b*c*((a^4*(-a + b + c))/(b - c)^2)}, 
     "X6067" -> {b*c*((-a + b + c)*(a*b - (b - c)^2 + a*c)^2)}, 
     "X6068" -> {b*c*((-a + b + c)*(a^2 + 2*b*c - a*(b + c) - 2*SA)^2)}, 
     "X6069" -> {b*c*(a^22 - 8*a^20*b^2 + 28*a^18*b^4 - 56*a^16*b^6 + 
         70*a^14*b^8 - 56*a^12*b^10 + 28*a^10*b^12 - 8*a^8*b^14 + a^6*b^16 - 
         8*a^20*c^2 + 42*a^18*b^2*c^2 - 92*a^16*b^4*c^2 + 106*a^14*b^6*c^2 - 
         62*a^12*b^8*c^2 + 7*a^10*b^10*c^2 + 13*a^8*b^12*c^2 - 
         8*a^6*b^14*c^2 + 4*a^4*b^16*c^2 - 3*a^2*b^18*c^2 + b^20*c^2 + 
         28*a^18*c^4 - 92*a^16*b^2*c^4 + 113*a^14*b^4*c^4 - 62*a^12*b^6*c^4 + 
         17*a^10*b^8*c^4 - 9*a^8*b^10*c^4 + 5*a^6*b^12*c^4 - 6*a^4*b^14*c^4 + 
         13*a^2*b^16*c^4 - 7*b^18*c^4 - 56*a^16*c^6 + 106*a^14*b^2*c^6 - 
         62*a^12*b^4*c^6 + 4*a^10*b^6*c^6 + 4*a^8*b^8*c^6 + 8*a^6*b^10*c^6 - 
         6*a^4*b^12*c^6 - 18*a^2*b^14*c^6 + 20*b^16*c^6 + 70*a^14*c^8 - 
         62*a^12*b^2*c^8 + 17*a^10*b^4*c^8 + 4*a^8*b^6*c^8 - 12*a^6*b^8*c^8 + 
         8*a^4*b^10*c^8 + 3*a^2*b^12*c^8 - 28*b^14*c^8 - 56*a^12*c^10 + 
         7*a^10*b^2*c^10 - 9*a^8*b^4*c^10 + 8*a^6*b^6*c^10 + 8*a^4*b^8*c^10 + 
         10*a^2*b^10*c^10 + 14*b^12*c^10 + 28*a^10*c^12 + 13*a^8*b^2*c^12 + 
         5*a^6*b^4*c^12 - 6*a^4*b^6*c^12 + 3*a^2*b^8*c^12 + 14*b^10*c^12 - 
         8*a^8*c^14 - 8*a^6*b^2*c^14 - 6*a^4*b^4*c^14 - 18*a^2*b^6*c^14 - 
         28*b^8*c^14 + a^6*c^16 + 4*a^4*b^2*c^16 + 13*a^2*b^4*c^16 + 
         20*b^6*c^16 - 3*a^2*b^2*c^18 - 7*b^4*c^18 + b^2*c^20)}, 
     "X6070" -> {b*c*(SB - SC)^2*(a^2*SA^3 + SA*(4*SA - a^2)*SB*SC + 
         2*SB^2*SC^2 - 3*SA^2*(SB^2 + SC^2))}, 
     "X6071" -> {a*(SB - SC)^2*((-a^2)*SA^3 + c^2*SA*SB^2 + 
         (b^2*SA - 2*SB^2)*SC^2)}, "X6072" -> 
      {a*(SA^2 - SB*SC)^2*(a^2*SA^3 + 2*SB^2*SC^2 - SA^2*(SB^2 + SC^2) - 
         SA*(SB^3 + SC^3))}, "X6073" -> 
      {b*c*((a^2*b - b^3 + a^2*c - 2*a*b*c + b^2*c + b*c^2 - c^3)^2*
         (2*a^4 - 2*a^3*b - a^2*b^2 + 2*a*b^3 - b^4 - 2*a^3*c + 4*a^2*b*c - 
          2*a*b^2*c - a^2*c^2 - 2*a*b*c^2 + 2*b^2*c^2 + 2*a*c^3 - c^4))}, 
     "X6074" -> {b*c*((2*a^3 - a^2*b - b^3 - a^2*c + b^2*c + b*c^2 - c^3)^2*
         (a^4*b^2 - 2*a^3*b^3 + 2*a*b^5 - b^6 + a^4*c^2 + 2*a^2*b^2*c^2 - 
          2*a*b^3*c^2 - b^4*c^2 - 2*a^3*c^3 - 2*a*b^2*c^3 + 4*b^3*c^3 - 
          b^2*c^4 + 2*a*c^5 - c^6))}, "X6075" -> 
      {b*c*((b - c)^2*(2*a^4 - 2*a^3*b - a^2*b^2 + 2*a*b^3 - b^4 - 2*a^3*c + 
          4*a^2*b*c - 2*a*b^2*c - a^2*c^2 - 2*a*b*c^2 + 2*b^2*c^2 + 2*a*c^3 - 
          c^4))}, "X6076" -> {b*c*((5*a^2 - b^2 - c^2)^2*(b^2 - c^2)^2*
         (a^6*b^2 + a^4*b^4 - a^2*b^6 - b^8 + a^6*c^2 - 14*a^4*b^2*c^2 + 
          10*a^2*b^4*c^2 + 7*b^6*c^2 + a^4*c^4 + 10*a^2*b^2*c^4 - 
          20*b^4*c^4 - a^2*c^6 + 7*b^2*c^6 - c^8))}, 
     "X6077" -> {b*c*((2*a^2 - b^2 - c^2)^2*(a^6*b^2 + a^4*b^4 - a^2*b^6 - 
          b^8 + a^6*c^2 - 14*a^4*b^2*c^2 + 10*a^2*b^4*c^2 + 7*b^6*c^2 + 
          a^4*c^4 + 10*a^2*b^2*c^4 - 20*b^4*c^4 - a^2*c^6 + 7*b^2*c^6 - 
          c^8))}, "X6078" -> {a*(a - b)*(a - c)*(a^2 - a*b + 2*b^2 - 2*a*c - 
         b*c + c^2)*(a^2 - 2*a*b + b^2 - a*c - b*c + 2*c^2)}, 
     "X6079" -> {b*c*((a - b)*(a - c)*(a^2 - 4*a*b + b^2 + a*c + b*c)*
         (a^2 + a*b - 4*a*c + b*c + c^2))}, 
     "X6080" -> {b*c*(a^2*(a^2 - c^2)*(c*a^5 - b^2*a^4 + 
          2*(b^2 - c^2)*c*a^3 + 2*(b^2 - c^2)*b^2*a^2 - 
          (b^2 - c^2)*(3*b^2 + c^2)*c*a - (b^2 - c^2)^2*b^2)*
         (c*a^5 + b^2*a^4 + 2*(b^2 - c^2)*c*a^3 - 2*(b^2 - c^2)*b^2*a^2 - 
          (b^2 - c^2)*(3*b^2 + c^2)*c*a + (b^2 - c^2)^2*b^2)*(a^2 - b^2)*
         (b*a^5 - c^2*a^4 - 2*(b^2 - c^2)*b*a^3 - 2*(b^2 - c^2)*c^2*a^2 + 
          (b^2 - c^2)*(b^2 + 3*c^2)*b*a - (b^2 - c^2)^2*c^2)*
         (b*a^5 + c^2*a^4 - 2*(b^2 - c^2)*b*a^3 + 2*(b^2 - c^2)*c^2*a^2 + 
          (b^2 - c^2)*(b^2 + 3*c^2)*b*a + (b^2 - c^2)^2*c^2))}, 
     "X6081" -> {b*c*(a^2*(a - c)*(a^3 + (b - c)*a^2 - (b - c)^2*a - 
          (b + c)*(b^2 - c^2))*(a^4 - b*a^3 + (b + 2*c)*(b - c)*a^2 + 
          (b - c)^2*b*a - (b^2 - c^2)*(2*b^2 - b*c + c^2))*(a - b)*
         (a^3 - (b - c)*a^2 - (b - c)^2*a + (b + c)*(b^2 - c^2))*
         (a^4 - c*a^3 - (2*b + c)*(b - c)*a^2 + (b - c)^2*c*a + 
          (b^2 - c^2)*(b^2 - b*c + 2*c^2)))}, 
     "X6082" -> {b*c*((a^2 - b^2)*(a^2 - c^2)*(9*a^2*c^2 - 
          (a^2 + b^2 + c^2)^2)*(9*a^2*b^2 - (a^2 + b^2 + c^2)^2))}, 
     "X6083" -> {b*c*(a^2/((b^2 - c^2)*(2*a^3 + b^3 + c^3 - a*b^2 - a*c^2 - 
           b^2*c - b*c^2)))}, "X6087" -> 
      {b*((Cos[angleC]*(Cot[angleC]/2))/(-1 - Cos[angleC] + Cos[angleA] + 
           Cos[angleB])) - c*((Cos[angleB]*(Cot[angleB]/2))/
          (-1 - Cos[angleB] + Cos[angleC] + Cos[angleA]))}, 
     "X6090" -> {b*c*(a^2*(3*a^4 + b^4 + c^4 - 4*a^2*b^2 - 4*a^2*c^2 + 
          6*b^2*c^2))}, "X6091" -> {b*c*(a^2*SA*((SA - a^2)/(2*SA - a^2)))}, 
     "X6092" -> {b*c*((a^6*b^2 + a^4*b^4 - a^2*b^6 - b^8 + a^6*c^2 - 
          14*a^4*b^2*c^2 + 10*a^2*b^4*c^2 + 7*b^6*c^2 + a^4*c^4 + 
          10*a^2*b^2*c^4 - 20*b^4*c^4 - a^2*c^6 + 7*b^2*c^6 - c^8)*
         (2*a^8 - 6*a^6*b^2 + 19*a^4*b^4 - 8*a^2*b^6 + b^8 - 6*a^6*c^2 - 
          20*a^4*b^2*c^2 + 4*a^2*b^4*c^2 + 19*a^4*c^4 + 4*a^2*b^2*c^4 - 
          2*b^4*c^4 - 8*a^2*c^6 + c^8))}, 
     "X6093" -> {b*c*((a^8 + (b^2 - 7*c^2)*a^6 - (b^4 + 10*b^2*c^2 - 20*c^4)*
           a^4 - (b^6 + 7*c^6 - 2*(7*b^2 - 5*c^2)*b^2*c^2)*a^2 - 
          (b^4 - c^4)*(b^2 + c^2)*c^2)*(a^8 - (7*b^2 - c^2)*a^6 + 
          (20*b^4 - 10*b^2*c^2 - c^4)*a^4 - 
          (7*b^6 + c^6 + 2*(5*b^2 - 7*c^2)*b^2*c^2)*a^2 + 
          (b^4 - c^4)*(b^2 + c^2)*b^2))}, 
     "X6094" -> {b*c*((a^4 + 5*a^2*b^2 + b^4 - 4*a^2*c^2 - 4*b^2*c^2 + c^4)*
         (a^4 - 4*a^2*b^2 + b^4 + 5*a^2*c^2 - 4*b^2*c^2 + c^4))}, 
     "X6095" -> {(a^3 - a^2*b - a*b^2 + b^3 - 2*a^2*c + 7*a*b*c - 2*b^2*c - 
         2*a*c^2 - 2*b*c^2 + c^3)*(a^3 - 2*a^2*b - 2*a*b^2 + b^3 - a^2*c + 
         7*a*b*c - 2*b^2*c - a*c^2 - 2*b*c^2 + c^3)}, 
     "X6096" -> {b*c*(a^2*(a^6 - (2*b^2 + c^2)*a^4 - 
          (3*b^4 - 10*b^2*c^2 + c^4)*a^2 - (3*b^2 - c^2)*(b^2 + c^2)*c^2)*
         (a^6 - (b^2 + 2*c^2)*a^4 - (b^4 - 10*b^2*c^2 + 3*c^4)*a^2 + 
          (b^2 - 3*c^2)*(b^2 + c^2)*b^2))}, 
     "X6097" -> {b*c*(a^2*(a^2 - b^2 - b*c - c^2)*(a^5*b - 2*a^3*b^3 + 
          a*b^5 + a^5*c - a^2*b^3*c - a*b^4*c + b^5*c - 2*a^3*c^3 - 
          a^2*b*c^3 - 2*b^3*c^3 - a*b*c^4 + a*c^5 + b*c^5))}, 
     "X6098" -> {(a^2 - b^2 + b*c - c^2)*((a^2*(b + c) - 2*a*b*c - b^3 + 
          b^2*c + b*c^2 - c^3)/((b^2 + c^2 - a^2)*
          (a^6 - a^4*(b^2 - b*c + c^2) - a^3*b*c*(b + c) - 
           a^2*(b^4 - b^3*c - 2*b^2*c^2 - b*c^3 + c^4) + a*b*(b - c)^2*c*
            (b + c) + (b - c)^4*(b + c)^2)))}, 
     "X6099" -> {b*c*(a^2/((b - c)*(a^3*b - a^2*b^2 - a*b^3 + b^4 + a^3*c + 
           a*b^2*c - a^2*c^2 + a*b*c^2 - 2*b^2*c^2 - a*c^3 + c^4)))}, 
     "X6100" -> {a^14*(b + c) - 2*a^13*(b + c)^2 - (b - c)^6*(b + c)^5*
         (b^2 + c^2)^2 + a^12*(-3*b^3 + 5*b^2*c + 5*b*c^2 - 3*c^3) + 
        2*a^11*(b + c)^2*(4*b^2 - 5*b*c + 4*c^2) + 
        a^10*(b^5 - 21*b^4*c + b^3*c^2 + b^2*c^3 - 21*b*c^4 + c^5) - 
        10*a^9*(b^2 - c^2)^2*(b^2 - b*c + c^2) + 
        a^8*(5*b^7 + 15*b^6*c - 21*b^5*c^2 + 21*b^4*c^3 + 21*b^3*c^4 - 
          21*b^2*c^5 + 15*b*c^6 + 5*c^7) + 2*a^7*b*c*(-10*b^6 + 7*b^5*c + 
          4*b^4*c^2 - 18*b^3*c^3 + 4*b^2*c^4 + 7*b*c^5 - 10*c^6) + 
        a^6*(-5*b^9 + 15*b^8*c + 4*b^7*c^2 - 32*b^6*c^3 + 22*b^5*c^4 + 
          22*b^4*c^5 - 32*b^3*c^6 + 4*b^2*c^7 + 15*b*c^8 - 5*c^9) + 
        2*a^5*(b - c)^2*(5*b^8 + 10*b^7*c - b^6*c^2 + 4*b^5*c^3 + 
          14*b^4*c^4 + 4*b^3*c^5 - b^2*c^6 + 10*b*c^7 + 5*c^8) - 
        a^4*(b - c)^2*(b^9 + 23*b^8*c + 16*b^7*c^2 + 28*b^5*c^4 + 
          28*b^4*c^5 + 16*b^2*c^7 + 23*b*c^8 + c^9) - 2*a^3*(b^2 - c^2)^2*
         (4*b^8 - 7*b^7*c + b^6*c^2 + 5*b^5*c^3 - 12*b^4*c^4 + 5*b^3*c^5 + 
          b^2*c^6 - 7*b*c^7 + 4*c^8) + a^2*(b - c)^4*(b + c)^3*
         (3*b^6 + 8*b^5*c - 4*b^4*c^2 + 18*b^3*c^3 - 4*b^2*c^4 + 8*b*c^5 + 
          3*c^6) + 2*a*(b^2 - c^2)^4*(b^6 - 3*b^5*c + 4*b^4*c^2 - 6*b^3*c^3 + 
          4*b^2*c^4 - 3*b*c^5 + c^6)}, "X6101" -> 
      {b*c*(a^2*(a^6*(b^2 + c^2) - a^4*(3*b^4 + 4*b^2*c^2 + 3*c^4) + 
          a^2*(3*b^6 + 2*b^4*c^2 + 2*b^2*c^4 + 3*c^6) - b^8 + b^6*c^2 + 
          b^2*c^6 - c^8))}, "X6102" -> 
      {b*c*(a^2*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 + a^6*c^2 - 
          2*a^2*b^4*c^2 + b^6*c^2 - 3*a^4*c^4 - 2*a^2*b^2*c^4 + 3*a^2*c^6 + 
          b^2*c^6 - c^8))}, "X6103" -> 
      {b*c*((-a^2 + b^2 - c^2)*(a^2 + b^2 - c^2)*(-2*a^6 + 2*a^4*b^2 - 
          a^2*b^4 + b^6 + 2*a^4*c^2 - b^4*c^2 - a^2*c^4 - b^2*c^4 + c^6))}, 
     "X6104" -> {Csc[3*angleA]*Sin[angleA]*(Cos[3*angleA] + 
         Cos[angleA - Pi/3])}, "X6105" -> {Csc[3*angleA]*Sin[angleA]*
        (Cos[3*angleA] + Cos[angleA + Pi/3])}, 
     "X6106" -> {b*c*(3^(1/2)*(b^2 + c^2 - a^2)*
          (a^2*(b^2 + c^2)*(a^4 - (b^2 - c^2)^2) - a^4*(b^4 + c^4) + 
           (b^2 - c^2)^4) + 2*S*(a^2*(b^2 + c^2)*(a^4 + 3*(b^2 - c^2)^2) - 
           a^4*(3*b^4 - 4*b^2*c^2 + 3*c^4) - (b^2 - c^2)^4))}, 
     "X6107" -> {b*c*(3^(1/2)*(b^2 + c^2 - a^2)*
          (a^2*(b^2 + c^2)*(a^4 - (b^2 - c^2)^2) - a^4*(b^4 + c^4) + 
           (b^2 - c^2)^4) - 2*S*(a^2*(b^2 + c^2)*(a^4 + 3*(b^2 - c^2)^2) - 
           a^4*(3*b^4 - 4*b^2*c^2 + 3*c^4) - (b^2 - c^2)^4))}, 
     "X6108" -> {b*c*(4*a^8 + a^4*(7*b^4 - 2*b^2*c^2 + 7*c^4) + 
         (b^2 - c^2)^2*(b^4 - 4*b^2*c^2 + c^4) - 2*a^2*(b^2 + c^2)*
          (3*(a^4 + b^4 + c^4) - 5*b^2*c^2) + 2*3^(1/2)*S*(b^2 - c^2)^2*
          (a^2 + b^2 + c^2))}, "X6109" -> 
      {b*c*(4*a^8 + a^4*(7*b^4 - 2*b^2*c^2 + 7*c^4) + (b^2 - c^2)^2*
          (b^4 - 4*b^2*c^2 + c^4) - 2*a^2*(b^2 + c^2)*(3*(a^4 + b^4 + c^4) - 
           5*b^2*c^2) - 2*3^(1/2)*S*(b^2 - c^2)^2*(a^2 + b^2 + c^2))}, 
     "X6110" -> {(Cos[angleA] - 2*Cos[angleB]*Cos[angleC])*
        (Sec[angleA]*Sin[angleA + Pi/3])}, 
     "X6111" -> {(Cos[angleA] - 2*Cos[angleB]*Cos[angleC])*
        (Sec[angleA]*Sin[angleA - Pi/3])}, 
     "X6114" -> {b*c*(Sqrt[3]*(a^2*b^2 + a^2*c^2 - b^4 - c^4 + 2*b^2*c^2)*
          (a^2 + b^2 + c^2) - 2*S*(3*a^2*b^2 + 3*a^2*c^2 - b^4 - c^4 + 
           2*b^2*c^2))}, "X6115" -> 
      {b*c*(Sqrt[3]*(a^2*b^2 + a^2*c^2 - b^4 - c^4 + 2*b^2*c^2)*
          (a^2 + b^2 + c^2) + 2*S*(3*a^2*b^2 + 3*a^2*c^2 - b^4 - c^4 + 
           2*b^2*c^2))}, "X6116" -> {Sin[angleA]*Cos[angleB - angleC]*
        Sin[angleA - Pi/3]*Csc[2*angleA]}, 
     "X6117" -> {Sin[angleA]*Cos[angleB - angleC]*Sin[angleA + Pi/3]*
        Csc[2*angleA]}, "X6118" -> 
      {b*c*((a^2 - b^2 - c^2)*(2*a^4 - a^2*b^2 + b^4 - a^2*c^2 - 2*b^2*c^2 + 
           c^4) + 2*(6*a^4 - 7*a^2*b^2 + 7*b^4 - 7*a^2*c^2 - 10*b^2*c^2 + 
           7*c^4)*S)}, "X6119" -> 
      {b*c*((a^2 - b^2 - c^2)*(2*a^4 - a^2*b^2 + b^4 - a^2*c^2 - 2*b^2*c^2 + 
           c^4) - 2*(6*a^4 - 7*a^2*b^2 + 7*b^4 - 7*a^2*c^2 - 10*b^2*c^2 + 
           7*c^4)*S)}, "X6120" -> {Cos[angleA] - Cos[angleA/3]}, 
     "X6121" -> {Sin[angleA/3 + 2*(Pi/3)]*Sin[2*(angleA/3) + 4*(Pi/3)]}, 
     "X6122" -> {Sin[angleA/3 + 4*(Pi/3)]*Sin[2*(angleA/3) + 2*(Pi/3)]}, 
     "X6123" -> {Cos[angleA] + Cos[angleA/3]}, 
     "X6124" -> {Cos[angleA/3 + 2*(Pi/3)]*Cos[2*(angleA/3) + 4*(Pi/3)]}, 
     "X6125" -> {Cos[angleA/3 + 4*(Pi/3)]*Cos[2*(angleA/3) + 2*(Pi/3)]}, 
     "X6126" -> {a*(a^5 + a^4*(b + c) - 2*a^3*(b^2 + c^2) - 
         a^2*(2*b^3 - b*c*(b + c) + 2*c^3) + a*(b^4 + b^2*c^2 + c^4) + 
         (b - c)^2*(b^3 + c^3))}, "X6127" -> 
      {b*c*(a*(a^5*b - 2*a^3*b^3 + a*b^5 + a^5*c - a^4*b*c + 2*a^2*b^3*c - 
          a*b^4*c - b^5*c - a^2*b^2*c^2 - 2*a^3*c^3 + 2*a^2*b*c^3 + 
          2*b^3*c^3 - a*b*c^4 + a*c^5 - b*c^5))}, 
     "X6128" -> {b*c*(2*a^8 - 2*a^6*b^2 - 3*a^4*b^4 + 4*a^2*b^6 - b^8 - 
         2*a^6*c^2 + 8*a^4*b^2*c^2 - 4*a^2*b^4*c^2 + 4*b^6*c^2 - 3*a^4*c^4 - 
         4*a^2*b^2*c^4 - 6*b^4*c^4 + 4*a^2*c^6 + 4*b^2*c^6 - c^8)}, 
     "X6129" -> {b*c*(a*(b - c)*(a^3 + a^2*b - a*b^2 - b^3 + a^2*c - 
          2*a*b*c + b^2*c - a*c^2 + b*c^2 - c^3))}, 
     "X6130" -> {b*c*((b^2 - c^2)*(a^8 - 2*a^6*b^2 + a^4*b^4 - 2*a^6*c^2 + 
          a^4*b^2*c^2 + b^6*c^2 + a^4*c^4 - 2*b^4*c^4 + b^2*c^6))}, 
     "X6131" -> {b*c*((b^2 - c^2)*(a^6 + a^4*b^2 + a^4*c^2 - 5*a^2*b^2*c^2 + 
          b^4*c^2 + b^2*c^4))}, "X6132" -> 
      {b*c*(a^2*(b - c)*(b + c)*(a^6 - 3*a^4*b^2 + 3*a^2*b^4 - b^6 - 
          3*a^4*c^2 + a^2*b^2*c^2 + 3*a^2*c^4 - c^6))}, 
     "X6133" -> {b*c*((b - c)*(a^4 + a^3*b + a^3*c - a*b^2*c + b^3*c - 
          a*b*c^2 + 2*b^2*c^2 + b*c^3))}, 
     "X6134" -> {b*c*((b^2 - c^2)*(2*a^6 + 2*a^4*b^2 + 2*a^4*c^2 - 
          a^2*b^2*c^2 + 2*b^4*c^2 + 2*b^2*c^4))}, 
     "X6135" -> {b*c*(a*(a - b)*(a - c)*(a*b + S)*(a*c + S))}, 
     "X6136" -> {b*c*(a*(a - b)*(a - c)*(a*b - S)*(a*c - S))}, 
     "X6137" -> {b*c*(a^2*(b^2 - c^2)*(3*(a^2*b^2 - b^4 + a^2*c^2 - c^4) - 
          2*Sqrt[3]*(2*a^2 - b^2 - c^2)*S))}, 
     "X6138" -> {b*c*(a^2*(b^2 - c^2)*(3*(a^2*b^2 - b^4 + a^2*c^2 - c^4) + 
          2*Sqrt[3]*(2*a^2 - b^2 - c^2)*S))}, 
     "X6139" -> {b*c*(a^2*(a - b - c)*(b - c)*(2*a^2 - a*b - b^2 - a*c + 
          2*b*c - c^2))}, "X6140" -> 
      {b*c*(a^2*(b^2 - c^2)*(a^6 - 3*a^4*b^2 + 3*a^2*b^4 - b^6 - 3*a^4*c^2 - 
          a^2*b^2*c^2 + b^4*c^2 + 3*a^2*c^4 + b^2*c^4 - c^6))}, 
     "X6141" -> {b*c*(a^2*(((b^2 + c^2)*a^6 - 2*(b^2 - c^2)^2*a^4 + 
            (b^2 + c^2)*(2*b^4 - 7*b^2*c^2 + 2*c^4)*a^2 - b^8 - c^8 - 
            2*b^2*c^2*(b^4 - 5*b^2*c^2 + c^4))*Sqrt[-3*S^2 + SW^2] + a^10 - 
          (b^2 + c^2)*a^8 - (6*b^4 - 7*b^2*c^2 + 6*c^4)*a^6 + 
          2*(b^2 + c^2)*(5*b^4 - 8*b^2*c^2 + 5*c^4)*a^4 - 
          (4*b^8 + 4*c^8 + b^2*c^2*(7*b^4 - 24*b^2*c^2 + 7*c^4))*a^2 + 
          b^2*c^2*(b^2 + c^2)*(b^4 - 4*b^2*c^2 + c^4)))}, 
     "X6142" -> {b*c*(a^2*((-((b^2 + c^2)*a^6 - 2*(b^2 - c^2)^2*a^4 + 
             (b^2 + c^2)*(2*b^4 - 7*b^2*c^2 + 2*c^4)*a^2 - b^8 - c^8 - 
             2*b^2*c^2*(b^4 - 5*b^2*c^2 + c^4)))*Sqrt[-3*S^2 + SW^2] + a^10 - 
          (b^2 + c^2)*a^8 - (6*b^4 - 7*b^2*c^2 + 6*c^4)*a^6 + 
          2*(b^2 + c^2)*(5*b^4 - 8*b^2*c^2 + 5*c^4)*a^4 - 
          (4*b^8 + 4*c^8 + b^2*c^2*(7*b^4 - 24*b^2*c^2 + 7*c^4))*a^2 + 
          b^2*c^2*(b^2 + c^2)*(b^4 - 4*b^2*c^2 + c^4)))}, 
     "X6143" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^6 - 3*a^4*b^2 + 3*a^2*b^4 - b^6 - 3*a^4*c^2 + 3*a^2*b^2*c^2 + 
          b^4*c^2 + 3*a^2*c^4 + b^2*c^4 - c^6))}, 
     "X6144" -> {b*c*(2*b^2 + 2*c^2 - 5*a^2)}, 
     "X6145" -> {b*c*(1/(-a^8 + 2*a^6*b^2 - 2*a^2*b^6 + b^8 + 2*a^6*c^2 - 
          a^4*b^2*c^2 - b^6*c^2 - 2*a^2*c^6 - b^2*c^6 + c^8))}, 
     "X6146" -> {b*c*((a^2 - b^2 - c^2)*(2*a^8 - 3*a^6*b^2 + a^4*b^4 - 
          a^2*b^6 + b^8 - 3*a^6*c^2 - 2*a^4*b^2*c^2 + a^2*b^4*c^2 - 
          4*b^6*c^2 + a^4*c^4 + a^2*b^2*c^4 + 6*b^4*c^4 - a^2*c^6 - 
          4*b^2*c^6 + c^8))}, "X6147" -> 
      {b*c*(2*a^3*(b + c) + a^2*(b^2 + 4*b*c + c^2) - 2*a*(b - c)^2*(b + c) - 
         (b^2 - c^2)^2)}, "X6148" -> 
      {b*c*((a^2 - b^2 - b*c - c^2)*(a^2 - b^2 + b*c - c^2)*
         (2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4))}, 
     "X6149" -> {b*c*Sin[3*angleA]}, "X6150" -> 
      {a*(a^4 - 2*(b^2 + c^2)*a^2 + b^4 + c^4 - b^2*c^2)*
        (2*a^10 - 7*(b^2 + c^2)*a^8 + (10*((b^2 + c^2)^2 - b^2*c^2))*a^6 - 
         (b^2 + c^2)*(8*c^4 - 7*b^2*c^2 + 8*b^4)*a^4 + (b^2 - c^2)^2*a^2*
          (4*b^4 + 3*b^2*c^2 + 4*c^4) - (b^2 + c^2)*(b^2 - c^2)^4)}, 
     "X6151" -> {1/(Cos[angleB - angleC] + 2*Cos[angleA + Pi/3])}, 
     "X6152" -> {a*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
        (a^4 - 2*a^2*b^2 + b^4 - 2*a^2*c^2 - b^2*c^2 + c^4)*
        (a^4*b^2 - 2*a^2*b^4 + b^6 + a^4*c^2 - 2*a^2*b^2*c^2 - b^4*c^2 - 
         2*a^2*c^4 - b^2*c^4 + c^6)}, "X6153" -> 
      {(Cos[3*angleA] + 4*Sin[angleA]^2*Cos[angleB - angleC])*
        (1 + 2*Cos[angleA]*Cos[angleB - angleC])}, 
     "X6154" -> {b*c*(4*a^3 - 4*a^2*(b + c) - (b - c)^2*(b + c) + 
         a*(b + c)^2)}, "X6155" -> {(b + c)*(2*a^2 + b^2 + c^2 + 2*a*b + 
         2*a*c)}, "X6156" -> {(a + b)*(a + c)*(a^4 + 2*a^3*b + a^2*b^2 + 
         b^4 + 2*a^3*c + 4*a^2*b*c + 2*a*b^2*c + 4*b^3*c + a^2*c^2 + 
         2*a*b*c^2 + 7*b^2*c^2 + 4*b*c^3 + c^4)}, 
     "X6157" -> {(a + b)*(a + c)*(a^2 + b^2 + c^2 + a*b + a*c + 3*b*c)*
        (a^2 - b^2 - c^2 + a*b + a*c - b*c)}, 
     "X6158" -> {(b + c)*(a^2 + a*b + b^2 - a*c - b*c - c^2)*
        (a^2 - a*b - b^2 + a*c - b*c + c^2)*(a^2 + 3*a*b + b^2 + a*c + b*c + 
         c^2)*(a^2 + a*b + b^2 + 3*a*c + b*c + c^2)}, 
     "X6160" -> {(b + c)*(3*a^5*b + 8*a^4*b^2 + 9*a^3*b^3 + 4*a^2*b^4 + 
         a*b^5 + 3*a^5*c + 10*a^4*b*c + 17*a^3*b^2*c + 16*a^2*b^3*c + 
         7*a*b^4*c + 2*b^5*c + 8*a^4*c^2 + 17*a^3*b*c^2 + 20*a^2*b^2*c^2 + 
         11*a*b^3*c^2 + 2*b^4*c^2 + 9*a^3*c^3 + 16*a^2*b*c^3 + 11*a*b^2*c^3 + 
         2*b^3*c^3 + 4*a^2*c^4 + 7*a*b*c^4 + 2*b^2*c^4 + a*c^5 + 2*b*c^5)}, 
     "X6161" -> {(b - c)*(2*a^2 + b^2 + c^2 - 2*a*b - 2*a*c)}, 
     "X6162" -> {(a - b)*(a - c)*(a^4 - 2*a^3*b + a^2*b^2 + b^4 - 2*a^3*c + 
         4*a^2*b*c - 2*a*b^2*c - 4*b^3*c + a^2*c^2 - 2*a*b*c^2 + 7*b^2*c^2 - 
         4*b*c^3 + c^4)}, "X6163" -> 
      {(a - b)*(a - c)*(b^2 + c^2 - a^2 + a*b + a*c - 3*b*c)}, 
     "X6164" -> {(b - c)*(a^2 - 3*a*b + b^2 + a*c + b*c - c^2)*
        (a^2 + a*b - b^2 - 3*a*c + b*c + c^2)}, 
     "X6166" -> {(b - c)^2*(a^5 - 5*a^3*b^2 + 4*a^2*b^3 - a*b^4 + 
         6*a^2*b^2*c - 2*a*b^3*c - 5*a^3*c^2 + 6*a^2*b*c^2 - 9*a*b^2*c^2 + 
         2*b^3*c^2 + 4*a^2*c^3 - 2*a*b*c^3 + 2*b^2*c^3 - a*c^4)}, 
     "X6167" -> {(a + b - c)*(a - b + c)*(a^4 - 2*a^3*b + 2*a^2*b^2 - 
         2*a*b^3 + b^4 - 2*a^3*c + 8*a^2*b*c - 6*a*b^2*c + 2*a^2*c^2 - 
         6*a*b*c^2 + 6*b^2*c^2 - 2*a*c^3 + c^4)}, 
     "X6168" -> {(a + b - c)*(a - b + c)*(a^2 - a*b - a*c + 2*b*c)*
        (b^2 + c^2 - a*b - a*c)}, "X6169" -> 
      {(-a + b + c)*(a^2 + b^2 - a*c - b*c)*((-a)*b + b^2 + 2*a*c - b*c)*
        (a^2 - a*b - b*c + c^2)*(2*a*b - a*c - b*c + c^2)}, 
     "X6171" -> {(a - b - c)*(a^6 - 2*a^5*b - a^4*b^2 - 4*a^3*b^3 + 
         7*a^2*b^4 - 2*a*b^5 + b^6 - 2*a^5*c + 6*a^4*b*c + 2*a^3*b^2*c - 
         10*a^2*b^3*c - 4*b^5*c - a^4*c^2 + 2*a^3*b*c^2 + 6*a^2*b^2*c^2 + 
         2*a*b^3*c^2 + 7*b^4*c^2 - 4*a^3*c^3 - 10*a^2*b*c^3 + 2*a*b^2*c^3 - 
         8*b^3*c^3 + 7*a^2*c^4 + 7*b^2*c^4 - 2*a*c^5 - 4*b*c^5 + c^6)}, 
     "X6172" -> {b*c*(-5*a^2 + 4*a*b + b^2 + 4*a*c - 2*b*c + c^2)}, 
     "X6173" -> {b*c*(a^2 + a*b - 2*b^2 + a*c + 4*b*c - 2*c^2)}, 
     "X6174" -> {b*c*(2*a - b - c)*(2*a^2 - a*b - b^2 - a*c + 2*b*c - c^2)}, 
     "X6175" -> {b*c*(a^4 + a^2*b^2 - 2*b^4 + 3*a^2*b*c + 3*a*b^2*c + 
         a^2*c^2 + 3*a*b*c^2 + 4*b^2*c^2 - 2*c^4)}, 
     "X6176" -> {2*a^5*(b + c) + a^4*(b + c)^2 - a^3*(b + c)*
         (3*b^2 - 2*b*c + 3*c^2) - a^2*(b^4 + 4*b^3*c + 4*b^2*c^2 + 4*b*c^3 + 
          c^4) + a*(b + c)*(b^4 - 2*b^3*c - 2*b*c^3 + c^4) + 
        2*b*c*(b^2 - c^2)^2}, "X6177" -> 
      {b*c*(a^4 + b^4 + c^4 - a^2*b^2 - a^2*c^2 + (b^2 + c^2)*
          (a^4 + b^4 + c^4 - a^2*b^2 - a^2*c^2 - b^2*c^2)^(1/2))}, 
     "X6178" -> {b*c*(a^4 + b^4 + c^4 - a^2*b^2 - a^2*c^2 - 
         (b^2 + c^2)*(a^4 + b^4 + c^4 - a^2*b^2 - a^2*c^2 - b^2*c^2)^(1/2))}, 
     "X6179" -> {b*c*(2*a^4 - b^2*c^2)}, "X6180" -> 
      {(a^2 - a*b - a*c + 2*b*c)/(b + c - a)}, 
     "X6181" -> {b*c*(a*(b + c - a)*(a^4 - a^3*(b + c) - 
          a^2*(3*b^2 - 4*b*c + 3*c^2) + 3*a*(b - c)^2*(b + c) - 
          2*b*c*(b - c)^2))}, "X6182" -> 
      {Sin[angleB]*Cos[angleC]*Sec[angleC/2]^2 - Sin[angleC]*Cos[angleB]*
         Sec[angleB/2]^2}, "X6183" -> 
      {1/((b + c - a)*(b - c)*(a^3 - a^2*(b + c) + a*(b + c)^2 - 
          (b - c)^2*(b + c)))}, "X6184" -> {a*(b^2 + c^2 - a*b - a*c)^2}, 
     "X6185" -> {1/(a*(b^2 + c^2 - a*b - a*c)^2)}, 
     "X6186" -> {a^2/(1 + 2*Cos[angleA])}, 
     "X6187" -> {a^2/(1 - 2*Cos[angleA])}, 
     "X6188" -> {b*c*(1/(a^8 - 4*a^6*(b^2 + c^2) + (b^2 - c^2)^2*
           (b^4 + 6*b^2*c^2 + c^4) + a^4*(6*b^4 - 3*b^2*c^2 + 6*c^4) + 
          a^2*(-4*b^6 + 3*b^4*c^2 + 3*b^2*c^4 - 4*c^6)))}, 
     "X6189" -> {b*c*(SA^2 - SB*SC + Sqrt[-3*S^2 + SW^2]*SA)}, 
     "X6190" -> {b*c*(SA^2 - SB*SC - Sqrt[-3*S^2 + SW^2]*SA)}, 
     "X6191" -> {1/2 + Sin[angleA + Pi/6] - Sin[angleB + Pi/6] - 
        Sin[angleC + Pi/6]}, "X6192" -> {1/2 - Sin[angleA - Pi/6] + 
        Sin[angleB - Pi/6] + Sin[angleC - Pi/6]}, 
     "X6193" -> {b*c*((a^2 - b^2 - c^2)*(3*a^8 - 6*a^6*b^2 + 4*a^4*b^4 - 
          2*a^2*b^6 + b^8 - 6*a^6*c^2 + 2*a^2*b^4*c^2 - 4*b^6*c^2 + 
          4*a^4*c^4 + 2*a^2*b^2*c^4 + 6*b^4*c^4 - 2*a^2*c^6 - 4*b^2*c^6 + 
          c^8))}, "X6194" -> {b*c*(3*a^6*b^2 - 2*a^4*b^4 - a^2*b^6 + 
         3*a^6*c^2 + a^4*b^2*c^2 - 5*a^2*b^4*c^2 + b^6*c^2 - 2*a^4*c^4 - 
         5*a^2*b^2*c^4 - 2*b^4*c^4 - a^2*c^6 + b^2*c^6)}, 
     "X6195" -> {b*c*(a^2*(2*a^4*b^4 + a^4*b^2*c^2 + 4*a^2*b^4*c^2 + 
          2*a^4*c^4 + 4*a^2*b^2*c^4 - 4*b^4*c^4))}, 
     "X6196" -> {b*c*(a*(a^3*b^3 + a^2*b^2*c^2 + a^3*c^3 - b^3*c^3))}, 
     "X6197" -> {b*c*(a*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^5 + a^4*b - 2*a^3*b^2 - 2*a^2*b^3 + a*b^4 + b^5 + a^4*c - 
          a^3*b*c - a^2*b^2*c + a*b^3*c - 2*a^3*c^2 - a^2*b*c^2 - b^3*c^2 - 
          2*a^2*c^3 + a*b*c^3 - b^2*c^3 + a*c^4 + c^5))}, 
     "X6198" -> {b*c*(Tan[angleA] + 2*Sin[angleA])}, 
     "X6199" -> {b*c*(a^2*(3*a^2 - 3*b^2 - 3*c^2 - 8*S))}, 
     "X6200" -> {b*c*(a^2*(3*a^2 - 3*b^2 - 3*c^2 - 2*S))}, 
     "X6201" -> {b*c*(3*a^4*b^2 - 2*a^2*b^4 - b^6 + 3*a^4*c^2 + 
         4*a^2*b^2*c^2 + b^4*c^2 - 2*a^2*c^4 + b^2*c^4 - c^6 - 
         (-a^4 + b^4 - 2*b^2*c^2 + c^4)*S)}, 
     "X6202" -> {b*c*(3*a^4*b^2 - 2*a^2*b^4 - b^6 + 3*a^4*c^2 + 
         4*a^2*b^2*c^2 + b^4*c^2 - 2*a^2*c^4 + b^2*c^4 - c^6 + 
         (-a^4 + b^4 - 2*b^2*c^2 + c^4)*S)}, 
     "X6203" -> {b*c*(a*(a^3 + a^2*b - a*b^2 - b^3 + a^2*c + 2*a*b*c + 
          b^2*c - a*c^2 + b*c^2 - c^3 - (-2*a + 2*b + 2*c)*S))}, 
     "X6204" -> {b*c*(a*(a^3 + a^2*b - a*b^2 - b^3 + a^2*c + 2*a*b*c + 
          b^2*c - a*c^2 + b*c^2 - c^3 + (-2*a + 2*b + 2*c)*S))}, 
     "X6205" -> {b*c*(a*(a^3 + 2*a^2*b - 2*a*b^2 - b^3 + 2*a^2*c + 2*b^2*c - 
          2*a*c^2 + 2*b*c^2 - c^3))}, "X6206" -> 
      {2 - Sec[(angleA - 2*Pi)/3] + Sec[(angleB - 2*Pi)/3] + 
        Sec[(angleC - 2*Pi)/3]}, "X6207" -> 
      {2 - Sec[(angleA + 2*Pi)/3] + Sec[(angleB + 2*Pi)/3] + 
        Sec[(angleC + 2*Pi)/3]}, "X6208" -> 
      {1 + 2*(Cos[angleA/3 + Pi/3] - Cos[angleB/3 + Pi/3] - 
          Cos[angleC/3 + Pi/3])}, "X6209" -> 
      {1 + 2*(Cos[angleA/3 - Pi/3] - Cos[angleB/3 - Pi/3] - 
          Cos[angleC/3 - Pi/3])}, "X6210" -> 
      {b*c*(a*(a^4*b + a^3*b^2 - a^2*b^3 - a*b^4 + a^4*c - a^3*b*c - 
          a*b^3*c + b^4*c + a^3*c^2 - b^3*c^2 - a^2*c^3 - a*b*c^3 - b^2*c^3 - 
          a*c^4 + b*c^4))}, "X6211" -> 
      {b*c*(a*(a^5 - a^3*b^2 + a^2*b^3 - b^5 - a^3*b*c + 2*a^2*b^2*c - 
          a*b^3*c - a^3*c^2 + 2*a^2*b*c^2 - 2*a*b^2*c^2 + b^3*c^2 + a^2*c^3 - 
          a*b*c^3 + b^2*c^3 - c^5))}, "X6212" -> 
      {a^3 + a^2*b - a*b^2 - b^3 + a^2*c - 2*a*b*c + b^2*c - a*c^2 + b*c^2 - 
        c^3 - 2*(a - b - c)*S}, "X6213" -> 
      {a^3 + a^2*b - a*b^2 - b^3 + a^2*c - 2*a*b*c + b^2*c - a*c^2 + b*c^2 - 
        c^3 + 2*(a - b - c)*S}, "X6214" -> 
      {b*c*(a^6 - a^4*b^2 + a^2*b^4 - b^6 - a^4*c^2 + 2*a^2*b^2*c^2 + 
         b^4*c^2 + a^2*c^4 + b^2*c^4 - c^6 + (a^2*b^2 - b^4 + a^2*c^2 + 
           2*b^2*c^2 - c^4)*S)}, "X6215" -> 
      {b*c*(a^6 - a^4*b^2 + a^2*b^4 - b^6 - a^4*c^2 + 2*a^2*b^2*c^2 + 
         b^4*c^2 + a^2*c^4 + b^2*c^4 - c^6 - (a^2*b^2 - b^4 + a^2*c^2 + 
           2*b^2*c^2 - c^4)*S)}, "X6216" -> 
      {b*c*(a^2*((3*a^6 + 2*a^4*b^2 - 9*a^2*b^4 + 4*b^6 + 2*a^4*c^2 - 
           18*a^2*b^2*c^2 - 12*b^4*c^2 - 9*a^2*c^4 - 12*b^2*c^4 + 4*c^6) + 
          2*(4*a^4 - 5*a^2*b^2 - 3*b^4 - 5*a^2*c^2 - 14*b^2*c^2 - 3*c^4)*
           S))}, "X6217" -> {b*c*(a^8 - 18*a^6*b^2 + 18*a^2*b^6 - b^8 - 
         18*a^6*c^2 - 32*a^4*b^2*c^2 - 18*a^2*b^4*c^2 + 4*b^6*c^2 - 
         18*a^2*b^2*c^4 - 6*b^4*c^4 + 18*a^2*c^6 + 4*b^2*c^6 - c^8 - 
         4*(2*a^6 + 3*a^4*b^2 - 4*a^2*b^4 - b^6 + 3*a^4*c^2 + 8*a^2*b^2*c^2 + 
           b^4*c^2 - 4*a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6218" -> {b*c*(a^8 - 18*a^6*b^2 + 18*a^2*b^6 - b^8 - 18*a^6*c^2 - 
         32*a^4*b^2*c^2 - 18*a^2*b^4*c^2 + 4*b^6*c^2 - 18*a^2*b^2*c^4 - 
         6*b^4*c^4 + 18*a^2*c^6 + 4*b^2*c^6 - c^8 + 
         4*(2*a^6 + 3*a^4*b^2 - 4*a^2*b^4 - b^6 + 3*a^4*c^2 + 8*a^2*b^2*c^2 + 
           b^4*c^2 - 4*a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6219" -> {b*c*(a^8 - 6*a^6*b^2 + 6*a^2*b^6 - b^8 - 6*a^6*c^2 + 
         4*a^4*b^2*c^2 - 6*a^2*b^4*c^2 + 4*b^6*c^2 - 6*a^2*b^2*c^4 - 
         6*b^4*c^4 + 6*a^2*c^6 + 4*b^2*c^6 - c^8 - 
         4*(2*a^6 - a^2*b^4 - b^6 + 2*a^2*b^2*c^2 + b^4*c^2 - a^2*c^4 + 
           b^2*c^4 - c^6)*S)}, "X6220" -> 
      {b*c*(a^8 - 6*a^6*b^2 + 6*a^2*b^6 - b^8 - 6*a^6*c^2 + 4*a^4*b^2*c^2 - 
         6*a^2*b^4*c^2 + 4*b^6*c^2 - 6*a^2*b^2*c^4 - 6*b^4*c^4 + 6*a^2*c^6 + 
         4*b^2*c^6 - c^8 + 4*(2*a^6 - a^2*b^4 - b^6 + 2*a^2*b^2*c^2 + 
           b^4*c^2 - a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6221" -> {b*c*(a^2*(3*a^2 - 3*b^2 - 3*c^2 - 4*S))}, 
     "X6222" -> {b*c*(5*a^8 - 7*a^6*b^2 + 7*a^4*b^4 - 5*a^2*b^6 - 7*a^6*c^2 - 
         2*a^4*b^2*c^2 + 5*a^2*b^4*c^2 - 4*b^6*c^2 + 7*a^4*c^4 + 
         5*a^2*b^2*c^4 + 8*b^4*c^4 - 5*a^2*c^6 - 4*b^2*c^6 + 
         4*a^2*(a^2*b^2 - b^4 + a^2*c^2 - c^4)*S)}, 
     "X6223" -> {b*c*(a^7 + a^6*b - 3*a^5*b^2 - 3*a^4*b^3 + 3*a^3*b^4 + 
         3*a^2*b^5 - a*b^6 - b^7 + a^6*c + 10*a^5*b*c - a^4*b^2*c - 
         4*a^3*b^3*c - a^2*b^4*c - 6*a*b^5*c + b^6*c - 3*a^5*c^2 - 
         a^4*b*c^2 + 2*a^3*b^2*c^2 - 2*a^2*b^3*c^2 + a*b^4*c^2 + 3*b^5*c^2 - 
         3*a^4*c^3 - 4*a^3*b*c^3 - 2*a^2*b^2*c^3 + 12*a*b^3*c^3 - 3*b^4*c^3 + 
         3*a^3*c^4 - a^2*b*c^4 + a*b^2*c^4 - 3*b^3*c^4 + 3*a^2*c^5 - 
         6*a*b*c^5 + 3*b^2*c^5 - a*c^6 + b*c^6 - c^7)}, 
     "X6224" -> {b*c*(3*a^4 - 2*a^3*b - 2*a^2*b^2 + 2*a*b^3 - b^4 - 2*a^3*c + 
         3*a^2*b*c - a*b^2*c - 2*a^2*c^2 - a*b*c^2 + 2*b^2*c^2 + 2*a*c^3 - 
         c^4)}, "X6225" -> {b*c*(a^10 + 3*a^8*b^2 - 14*a^6*b^4 + 14*a^4*b^6 - 
         3*a^2*b^8 - b^10 + 3*a^8*c^2 + 20*a^6*b^2*c^2 - 14*a^4*b^4*c^2 - 
         12*a^2*b^6*c^2 + 3*b^8*c^2 - 14*a^6*c^4 - 14*a^4*b^2*c^4 + 
         30*a^2*b^4*c^4 - 2*b^6*c^4 + 14*a^4*c^6 - 12*a^2*b^2*c^6 - 
         2*b^4*c^6 - 3*a^2*c^8 + 3*b^2*c^8 - c^10)}, 
     "X6226" -> {b*c*(3*a^8*b^2 - 4*a^6*b^4 + 3*a^4*b^6 - 2*a^2*b^8 + 
         3*a^8*c^2 - 4*a^6*b^2*c^2 + 2*a^2*b^6*c^2 - b^8*c^2 - 4*a^6*c^4 + 
         b^6*c^4 + 3*a^4*c^6 + 2*a^2*b^2*c^6 + b^4*c^6 - 2*a^2*c^8 - 
         b^2*c^8 + (a^4 + b^4 - a^2*c^2 - b^2*c^2)*(a^4 - a^2*b^2 - b^2*c^2 + 
           c^4)*S)}, "X6227" -> {b*c*(3*a^8*b^2 - 4*a^6*b^4 + 3*a^4*b^6 - 
         2*a^2*b^8 + 3*a^8*c^2 - 4*a^6*b^2*c^2 + 2*a^2*b^6*c^2 - b^8*c^2 - 
         4*a^6*c^4 + b^6*c^4 + 3*a^4*c^6 + 2*a^2*b^2*c^6 + b^4*c^6 - 
         2*a^2*c^8 - b^2*c^8 - (a^4 + b^4 - a^2*c^2 - b^2*c^2)*
          (a^4 - a^2*b^2 - b^2*c^2 + c^4)*S)}, 
     "X6228" -> {b*c*(2*a^4*b^2 - 3*a^2*b^4 + b^6 + 2*a^4*c^2 - 
         4*a^2*b^2*c^2 - b^4*c^2 - 3*a^2*c^4 - b^2*c^4 + c^6 + 
         2*(a^4 - a^2*b^2 - b^4 - a^2*c^2 - c^4)*S)}, 
     "X6229" -> {b*c*(2*a^4*b^2 - 3*a^2*b^4 + b^6 + 2*a^4*c^2 - 
         4*a^2*b^2*c^2 - b^4*c^2 - 3*a^2*c^4 - b^2*c^4 + c^6 - 
         2*(a^4 - a^2*b^2 - b^4 - a^2*c^2 - c^4)*S)}, 
     "X6230" -> {b*c*(2*a^10 - 6*a^8*b^2 + 7*a^6*b^4 - 5*a^4*b^6 + 
         3*a^2*b^8 - b^10 - 6*a^8*c^2 + 4*a^6*b^2*c^2 + a^4*b^4*c^2 - 
         2*a^2*b^6*c^2 + 3*b^8*c^2 + 7*a^6*c^4 + a^4*b^2*c^4 - 
         2*a^2*b^4*c^4 - 2*b^6*c^4 - 5*a^4*c^6 - 2*a^2*b^2*c^6 - 2*b^4*c^6 + 
         3*a^2*c^8 + 3*b^2*c^8 - c^10 - 2*(a^2*b^2 - b^4 + a^2*c^2 - c^4)*
          (2*a^4 - a^2*b^2 + b^4 - a^2*c^2 - 2*b^2*c^2 + c^4)*S)}, 
     "X6231" -> {b*c*(2*a^10 - 6*a^8*b^2 + 7*a^6*b^4 - 5*a^4*b^6 + 
         3*a^2*b^8 - b^10 - 6*a^8*c^2 + 4*a^6*b^2*c^2 + a^4*b^4*c^2 - 
         2*a^2*b^6*c^2 + 3*b^8*c^2 + 7*a^6*c^4 + a^4*b^2*c^4 - 
         2*a^2*b^4*c^4 - 2*b^6*c^4 - 5*a^4*c^6 - 2*a^2*b^2*c^6 - 2*b^4*c^6 + 
         3*a^2*c^8 + 3*b^2*c^8 - c^10 + 2*(a^2*b^2 - b^4 + a^2*c^2 - c^4)*
          (2*a^4 - a^2*b^2 + b^4 - a^2*c^2 - 2*b^2*c^2 + c^4)*S)}, 
     "X6232" -> {b*c*(4*a^12 - 14*a^10*b^2 + 8*a^8*b^4 + 2*a^6*b^6 - 
         14*a^10*c^2 + 17*a^8*b^2*c^2 + 26*a^6*b^4*c^2 - a^4*b^6*c^2 - 
         16*a^2*b^8*c^2 + 4*b^10*c^2 + 8*a^8*c^4 + 26*a^6*b^2*c^4 + 
         18*a^4*b^4*c^4 + 16*a^2*b^6*c^4 - 12*b^8*c^4 + 2*a^6*c^6 - 
         a^4*b^2*c^6 + 16*a^2*b^4*c^6 + 16*b^6*c^6 - 16*a^2*b^2*c^8 - 
         12*b^4*c^8 + 4*b^2*c^10)}, "X6233" -> 
      {b*c*(a^2*(a - b)*(a + b)*(a - c)*(a + c)*(2*a^4 - 2*a^2*b^2 + 2*b^4 - 
          5*a^2*c^2 - 5*b^2*c^2 - c^4)*(2*a^4 - 5*a^2*b^2 - b^4 - 2*a^2*c^2 - 
          5*b^2*c^2 + 2*c^4))}, "X6234" -> 
      {b*c*(a^2*(-b^2 + a*c)*(b^2 + a*c)*(a*b - c^2)*(a*b + c^2)*
         (a^4*b^2 - a^2*b^4 + a^4*c^2 + a^2*b^2*c^2 + b^4*c^2 - a^2*c^4 + 
          b^2*c^4))}, "X6235" -> 
      {b*c*(a^2*(4*a^10*b^4 - 8*a^8*b^6 + 8*a^4*b^10 - 4*a^2*b^12 - 
          4*a^10*b^2*c^2 - 6*a^8*b^4*c^2 + 28*a^6*b^6*c^2 - 22*a^4*b^8*c^2 - 
          4*a^2*b^10*c^2 + 8*b^12*c^2 + 4*a^10*c^4 - 6*a^8*b^2*c^4 - 
          23*a^6*b^4*c^4 + 42*a^4*b^6*c^4 + 31*a^2*b^8*c^4 - 32*b^10*c^4 - 
          8*a^8*c^6 + 28*a^6*b^2*c^6 + 42*a^4*b^4*c^6 - 30*a^2*b^6*c^6 + 
          24*b^8*c^6 - 22*a^4*b^2*c^8 + 31*a^2*b^4*c^8 + 24*b^6*c^8 + 
          8*a^4*c^10 - 4*a^2*b^2*c^10 - 32*b^4*c^10 - 4*a^2*c^12 + 
          8*b^2*c^12))}, "X6236" -> {b*c*((a - b)*(a + b)*(a - c)*(a + c)*
         (2*a^6 - 2*a^4*b^2 - 2*a^2*b^4 + 2*b^6 - 5*a^4*c^2 + 3*a^2*b^2*c^2 - 
          2*b^4*c^2 - 5*a^2*c^4 - 2*b^2*c^4 + 2*c^6)*(2*a^6 - 5*a^4*b^2 - 
          5*a^2*b^4 + 2*b^6 - 2*a^4*c^2 + 3*a^2*b^2*c^2 - 2*b^4*c^2 - 
          2*a^2*c^4 - 2*b^2*c^4 + 2*c^6))}, 
     "X6237" -> {b*c*(a^2*(a^2 - b^2 - c^2)*(a^7*b^2 - a^6*b^3 - 3*a^5*b^4 + 
          3*a^4*b^5 + 3*a^3*b^6 - 3*a^2*b^7 - a*b^8 + b^9 + a^7*b*c - 
          3*a^5*b^3*c + 3*a^3*b^5*c - a*b^7*c + a^7*c^2 - 2*a^5*b^2*c^2 - 
          a^4*b^3*c^2 - a^3*b^4*c^2 + 4*a^2*b^5*c^2 + 2*a*b^6*c^2 - 
          3*b^7*c^2 - a^6*c^3 - 3*a^5*b*c^3 - a^4*b^2*c^3 - 2*a^3*b^3*c^3 - 
          a^2*b^4*c^3 + a*b^5*c^3 - b^6*c^3 - 3*a^5*c^4 - a^3*b^2*c^4 - 
          a^2*b^3*c^4 - 2*a*b^4*c^4 + 3*b^5*c^4 + 3*a^4*c^5 + 3*a^3*b*c^5 + 
          4*a^2*b^2*c^5 + a*b^3*c^5 + 3*b^4*c^5 + 3*a^3*c^6 + 2*a*b^2*c^6 - 
          b^3*c^6 - 3*a^2*c^7 - a*b*c^7 - 3*b^2*c^7 - a*c^8 + c^9))}, 
     "X6238" -> {b*c*(a^2*(a^2 - b^2 - c^2)*(a^4*b^2 - 2*a^2*b^4 + b^6 - 
          a^4*b*c + b^5*c + a^4*c^2 + 2*a^2*b^2*c^2 - b^4*c^2 - 2*b^3*c^3 - 
          2*a^2*c^4 - b^2*c^4 + b*c^5 + c^6))}, 
     "X6239" -> {b*c*(a^2*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^4*b^2 - 2*a^2*b^4 + b^6 + a^4*c^2 - 3*a^2*b^2*c^2 - 2*a^2*c^4 + 
          c^6 - 4*b^2*c^2*S))}, "X6240" -> 
      {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(2*a^6 - 3*a^4*b^2 + b^6 - 
          3*a^4*c^2 + 2*a^2*b^2*c^2 - b^4*c^2 - b^2*c^4 + c^6))}, 
     "X6241" -> {b*c*(a^2*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 + a^6*c^2 + 
          3*a^4*b^2*c^2 - 3*a^2*b^4*c^2 - b^6*c^2 - 3*a^4*c^4 - 
          3*a^2*b^2*c^4 + 4*b^4*c^4 + 3*a^2*c^6 - b^2*c^6 - c^8))}, 
     "X6242" -> {b*c*(a^2*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^8*b^2 - 4*a^6*b^4 + 6*a^4*b^6 - 4*a^2*b^8 + b^10 + a^8*c^2 - 
          5*a^6*b^2*c^2 + 6*a^4*b^4*c^2 - a^2*b^6*c^2 - b^8*c^2 - 4*a^6*c^4 + 
          6*a^4*b^2*c^4 + a^2*b^4*c^4 + 6*a^4*c^6 - a^2*b^2*c^6 - 4*a^2*c^8 - 
          b^2*c^8 + c^10))}, "X6243" -> 
      {a*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 + a^6*c^2 - 3*a^4*b^2*c^2 + 
         2*b^6*c^2 - 3*a^4*c^4 - 2*b^4*c^4 + 3*a^2*c^6 + 2*b^2*c^6 - c^8)}, 
     "X6244" -> {b*c*(a^2*(a^4 - 2*a^3*b + 2*a*b^3 - b^4 - 2*a^3*c + 
          10*a^2*b*c - 6*a*b^2*c - 2*b^3*c - 6*a*b*c^2 + 6*b^2*c^2 + 
          2*a*c^3 - 2*b*c^3 - c^4))}, "X6245" -> 
      {b*c*(a^6*b - 2*a^5*b^2 - a^4*b^3 + 4*a^3*b^4 - a^2*b^5 - 2*a*b^6 + 
         b^7 + a^6*c + 4*a^5*b*c + a^4*b^2*c - 4*a^3*b^3*c - a^2*b^4*c - 
         b^6*c - 2*a^5*c^2 + a^4*b*c^2 + 2*a^2*b^3*c^2 + 2*a*b^4*c^2 - 
         3*b^5*c^2 - a^4*c^3 - 4*a^3*b*c^3 + 2*a^2*b^2*c^3 + 3*b^4*c^3 + 
         4*a^3*c^4 - a^2*b*c^4 + 2*a*b^2*c^4 + 3*b^3*c^4 - a^2*c^5 - 
         3*b^2*c^5 - 2*a*c^6 - b*c^6 + c^7)}, 
     "X6246" -> {b*c*(2*a^7 - 3*a^6*b - a^5*b^2 + 4*a^4*b^3 - 4*a^3*b^4 + 
         a^2*b^5 + 3*a*b^6 - 2*b^7 - 3*a^6*c + 8*a^5*b*c - 5*a^4*b^2*c - 
         a^3*b^3*c + 6*a^2*b^4*c - 7*a*b^5*c + 2*b^6*c - a^5*c^2 - 
         5*a^4*b*c^2 + 10*a^3*b^2*c^2 - 7*a^2*b^3*c^2 - 3*a*b^4*c^2 + 
         6*b^5*c^2 + 4*a^4*c^3 - a^3*b*c^3 - 7*a^2*b^2*c^3 + 14*a*b^3*c^3 - 
         6*b^4*c^3 - 4*a^3*c^4 + 6*a^2*b*c^4 - 3*a*b^2*c^4 - 6*b^3*c^4 + 
         a^2*c^5 - 7*a*b*c^5 + 6*b^2*c^5 + 3*a*c^6 + 2*b*c^6 - 2*c^7)}, 
     "X6247" -> {b*c*(a^8*b^2 - 4*a^6*b^4 + 6*a^4*b^6 - 4*a^2*b^8 + b^10 + 
         a^8*c^2 + 8*a^6*b^2*c^2 - 6*a^4*b^4*c^2 - 3*b^8*c^2 - 4*a^6*c^4 - 
         6*a^4*b^2*c^4 + 8*a^2*b^4*c^4 + 2*b^6*c^4 + 6*a^4*c^6 + 2*b^4*c^6 - 
         4*a^2*c^8 - 3*b^2*c^8 + c^10)}, "X6248" -> 
      {b*c*(a^6*b^2 - a^2*b^6 + a^6*c^2 + 3*a^2*b^4*c^2 - 2*b^6*c^2 + 
         3*a^2*b^2*c^4 + 4*b^4*c^4 - a^2*c^6 - 2*b^2*c^6)}, 
     "X6249" -> {b*c*(4*a^6*b^2 + a^4*b^4 - 4*a^2*b^6 - b^8 + 4*a^6*c^2 + 
         10*a^4*b^2*c^2 + 6*a^2*b^4*c^2 - 2*b^6*c^2 + a^4*c^4 + 
         6*a^2*b^2*c^4 + 6*b^4*c^4 - 4*a^2*c^6 - 2*b^2*c^6 - c^8)}, 
     "X6250" -> {b*c*(2*a^8 - 3*a^6*b^2 - 3*a^4*b^4 + 7*a^2*b^6 - 3*b^8 - 
         3*a^6*c^2 - 2*a^4*b^2*c^2 - 7*a^2*b^4*c^2 + 12*b^6*c^2 - 3*a^4*c^4 - 
         7*a^2*b^2*c^4 - 18*b^4*c^4 + 7*a^2*c^6 + 12*b^2*c^6 - 3*c^8 - 
         2*(3*a^4*b^2 - 2*a^2*b^4 - b^6 + 3*a^4*c^2 + 4*a^2*b^2*c^2 + 
           b^4*c^2 - 2*a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6251" -> {b*c*(2*a^8 - 3*a^6*b^2 - 3*a^4*b^4 + 7*a^2*b^6 - 3*b^8 - 
         3*a^6*c^2 - 2*a^4*b^2*c^2 - 7*a^2*b^4*c^2 + 12*b^6*c^2 - 3*a^4*c^4 - 
         7*a^2*b^2*c^4 - 18*b^4*c^4 + 7*a^2*c^6 + 12*b^2*c^6 - 3*c^8 + 
         2*(3*a^4*b^2 - 2*a^2*b^4 - b^6 + 3*a^4*c^2 + 4*a^2*b^2*c^2 + 
           b^4*c^2 - 2*a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6252" -> {b*c*(a^2*(a - b - c)*(a + b - c)*(a - b + c)*(a + b + c)*
          (a*b^2 - b^3 + a*b*c + a*c^2 - c^3) + 4*a^2*b*c*
          (a^3 + a^2*b - a*b^2 - b^3 + a^2*c - 2*a*b*c + b^2*c - a*c^2 + 
           b*c^2 - c^3)*S)}, "X6253" -> 
      {b*c*(2*a^7 - 2*a^6*b - 3*a^5*b^2 + 3*a^4*b^3 + a*b^6 - b^7 - 2*a^6*c - 
         2*a^5*b*c + a^4*b^2*c + 2*a*b^5*c + b^6*c - 3*a^5*c^2 + a^4*b*c^2 - 
         a*b^4*c^2 + 3*b^5*c^2 + 3*a^4*c^3 - 4*a*b^3*c^3 - 3*b^4*c^3 - 
         a*b^2*c^4 - 3*b^3*c^4 + 2*a*b*c^5 + 3*b^2*c^5 + a*c^6 + b*c^6 - 
         c^7)}, "X6254" -> {b*c*(a^2*(a^9*b^2 - a^8*b^3 - 4*a^7*b^4 + 
          4*a^6*b^5 + 6*a^5*b^6 - 6*a^4*b^7 - 4*a^3*b^8 + 4*a^2*b^9 + 
          a*b^10 - b^11 + a^9*b*c - 4*a^7*b^3*c + 6*a^5*b^5*c - 4*a^3*b^7*c + 
          a*b^9*c + a^9*c^2 - 4*a^6*b^3*c^2 - 2*a^5*b^4*c^2 + 8*a^4*b^5*c^2 - 
          4*a^2*b^7*c^2 + a*b^8*c^2 - a^8*c^3 - 4*a^7*b*c^3 - 4*a^6*b^2*c^3 - 
          4*a^5*b^3*c^3 - 2*a^4*b^4*c^3 + 4*a^3*b^5*c^3 + 4*a^2*b^6*c^3 + 
          4*a*b^7*c^3 + 3*b^8*c^3 - 4*a^7*c^4 - 2*a^5*b^2*c^4 - 
          2*a^4*b^3*c^4 + 8*a^3*b^4*c^4 - 4*a^2*b^5*c^4 - 2*a*b^6*c^4 + 
          6*b^7*c^4 + 4*a^6*c^5 + 6*a^5*b*c^5 + 8*a^4*b^2*c^5 + 
          4*a^3*b^3*c^5 - 4*a^2*b^4*c^5 - 10*a*b^5*c^5 - 8*b^6*c^5 + 
          6*a^5*c^6 + 4*a^2*b^3*c^6 - 2*a*b^4*c^6 - 8*b^5*c^6 - 6*a^4*c^7 - 
          4*a^3*b*c^7 - 4*a^2*b^2*c^7 + 4*a*b^3*c^7 + 6*b^4*c^7 - 4*a^3*c^8 + 
          a*b^2*c^8 + 3*b^3*c^8 + 4*a^2*c^9 + a*b*c^9 + a*c^10 - c^11))}, 
     "X6255" -> {b*c*(a^2*(a^9*b^2 - a^8*b^3 - 4*a^7*b^4 + 4*a^6*b^5 + 
          6*a^5*b^6 - 6*a^4*b^7 - 4*a^3*b^8 + 4*a^2*b^9 + a*b^10 - b^11 + 
          a^9*b*c - 4*a^7*b^3*c + 6*a^5*b^5*c - 4*a^3*b^7*c + a*b^9*c + 
          a^9*c^2 - 6*a^7*b^2*c^2 + 2*a^6*b^3*c^2 + 7*a^5*b^4*c^2 - 
          a^4*b^5*c^2 - 4*a^2*b^7*c^2 - 2*a*b^8*c^2 + 3*b^9*c^2 - a^8*c^3 - 
          4*a^7*b*c^3 + 2*a^6*b^2*c^3 + 5*a^5*b^3*c^3 - 2*a^4*b^4*c^3 + 
          a^3*b^5*c^3 + a^2*b^6*c^3 - 2*a*b^7*c^3 - 4*a^7*c^4 + 
          7*a^5*b^2*c^4 - 2*a^4*b^3*c^4 + 2*a^3*b^4*c^4 - a^2*b^5*c^4 + 
          a*b^6*c^4 - 3*b^7*c^4 + 4*a^6*c^5 + 6*a^5*b*c^5 - a^4*b^2*c^5 + 
          a^3*b^3*c^5 - a^2*b^4*c^5 + 2*a*b^5*c^5 + b^6*c^5 + 6*a^5*c^6 + 
          a^2*b^3*c^6 + a*b^4*c^6 + b^5*c^6 - 6*a^4*c^7 - 4*a^3*b*c^7 - 
          4*a^2*b^2*c^7 - 2*a*b^3*c^7 - 3*b^4*c^7 - 4*a^3*c^8 - 2*a*b^2*c^8 + 
          4*a^2*c^9 + a*b*c^9 + 3*b^2*c^9 + a*c^10 - c^11))}, 
     "X6256" -> {b*c*(a^7 - a^6*b - a^5*b^2 + a^4*b^3 - a^3*b^4 + a^2*b^5 + 
         a*b^6 - b^7 - a^6*c + 6*a^5*b*c - 3*a^4*b^2*c - 2*a^3*b^3*c + 
         3*a^2*b^4*c - 4*a*b^5*c + b^6*c - a^5*c^2 - 3*a^4*b*c^2 + 
         6*a^3*b^2*c^2 - 4*a^2*b^3*c^2 - a*b^4*c^2 + 3*b^5*c^2 + a^4*c^3 - 
         2*a^3*b*c^3 - 4*a^2*b^2*c^3 + 8*a*b^3*c^3 - 3*b^4*c^3 - a^3*c^4 + 
         3*a^2*b*c^4 - a*b^2*c^4 - 3*b^3*c^4 + a^2*c^5 - 4*a*b*c^5 + 
         3*b^2*c^5 + a*c^6 + b*c^6 - c^7)}, 
     "X6257" -> {b*c*(a*(a^7*b + a^6*b^2 - 3*a^5*b^3 - 3*a^4*b^4 + 
           3*a^3*b^5 + 3*a^2*b^6 - a*b^7 - b^8 + a^7*c + 4*a^6*b*c - 
           a^5*b^2*c + 6*a^4*b^3*c - a^3*b^4*c - 8*a^2*b^5*c + a*b^6*c - 
           2*b^7*c + a^6*c^2 - a^5*b*c^2 - 6*a^4*b^2*c^2 - 2*a^3*b^3*c^2 + 
           5*a^2*b^4*c^2 + 3*a*b^5*c^2 - 3*a^5*c^3 + 6*a^4*b*c^3 - 
           2*a^3*b^2*c^3 - 3*a*b^4*c^3 + 2*b^5*c^3 - 3*a^4*c^4 - a^3*b*c^4 + 
           5*a^2*b^2*c^4 - 3*a*b^3*c^4 + 2*b^4*c^4 + 3*a^3*c^5 - 
           8*a^2*b*c^5 + 3*a*b^2*c^5 + 2*b^3*c^5 + 3*a^2*c^6 + a*b*c^6 - 
           a*c^7 - 2*b*c^7 - c^8) + a*(a^3 - a^2*b - a*b^2 + b^3 + a^2*c + 
           2*a*b*c + b^2*c - a*c^2 - b*c^2 - c^3)*(a^3 + a^2*b - a*b^2 - 
           b^3 - a^2*c + 2*a*b*c - b^2*c - a*c^2 + b*c^2 + c^3)*S)}, 
     "X6258" -> {b*c*(a*(a^7*b + a^6*b^2 - 3*a^5*b^3 - 3*a^4*b^4 + 
           3*a^3*b^5 + 3*a^2*b^6 - a*b^7 - b^8 + a^7*c + 4*a^6*b*c - 
           a^5*b^2*c + 6*a^4*b^3*c - a^3*b^4*c - 8*a^2*b^5*c + a*b^6*c - 
           2*b^7*c + a^6*c^2 - a^5*b*c^2 - 6*a^4*b^2*c^2 - 2*a^3*b^3*c^2 + 
           5*a^2*b^4*c^2 + 3*a*b^5*c^2 - 3*a^5*c^3 + 6*a^4*b*c^3 - 
           2*a^3*b^2*c^3 - 3*a*b^4*c^3 + 2*b^5*c^3 - 3*a^4*c^4 - a^3*b*c^4 + 
           5*a^2*b^2*c^4 - 3*a*b^3*c^4 + 2*b^4*c^4 + 3*a^3*c^5 - 
           8*a^2*b*c^5 + 3*a*b^2*c^5 + 2*b^3*c^5 + 3*a^2*c^6 + a*b*c^6 - 
           a*c^7 - 2*b*c^7 - c^8) - a*(a^3 - a^2*b - a*b^2 + b^3 + a^2*c + 
           2*a*b*c + b^2*c - a*c^2 - b*c^2 - c^3)*(a^3 + a^2*b - a*b^2 - 
           b^3 - a^2*c + 2*a*b*c - b^2*c - a*c^2 + b*c^2 + c^3)*S)}, 
     "X6259" -> {b*c*(a^7 - 2*a^5*b^2 - a^4*b^3 + a^3*b^4 + 2*a^2*b^5 - b^7 + 
         6*a^5*b*c - a^4*b^2*c - 2*a^3*b^3*c - 4*a*b^5*c + b^6*c - 
         2*a^5*c^2 - a^4*b*c^2 + 2*a^3*b^2*c^2 - 2*a^2*b^3*c^2 + 3*b^5*c^2 - 
         a^4*c^3 - 2*a^3*b*c^3 - 2*a^2*b^2*c^3 + 8*a*b^3*c^3 - 3*b^4*c^3 + 
         a^3*c^4 - 3*b^3*c^4 + 2*a^2*c^5 - 4*a*b*c^5 + 3*b^2*c^5 + b*c^6 - 
         c^7)}, "X6260" -> {b*c*((a^3 + a^2*b - a*b^2 - b^3 + a^2*c - 
          2*a*b*c + b^2*c - a*c^2 + b*c^2 - c^3)*(a^3*b - a^2*b^2 - a*b^3 + 
          b^4 + a^3*c + 2*a^2*b*c + a*b^2*c - a^2*c^2 + a*b*c^2 - 2*b^2*c^2 - 
          a*c^3 + c^4))}, "X6261" -> 
      {b*c*(a*(a^6 - 2*a^5*b - a^4*b^2 + 4*a^3*b^3 - a^2*b^4 - 2*a*b^5 + 
          b^6 - 2*a^5*c + 2*a^4*b*c - 2*a^3*b^2*c - 2*a^2*b^3*c + 4*a*b^4*c - 
          a^4*c^2 - 2*a^3*b*c^2 + 6*a^2*b^2*c^2 - 2*a*b^3*c^2 - b^4*c^2 + 
          4*a^3*c^3 - 2*a^2*b*c^3 - 2*a*b^2*c^3 - a^2*c^4 + 4*a*b*c^4 - 
          b^2*c^4 - 2*a*c^5 + c^6))}, "X6262" -> 
      {b*c*(2*a^6 - a^5*b - a^4*b^2 + a*b^5 - b^6 - a^5*c + 2*a^4*b*c - 
         a^3*b^2*c + a^2*b^3*c - a*b^4*c - a^4*c^2 - a^3*b*c^2 + b^4*c^2 + 
         a^2*b*c^3 - a*b*c^4 + b^2*c^4 + a*c^5 - c^6 + 
         (a^2 - a*b + b^2 - c^2)*(a^2 - b^2 - a*c + c^2)*S)}, 
     "X6263" -> {b*c*(2*a^6 - a^5*b - a^4*b^2 + a*b^5 - b^6 - a^5*c + 
         2*a^4*b*c - a^3*b^2*c + a^2*b^3*c - a*b^4*c - a^4*c^2 - a^3*b*c^2 + 
         b^4*c^2 + a^2*b*c^3 - a*b*c^4 + b^2*c^4 + a*c^5 - c^6 - 
         (a^2 - a*b + b^2 - c^2)*(a^2 - b^2 - a*c + c^2)*S)}, 
     "X6264" -> {b*c*(a*(a^6 - 2*a^5*b - a^4*b^2 + 4*a^3*b^3 - a^2*b^4 - 
          2*a*b^5 + b^6 - 2*a^5*c + 11*a^4*b*c - 9*a^3*b^2*c - 7*a^2*b^3*c + 
          11*a*b^4*c - 4*b^5*c - a^4*c^2 - 9*a^3*b*c^2 + 20*a^2*b^2*c^2 - 
          9*a*b^3*c^2 - b^4*c^2 + 4*a^3*c^3 - 7*a^2*b*c^3 - 9*a*b^2*c^3 + 
          8*b^3*c^3 - a^2*c^4 + 11*a*b*c^4 - b^2*c^4 - 2*a*c^5 - 4*b*c^5 + 
          c^6))}, "X6265" -> {b*c*(a*(a^6 - 2*a^5*b - a^4*b^2 + 4*a^3*b^3 - 
          a^2*b^4 - 2*a*b^5 + b^6 - 2*a^5*c + 5*a^4*b*c - 3*a^3*b^2*c - 
          4*a^2*b^3*c + 5*a*b^4*c - b^5*c - a^4*c^2 - 3*a^3*b*c^2 + 
          8*a^2*b^2*c^2 - 3*a*b^3*c^2 - b^4*c^2 + 4*a^3*c^3 - 4*a^2*b*c^3 - 
          3*a*b^2*c^3 + 2*b^3*c^3 - a^2*c^4 + 5*a*b*c^4 - b^2*c^4 - 2*a*c^5 - 
          b*c^5 + c^6))}, "X6266" -> 
      {b*c*(4*a^2*(a^8*b^2 - 2*a^6*b^4 + 2*a^2*b^8 - b^10 + a^8*c^2 + 
           2*a^6*b^2*c^2 - 2*a^2*b^6*c^2 - b^8*c^2 - 2*a^6*c^4 + 2*b^6*c^4 - 
           2*a^2*b^2*c^6 + 2*b^4*c^6 + 2*a^2*c^8 - b^2*c^8 - c^10) + 
         a^2*(a^4 - 2*a^2*b^2 + b^4 + 2*a^2*c^2 + 2*b^2*c^2 - 3*c^4)*
          (a^4 + 2*a^2*b^2 - 3*b^4 - 2*a^2*c^2 + 2*b^2*c^2 + c^4)*S)}, 
     "X6267" -> {b*c*(4*a^2*(a^8*b^2 - 2*a^6*b^4 + 2*a^2*b^8 - b^10 + 
           a^8*c^2 + 2*a^6*b^2*c^2 - 2*a^2*b^6*c^2 - b^8*c^2 - 2*a^6*c^4 + 
           2*b^6*c^4 - 2*a^2*b^2*c^6 + 2*b^4*c^6 + 2*a^2*c^8 - b^2*c^8 - 
           c^10) - a^2*(a^4 - 2*a^2*b^2 + b^4 + 2*a^2*c^2 + 2*b^2*c^2 - 
           3*c^4)*(a^4 + 2*a^2*b^2 - 3*b^4 - 2*a^2*c^2 + 2*b^2*c^2 + c^4)*
          S)}, "X6268" -> {b*c*(2*(2*a^6 - 2*a^4*b^2 + a^2*b^4 - b^6 - 
           2*a^4*c^2 + b^4*c^2 + a^2*c^4 + b^2*c^4 - c^6) + 
         2*Sqrt[3]*a^2*S^2 + (a^4 + a^2*b^2 - 2*b^4 + a^2*c^2 + 4*b^2*c^2 - 
           2*c^4)*S)}, "X6269" -> 
      {b*c*(2*(2*a^6 - 2*a^4*b^2 + a^2*b^4 - b^6 - 2*a^4*c^2 + b^4*c^2 + 
           a^2*c^4 + b^2*c^4 - c^6) + (a^4 + a^2*b^2 - 2*b^4 + a^2*c^2 + 
           4*b^2*c^2 - 2*c^4)*S - 2*Sqrt[3]*a^2*S^2)}, 
     "X6270" -> {b*c*(2*(2*a^6 - 2*a^4*b^2 + a^2*b^4 - b^6 - 2*a^4*c^2 + 
           b^4*c^2 + a^2*c^4 + b^2*c^4 - c^6) - 
         (a^4 + a^2*b^2 - 2*b^4 + a^2*c^2 + 4*b^2*c^2 - 2*c^4)*S - 
         2*Sqrt[3]*a^2*S^2)}, "X6271" -> 
      {b*c*(2*(2*a^6 - 2*a^4*b^2 + a^2*b^4 - b^6 - 2*a^4*c^2 + b^4*c^2 + 
           a^2*c^4 + b^2*c^4 - c^6) - (a^4 + a^2*b^2 - 2*b^4 + a^2*c^2 + 
           4*b^2*c^2 - 2*c^4)*S + 2*Sqrt[3]*a^2*S^2)}, 
     "X6272" -> {b*c*(a^4*b^2 + a^4*c^2 - b^4*c^2 - b^2*c^4 - b^2*c^2*S)}, 
     "X6273" -> {b*c*(a^4*b^2 + a^4*c^2 - b^4*c^2 - b^2*c^4 + b^2*c^2*S)}, 
     "X6274" -> {b*c*(a^4*b^2 + a^4*c^2 - b^4*c^2 - b^2*c^4 - 
         (a^2 + b^2)*(a^2 + c^2)*S)}, "X6275" -> 
      {b*c*(a^4*b^2 + a^4*c^2 - b^4*c^2 - b^2*c^4 + (a^2 + b^2)*(a^2 + c^2)*
          S)}, "X6276" -> {b*c*(a^2*(a^8*b^2 - 2*a^6*b^4 + 2*a^2*b^8 - b^10 + 
           a^8*c^2 - 4*a^6*b^2*c^2 + 3*a^4*b^4*c^2 - 2*a^2*b^6*c^2 + 
           2*b^8*c^2 - 2*a^6*c^4 + 3*a^4*b^2*c^4 - b^6*c^4 - 2*a^2*b^2*c^6 - 
           b^4*c^6 + 2*a^2*c^8 + 2*b^2*c^8 - c^10) + 
         a^2*(a^4 - 2*a^2*b^2 + b^4 - a^2*c^2 - b^2*c^2)*
          (a^4 - a^2*b^2 - 2*a^2*c^2 - b^2*c^2 + c^4)*S)}, 
     "X6277" -> {b*c*(a^2*(a^8*b^2 - 2*a^6*b^4 + 2*a^2*b^8 - b^10 + a^8*c^2 - 
           4*a^6*b^2*c^2 + 3*a^4*b^4*c^2 - 2*a^2*b^6*c^2 + 2*b^8*c^2 - 
           2*a^6*c^4 + 3*a^4*b^2*c^4 - b^6*c^4 - 2*a^2*b^2*c^6 - b^4*c^6 + 
           2*a^2*c^8 + 2*b^2*c^8 - c^10) - a^2*(a^4 - 2*a^2*b^2 + b^4 - 
           a^2*c^2 - b^2*c^2)*(a^4 - a^2*b^2 - 2*a^2*c^2 - b^2*c^2 + c^4)*
          S)}, "X6278" -> {b*c*(3*a^6 - 4*a^4*b^2 + 3*a^2*b^4 - 2*b^6 - 
         4*a^4*c^2 + 2*a^2*b^2*c^2 + 2*b^4*c^2 + 3*a^2*c^4 + 2*b^2*c^4 - 
         2*c^6 + 2*(a^2*b^2 - b^4 + a^2*c^2 + 2*b^2*c^2 - c^4)*S)}, 
     "X6279" -> {b*c*(5*a^6 - 8*a^4*b^2 + 5*a^2*b^4 - 2*b^6 - 8*a^4*c^2 - 
         2*a^2*b^2*c^2 + 2*b^4*c^2 + 5*a^2*c^4 + 2*b^2*c^4 - 2*c^6 - 
         2*(a^2*b^2 - b^4 + a^2*c^2 + 2*b^2*c^2 - c^4)*S)}, 
     "X6280" -> {b*c*(5*a^6 - 8*a^4*b^2 + 5*a^2*b^4 - 2*b^6 - 8*a^4*c^2 - 
         2*a^2*b^2*c^2 + 2*b^4*c^2 + 5*a^2*c^4 + 2*b^2*c^4 - 2*c^6 + 
         2*(a^2*b^2 - b^4 + a^2*c^2 + 2*b^2*c^2 - c^4)*S)}, 
     "X6281" -> {b*c*(3*a^6 - 4*a^4*b^2 + 3*a^2*b^4 - 2*b^6 - 4*a^4*c^2 + 
         2*a^2*b^2*c^2 + 2*b^4*c^2 + 3*a^2*c^4 + 2*b^2*c^4 - 2*c^6 - 
         2*(a^2*b^2 - b^4 + a^2*c^2 + 2*b^2*c^2 - c^4)*S)}, 
     "X6282" -> {b*c*(a*(a^6 - 2*a^5*b - a^4*b^2 + 4*a^3*b^3 - a^2*b^4 - 
          2*a*b^5 + b^6 - 2*a^5*c + 10*a^4*b*c - 8*a^2*b^3*c + 2*a*b^4*c - 
          2*b^5*c - a^4*c^2 + 2*a^2*b^2*c^2 - b^4*c^2 + 4*a^3*c^3 - 
          8*a^2*b*c^3 + 4*b^3*c^3 - a^2*c^4 + 2*a*b*c^4 - b^2*c^4 - 2*a*c^5 - 
          2*b*c^5 + c^6))}, "X6283" -> 
      {b*c*(a^2*(a - b - c)*(a + b + c)*(b^2 - b*c + c^2) - 4*a^2*b*c*S)}, 
     "X6284" -> {b*c*(2*a^4 - a^2*b^2 - b^4 - 2*a^2*b*c - a^2*c^2 + 
         2*b^2*c^2 - c^4)}, "X6285" -> 
      {b*c*(a^2*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 - a^6*b*c + 
          a^4*b^3*c + a^2*b^5*c - b^7*c + a^6*c^2 + 4*a^4*b^2*c^2 - 
          3*a^2*b^4*c^2 - 2*b^6*c^2 + a^4*b*c^3 - 2*a^2*b^3*c^3 + b^5*c^3 - 
          3*a^4*c^4 - 3*a^2*b^2*c^4 + 6*b^4*c^4 + a^2*b*c^5 + b^3*c^5 + 
          3*a^2*c^6 - 2*b^2*c^6 - b*c^7 - c^8))}, 
     "X6286" -> {b*c*(a^2*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 - a^6*b*c + 
          a^4*b^3*c + a^2*b^5*c - b^7*c + a^6*c^2 - 2*a^4*b^2*c^2 + b^6*c^2 + 
          a^4*b*c^3 + a^2*b^3*c^3 + b^5*c^3 - 3*a^4*c^4 + a^2*b*c^5 + 
          b^3*c^5 + 3*a^2*c^6 + b^2*c^6 - b*c^7 - c^8))}, 
     "X6287" -> {b*c*(a^8 + a^4*b^4 - a^2*b^6 - b^8 + 3*a^4*b^2*c^2 + 
         4*a^2*b^4*c^2 + a^4*c^4 + 4*a^2*b^2*c^4 + 2*b^4*c^4 - a^2*c^6 - 
         c^8)}, "X6288" -> {b*c*(a^10 - 2*a^8*b^2 + a^6*b^4 - a^4*b^6 + 
         2*a^2*b^8 - b^10 - 2*a^8*c^2 + 3*a^6*b^2*c^2 - 2*a^4*b^4*c^2 - 
         2*a^2*b^6*c^2 + 3*b^8*c^2 + a^6*c^4 - 2*a^4*b^2*c^4 - 2*b^6*c^4 - 
         a^4*c^6 - 2*a^2*b^2*c^6 - 2*b^4*c^6 + 2*a^2*c^8 + 3*b^2*c^8 - 
         c^10)}, "X6289" -> {b*c*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 + 
         a^6*c^2 - 2*a^4*b^2*c^2 - 3*a^2*b^4*c^2 + 4*b^6*c^2 - 3*a^4*c^4 - 
         3*a^2*b^2*c^4 - 6*b^4*c^4 + 3*a^2*c^6 + 4*b^2*c^6 - c^8 - 
         2*(a^6 - a^4*b^2 + a^2*b^4 - b^6 - a^4*c^2 + 2*a^2*b^2*c^2 + 
           b^4*c^2 + a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6290" -> {b*c*(a^6*b^2 - 3*a^4*b^4 + 3*a^2*b^6 - b^8 + a^6*c^2 - 
         2*a^4*b^2*c^2 - 3*a^2*b^4*c^2 + 4*b^6*c^2 - 3*a^4*c^4 - 
         3*a^2*b^2*c^4 - 6*b^4*c^4 + 3*a^2*c^6 + 4*b^2*c^6 - c^8 + 
         2*(a^6 - a^4*b^2 + a^2*b^4 - b^6 - a^4*c^2 + 2*a^2*b^2*c^2 + 
           b^4*c^2 + a^2*c^4 + b^2*c^4 - c^6)*S)}, 
     "X6291" -> {a*(a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*(2*b^2*c^2 + b^2*S + 
         c^2*S)}, "X6292" -> {b*c*((b^2 + c^2)*(2*a^2 + b^2 + c^2))}, 
     "X6293" -> {b*c*(a^2*(a^12*b^2 - 4*a^10*b^4 + 5*a^8*b^6 - 5*a^4*b^10 + 
          4*a^2*b^12 - b^14 + a^12*c^2 - a^10*b^2*c^2 - a^8*b^4*c^2 - 
          2*a^6*b^6*c^2 + 7*a^4*b^8*c^2 - 5*a^2*b^10*c^2 + b^12*c^2 - 
          4*a^10*c^4 - a^8*b^2*c^4 + 4*a^6*b^4*c^4 - 2*a^4*b^6*c^4 + 
          3*b^10*c^4 + 5*a^8*c^6 - 2*a^6*b^2*c^6 - 2*a^4*b^4*c^6 + 
          2*a^2*b^6*c^6 - 3*b^8*c^6 + 7*a^4*b^2*c^8 - 3*b^6*c^8 - 
          5*a^4*c^10 - 5*a^2*b^2*c^10 + 3*b^4*c^10 + 4*a^2*c^12 + b^2*c^12 - 
          c^14))}, "X6294" -> {b*c*(a^4*b^2 + a^2*b^4 + a^4*c^2 - 2*b^4*c^2 + 
         a^2*c^4 - 2*b^2*c^4 - 2*Sqrt[3]*a^2*(b^2 + c^2)*S)}, 
     "X6295" -> {b*c*(3*a^8 - 8*a^6*b^2 + 7*a^4*b^4 - 2*a^2*b^6 - 8*a^6*c^2 + 
         6*a^2*b^4*c^2 - 2*b^6*c^2 + 7*a^4*c^4 + 6*a^2*b^2*c^4 + 4*b^4*c^4 - 
         2*a^2*c^6 - 2*b^2*c^6 + 2*Sqrt[3]*a^2*(a^4 + a^2*b^2 - 2*b^4 + 
           a^2*c^2 - 2*b^2*c^2 - 2*c^4)*S)}, 
     "X6296" -> {b*c*(2*a^6 + 2*a^4*b^2 - a^2*b^4 - b^6 + 2*a^4*c^2 - 
         b^4*c^2 - a^2*c^4 - b^2*c^4 - c^6 + 2*Sqrt[3]*(b^2 + c^2)*
          (2*a^2 + b^2 + c^2)*S)}, "X6297" -> 
      {b*c*(2*a^6 + 2*a^4*b^2 - a^2*b^4 - b^6 + 2*a^4*c^2 - b^4*c^2 - 
         a^2*c^4 - b^2*c^4 - c^6 - 2*Sqrt[3]*(b^2 + c^2)*(2*a^2 + b^2 + c^2)*
          S)}, "X6298" -> {b*c*(a^8 - 5*a^6*b^2 + 8*a^4*b^4 - 5*a^2*b^6 + 
         b^8 - 5*a^6*c^2 + 10*a^4*b^2*c^2 + a^2*b^4*c^2 - 2*b^6*c^2 + 
         8*a^4*c^4 + a^2*b^2*c^4 + 2*b^4*c^4 - 5*a^2*c^6 - 2*b^2*c^6 + c^8 + 
         2*Sqrt[3]*(a^6 - b^6 + 2*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 - c^6)*S)}, 
     "X6299" -> {((3*S + 3*SW*Sqrt[3])*SA^2 - Sqrt[3]*(-S + SW*Sqrt[3])*
          (S + SW*Sqrt[3])*SA + (-SW^2 - 2*S^2 + 3*S*SW*Sqrt[3])*S)/a}, 
     "X6300" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 5*a^4*c^2 + 
         b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 + 
         Sqrt[3]*((-a^4)*b^2 + 2*a^2*b^4 - b^6 - a^4*c^2 + 4*a^2*b^2*c^2 + 
           b^4*c^2 + 2*a^2*c^4 + b^2*c^4 - c^6) + 
         2*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4 + 
           Sqrt[3]*(2*a^4 - 3*a^2*b^2 + b^4 - 3*a^2*c^2 - 2*b^2*c^2 + c^4))*
          S)}, "X6301" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 - 
         Sqrt[3]*((-a^4)*b^2 + 2*a^2*b^4 - b^6 - a^4*c^2 + 4*a^2*b^2*c^2 + 
           b^4*c^2 + 2*a^2*c^4 + b^2*c^4 - c^6) + 
         2*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4 - 
           Sqrt[3]*(2*a^4 - 3*a^2*b^2 + b^4 - 3*a^2*c^2 - 2*b^2*c^2 + c^4))*
          S)}, "X6302" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 - 
         Sqrt[3]*(a - b - c)*(a + b - c)*(a - b + c)*(a + b + c)*
          (b^2 + c^2) - 2*(4*a^4 - 5*a^2*b^2 + b^4 - 5*a^2*c^2 - 2*b^2*c^2 + 
           c^4 + Sqrt[3]*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4))*
          S)}, "X6303" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 + 
         Sqrt[3]*(a - b - c)*(a + b - c)*(a - b + c)*(a + b + c)*
          (b^2 + c^2) - 2*(4*a^4 - 5*a^2*b^2 + b^4 - 5*a^2*c^2 - 2*b^2*c^2 + 
           c^4 - Sqrt[3]*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4))*
          S)}, "X6304" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 - 
         Sqrt[3]*((-a^4)*b^2 + 2*a^2*b^4 - b^6 - a^4*c^2 + 4*a^2*b^2*c^2 + 
           b^4*c^2 + 2*a^2*c^4 + b^2*c^4 - c^6) - 
         2*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4 - 
           Sqrt[3]*(2*a^4 - 3*a^2*b^2 + b^4 - 3*a^2*c^2 - 2*b^2*c^2 + c^4))*
          S)}, "X6305" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 + 
         Sqrt[3]*((-a^4)*b^2 + 2*a^2*b^4 - b^6 - a^4*c^2 + 4*a^2*b^2*c^2 + 
           b^4*c^2 + 2*a^2*c^4 + b^2*c^4 - c^6) - 
         2*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4 + 
           Sqrt[3]*(2*a^4 - 3*a^2*b^2 + b^4 - 3*a^2*c^2 - 2*b^2*c^2 + c^4))*
          S)}, "X6306" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 + 
         Sqrt[3]*(a - b - c)*(a + b - c)*(a - b + c)*(a + b + c)*
          (b^2 + c^2) + 2*(4*a^4 - 5*a^2*b^2 + b^4 - 5*a^2*c^2 - 2*b^2*c^2 + 
           c^4 - Sqrt[3]*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4))*
          S)}, "X6307" -> {b*c*(2*a^6 - 5*a^4*b^2 + 4*a^2*b^4 - b^6 - 
         5*a^4*c^2 + b^4*c^2 + 4*a^2*c^4 + b^2*c^4 - c^6 - 
         Sqrt[3]*(a - b - c)*(a + b - c)*(a - b + c)*(a + b + c)*
          (b^2 + c^2) + 2*(4*a^4 - 5*a^2*b^2 + b^4 - 5*a^2*c^2 - 2*b^2*c^2 + 
           c^4 + Sqrt[3]*(2*a^4 - a^2*b^2 - b^4 - a^2*c^2 + 2*b^2*c^2 - c^4))*
          S)}, "X6308" -> {b*c*(a^8 + 3*a^6*b^2 - a^4*b^4 - a^2*b^6 + 
         3*a^6*c^2 - a^4*b^2*c^2 - 5*a^2*b^4*c^2 - b^6*c^2 - a^4*c^4 - 
         5*a^2*b^2*c^4 - 2*b^4*c^4 - a^2*c^6 - b^2*c^6)}, 
     "X6309" -> {b*c*(2*a^4*b^4 + 3*a^4*b^2*c^2 - b^6*c^2 + 2*a^4*c^4 - 
         2*b^4*c^4 - b^2*c^6)}, "X6310" -> 
      {b*c*(a^2*(a^4*b^4 - a^2*b^6 + b^6*c^2 + a^4*c^4 - 4*b^4*c^4 - 
          a^2*c^6 + b^2*c^6))}, "X6311" -> 
      {b*c*(2*a^6*b^2 - 5*a^4*b^4 + 4*a^2*b^6 - b^8 + 2*a^6*c^2 - 
         8*a^4*b^2*c^2 + 2*b^6*c^2 - 5*a^4*c^4 - 2*b^4*c^4 + 4*a^2*c^6 + 
         2*b^2*c^6 - c^8 - 2*(a^6 - b^6 + 2*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 - 
           c^6)*S)}, "X6312" -> {b*c*(2*a^8 - 5*a^6*b^2 + 4*a^4*b^4 - 
         a^2*b^6 - 5*a^6*c^2 - 2*a^4*b^2*c^2 + 5*a^2*b^4*c^2 - 2*b^6*c^2 + 
         4*a^4*c^4 + 5*a^2*b^2*c^4 + 4*b^4*c^4 - a^2*c^6 - 2*b^2*c^6 - 
         2*a^2*(a^4 + a^2*b^2 - 2*b^4 + a^2*c^2 - 2*b^2*c^2 - 2*c^4)*S)}, 
     "X6313" -> {b*c*(2*a^6 + 2*a^4*b^2 - a^2*b^4 - b^6 + 2*a^4*c^2 - 
         b^4*c^2 - a^2*c^4 - b^2*c^4 - c^6 + 2*(b^2 + c^2)*
          (2*a^2 + b^2 + c^2)*S)}, "X6314" -> 
      {b*c*(a^4*b^2 + a^2*b^4 + a^4*c^2 - 2*b^4*c^2 + a^2*c^4 - 2*b^2*c^4 + 
         2*a^2*(b^2 + c^2)*S)}, "X6315" -> 
      {b*c*(2*a^6*b^2 - 5*a^4*b^4 + 4*a^2*b^6 - b^8 + 2*a^6*c^2 - 
         8*a^4*b^2*c^2 + 2*b^6*c^2 - 5*a^4*c^4 - 2*b^4*c^4 + 4*a^2*c^6 + 
         2*b^2*c^6 - c^8 + 2*(a^6 - b^6 + 2*a^2*b^2*c^2 + b^4*c^2 + b^2*c^4 - 
           c^6)*S)}, "X6316" -> {b*c*(2*a^8 - 5*a^6*b^2 + 4*a^4*b^4 - 
         a^2*b^6 - 5*a^6*c^2 - 2*a^4*b^2*c^2 + 5*a^2*b^4*c^2 - 2*b^6*c^2 + 
         4*a^4*c^4 + 5*a^2*b^2*c^4 + 4*b^4*c^4 - a^2*c^6 - 2*b^2*c^6 + 
         2*a^2*(a^4 + a^2*b^2 - 2*b^4 + a^2*c^2 - 2*b^2*c^2 - 2*c^4)*S)}, 
     "X6317" -> {b*c*(2*a^6 + 2*a^4*b^2 - a^2*b^4 - b^6 + 2*a^4*c^2 - 
         b^4*c^2 - a^2*c^4 - b^2*c^4 - c^6 - 2*(b^2 + c^2)*
          (2*a^2 + b^2 + c^2)*S)}, "X6318" -> 
      {b*c*(a^4*b^2 + a^2*b^4 + a^4*c^2 - 2*b^4*c^2 + a^2*c^4 - 2*b^2*c^4 + 
         (-2*a^2*b^2 - 2*a^2*c^2)*S)}, "X6319" -> 
      {b*c*(a^4*b^2 - 2*a^2*b^4 + a^4*c^2 + b^4*c^2 - 2*a^2*c^4 + b^2*c^4 - 
         (a - b)*(a + b)*(a - c)*(a + c)*S)}, 
     "X6320" -> {b*c*(a^4*b^2 - 2*a^2*b^4 + a^4*c^2 + b^4*c^2 - 2*a^2*c^4 + 
         b^2*c^4 + (a - b)*(a + b)*(a - c)*(a + c)*S)}, 
     "X6321" -> {b*c*(a^8 - 2*a^6*b^2 + a^4*b^4 + a^2*b^6 - b^8 - 2*a^6*c^2 + 
         3*a^4*b^2*c^2 - 2*a^2*b^4*c^2 + 4*b^6*c^2 + a^4*c^4 - 
         2*a^2*b^2*c^4 - 6*b^4*c^4 + a^2*c^6 + 4*b^2*c^6 - c^8)}, 
     "X6322" -> {b*c*(4*a^8 + 2*a^6*b^2 - 8*a^4*b^4 + 2*a^6*c^2 + 
         a^4*b^2*c^2 - 8*a^2*b^4*c^2 - 4*b^6*c^2 - 8*a^4*c^4 - 
         8*a^2*b^2*c^4 + 4*b^4*c^4 - 4*b^2*c^6)}, 
     "X6323" -> {b*c*(a^2*(2*a^4 - 2*a^2*b^2 + 2*b^4 + a^2*c^2 + b^2*c^2 - 
          4*c^4)*(2*a^4 + a^2*b^2 - 4*b^4 - 2*a^2*c^2 + b^2*c^2 + 2*c^4))}, 
     "X6324" -> {b*c*(a^2*(4*a^6*b^4 - 4*a^2*b^8 + 4*a^6*b^2*c^2 + 
          6*a^4*b^4*c^2 + 4*a^2*b^6*c^2 - 8*b^8*c^2 + 4*a^6*c^4 + 
          6*a^4*b^2*c^4 + 3*a^2*b^4*c^4 + 8*b^6*c^4 + 4*a^2*b^2*c^6 + 
          8*b^4*c^6 - 4*a^2*c^8 - 8*b^2*c^8))}, 
     "X6325" -> {b*c*((2*a^6 - a^4*b^2 - a^2*b^4 + 2*b^6 + 2*a^2*b^2*c^2 - 
          2*a^2*c^4 - 2*b^2*c^4)*(2*a^6 - 2*a^2*b^4 - a^4*c^2 + 
          2*a^2*b^2*c^2 - 2*b^4*c^2 - a^2*c^4 + 2*c^6))}, 
     "X6326" -> {b*c*(a*(a^6 - 2*a^5*b - a^4*b^2 + 4*a^3*b^3 - a^2*b^4 - 
          2*a*b^5 + b^6 - 2*a^5*c + 3*a^4*b*c - a^3*b^2*c - 3*a^2*b^3*c + 
          3*a*b^4*c - a^4*c^2 - a^3*b*c^2 + 4*a^2*b^2*c^2 - a*b^3*c^2 - 
          b^4*c^2 + 4*a^3*c^3 - 3*a^2*b*c^3 - a*b^2*c^3 - a^2*c^4 + 
          3*a*b*c^4 - b^2*c^4 - 2*a*c^5 + c^6))}, 
     "X6327" -> {b*c*(b^3 + c^3 - a^3)}, "X6328" -> 
      {(b^2 - c^2)^2/(a*(a^6 - (b^2 + c^2)*a^4 + (b^4 - b^2*c^2 + c^4)*a^2 - 
          (b^2 + c^2)*(b^2 - c^2)^2))}, "X6329" -> {(6*a^2 + b^2 + c^2)/a}, 
     "X6330" -> {b*c*((a^2 + b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^6 - a^4*b^2 - a^2*b^4 + b^6 + a^2*c^4 + b^2*c^4 - 2*c^6)*
         (a^6 + a^2*b^4 - 2*b^6 - a^4*c^2 + b^4*c^2 - a^2*c^4 + c^6))}, 
     "X6331" -> {b*c*(1/(a^2*(b^2 - c^2)*SA))}, 
     "X6332" -> {b*c*(b*c*(Sec[angleB] - Sec[angleC]))}, 
     "X6333" -> {b*c*((b - c)*(b + c)*(-a^2 + b^2 + c^2)*
         ((-a^2)*b^2 + b^4 - a^2*c^2 + c^4))}, 
     "X6334" -> {b*c*(SA*(SB - SC)*((-SA)*(SB - SC)^2 + 
          a^2*(SA^2 - SB*SC)))}, "X6335" -> {b*c*(1/(a*(b - c)*SA))}, 
     "X6336" -> {b*c*(Tan[angleA]/(2*a - b - c))}, 
     "X6337" -> {b*c*((a^2 - b^2 - c^2)*(3*a^2 - b^2 - c^2))}, 
     "X6338" -> {b*c*(SA^2*(SA^2 - SB^2 - SC^2))}, 
     "X6339" -> {b*c*(1/(SA^2 - SB^2 - SC^2))}, 
     "X6340" -> {b*c*((a^2 + b^2 - 3*c^2)*(a^2 - b^2 - c^2)*
         (a^2 - 3*b^2 + c^2))}, "X6341" -> 
      {b*c*((a^2 - b^2 - c^2)^2*(a^4 + 2*a^2*b^2 + b^4 + 2*a^2*c^2 - 
          6*b^2*c^2 + c^4)*(a^8 + 4*a^6*b^2 + 6*a^4*b^4 + 4*a^2*b^6 + b^8 - 
          12*a^6*c^2 + 44*a^4*b^2*c^2 - 68*a^2*b^4*c^2 + 4*b^6*c^2 - 
          26*a^4*c^4 + 44*a^2*b^2*c^4 + 6*b^4*c^4 - 12*a^2*c^6 + 4*b^2*c^6 + 
          c^8)*(a^8 - 12*a^6*b^2 - 26*a^4*b^4 - 12*a^2*b^6 + b^8 + 
          4*a^6*c^2 + 44*a^4*b^2*c^2 + 44*a^2*b^4*c^2 + 4*b^6*c^2 + 
          6*a^4*c^4 - 68*a^2*b^2*c^4 + 6*b^4*c^4 + 4*a^2*c^6 + 4*b^2*c^6 + 
          c^8))}, "X6342" -> {b*c*((a^4 + 2*a^2*b^2 + b^4 - 6*a^2*c^2 + 
          2*b^2*c^2 + c^4)*(a^4 - 6*a^2*b^2 + b^4 + 2*a^2*c^2 + 2*b^2*c^2 + 
          c^4)*(a^8 + 4*a^6*b^2 + 6*a^4*b^4 + 4*a^2*b^6 + b^8 + 4*a^6*c^2 - 
          68*a^4*b^2*c^2 + 44*a^2*b^4*c^2 - 12*b^6*c^2 + 6*a^4*c^4 + 
          44*a^2*b^2*c^4 - 26*b^4*c^4 + 4*a^2*c^6 - 12*b^2*c^6 + c^8))}, 
     "X6343" -> {(-4*a^22 + 29*a^20*(b^2 + c^2) + (b^2 - c^2)^10*
          (b^2 + c^2) - 2*a^18*(47*b^4 + 74*b^2*c^2 + 47*c^4) + 
         a^16*(181*b^6 + 310*b^4*c^2 + 310*b^2*c^4 + 181*c^6) - 
         a^2*(b^2 - c^2)^6*(6*b^8 - 5*b^6*c^2 - 10*b^4*c^4 - 5*b^2*c^6 + 
           6*c^8) - a^14*(232*b^8 + 329*b^6*c^2 + 370*b^4*c^4 + 329*b^2*c^6 + 
           232*c^8) + a^4*(b^2 - c^2)^4*(17*b^10 - 18*b^8*c^2 - 24*b^6*c^4 - 
           24*b^4*c^6 - 18*b^2*c^8 + 17*c^10) + 
         a^12*(210*b^10 + 149*b^8*c^2 + 172*b^6*c^4 + 172*b^4*c^6 + 
           149*b^2*c^8 + 210*c^10) - a^6*(b^2 - c^2)^2*
          (36*b^12 - 53*b^10*c^2 - 20*b^8*c^4 - 25*b^6*c^6 - 20*b^4*c^8 - 
           53*b^2*c^10 + 36*c^12) - a^10*(140*b^12 - 55*b^10*c^2 + 
           16*b^8*c^4 + 14*b^6*c^6 + 16*b^4*c^8 - 55*b^2*c^10 + 140*c^12) + 
         a^8*(74*b^14 - 137*b^12*c^2 + 45*b^10*c^4 - 9*b^8*c^6 - 9*b^6*c^8 + 
           45*b^4*c^10 - 137*b^2*c^12 + 74*c^14))/a}, 
     "X6344" -> {b*c*(Sin[angleA]*Tan[angleA]*Csc[3*angleA])}, 
     "X6345" -> {1/(3*Cos[angleA] + Cos[3*angleA] + Cos[5*angleA] - 
         Cos[7*angleA] + Cos[angleB - angleC]*(3*Cos[2*angleA] - 
           Cos[6*angleA] + 1/2) + Cos[2*angleB - 2*angleC]*
          (3*Cos[angleA] + 3*Cos[3*angleA] - Cos[5*angleA]) + 
         Cos[3*angleB - 3*angleC]*(-Cos[2*angleA] + Cos[4*angleA] + 2) + 
         Cos[4*angleB - 4*angleC]*(Cos[angleA] - Cos[3*angleA]))}, 
     "X6346" -> {5*Cos[angleA] - 4*Cos[3*angleA] + 3*Cos[5*angleA] - 
        Cos[7*angleA] + Cos[angleB - angleC]*(-7*Cos[2*angleA] - 
          Cos[4*angleA] + Cos[6*angleA] + 7) + Cos[2*angleB - 2*angleC]*
         (5*Cos[angleA] - 3*Cos[3*angleA] + Cos[5*angleA]) + 
        Cos[3*angleB - 3*angleC]*(-3*Cos[2*angleA] + 5/2) + 
        Cos[4*angleB - 4*angleC]*(Cos[angleA] - 2*Cos[3*angleA])}, 
     "X6347" -> {b*c*(1 + Sin[angleB] + Sin[angleC])}, 
     "X6348" -> {b*c*(-1 + Sin[angleB] + Sin[angleC])}, 
     "X6349" -> {b*c*((a^2 - b^2 - c^2)*(a^4 + 2*a^3*(b + c) - 
          2*a*(b - c)^2*(b + c) - (b^2 - c^2)^2))}, 
     "X6350" -> {b*c*((a^2 - b^2 - c^2)*(a^4 - 2*a^3*(b + c) + 
          2*a*(b - c)^2*(b + c) - (b^2 - c^2)^2))}, 
     "X6351" -> {b*c*(a*b + a*c + S)}, "X6352" -> {b*c*(a*b + a*c - S)}, 
     "X6353" -> {b*c*((3*a^2 - b^2 - c^2)*(a^2 - b^2 + c^2)*
         (a^2 + b^2 - c^2))}, "X6354" -> 
      {b*c*((a + b - c)^2*(a - b + c)^2*(b + c)^2)}, 
     "X6355" -> {b*c*((b + c)^2*((a^2 - b^2 - c^2)/((-a + b + c)^2*
           (-a^3 - a^2*b + a*b^2 + b^3 - a^2*c + 2*a*b*c - b^2*c + a*c^2 - 
            b*c^2 + c^3))))}, "X6356" -> 
      {b*c*((a + b - c)^2*(a - b + c)^2*(b + c)^2*(a^2 - b^2 - c^2))}, 
     "X6357" -> {b*c*((a + b - c)*(a - b + c)*(2*a^4 - a^2*b^2 - b^4 - 
          a^2*c^2 + 2*b^2*c^2 - c^4))}, "X6358" -> 
      {b*c*(b*c*((b + c)^2/(-a + b + c)))}, 
     "X6359" -> {b*c*((a^4 - a^2*b^2 - a^2*b*c + b^3*c - a^2*c^2 + 
          2*b^2*c^2 + b*c^3)/(-a + b + c)^2)}, 
     "X6360" -> {b*c*(a^5*(b + c) + a^4*b*c - 2*a^3*(b^3 + c^3) + 
         a*(b - c)^2*(b + c)*(b^2 + c^2) - b*c*(b^2 - c^2)^2)}, 
     "X6361" -> {b*c*(3*a^4 + 2*a^3*(b + c) - 2*a^2*(b + c)^2 - 
         2*a*(b - c)^2*(b + c) - (b^2 - c^2)^2)}, 
     "X6364" -> {b*c*((1 + Sin[angleA])*(Sin[angleB] - Sin[angleC]))}, 
     "X6365" -> {b*c*((1 - Sin[angleA])*(Sin[angleB] - Sin[angleC]))}, 
     "X6369" -> {b*c*(Sec[angleA - angleB] - Sec[angleA - angleC])}, 
     "X6370" -> {b*c*((Sin[angleA - angleB] + Sin[angleA - angleC])*
         Sin[angleB - angleC])}, "X6374" -> 
      {b*c*(b^2*c^2*((-a^2)*b^2 - a^2*c^2 + b^2*c^2))}, 
     "X6375" -> {b*c*(a^2*(a^2*(b^2 - c^2)^2 - b^2*c^2*(b^2 + c^2)))}, 
     "X6376" -> {b*c*(b*c*(b*c - a*b - a*c))}, 
     "X6377" -> {b*c*(a^2*(b - c)^2*(b*c - a*b - a*c))}, 
     "X6378" -> {b*c*(a^2*(b + c)^2*(a*b - a*c - b*c)*(a*b - a*c + b*c))}, 
     "X6380" -> {b*c*(a^2*(2*a^4*b^4 - a^4*b^2*c^2 - a^2*b^4*c^2 - a^4*c^4 + 
          2*a^2*b^2*c^4 - b^4*c^4)*(a^4*b^4 + a^4*b^2*c^2 - 2*a^2*b^4*c^2 - 
          2*a^4*c^4 + a^2*b^2*c^4 + b^4*c^4))}, 
     "X6381" -> {b*c*(b*c*(2*b*c - a*b - a*c))}, 
     "X6382" -> {b*c*(b^2*c^2*(b*c - a*b - a*c))}, 
     "X6383" -> {b*c*(b^2*c^2*(a*b - a*c + b*c)*((-a)*b + a*c + b*c))}, 
     "X6384" -> {b*c*(b*c*(a*b - a*c + b*c)*((-a)*b + a*c + b*c))}, 
     "X6385" -> {b*c*(b^3*c^3*(a + b)*(a + c))}, 
     "X6386" -> {b*c*(b^3*c^3*(a - b)*(a - c))}, 
     "X6387" -> {b*c*(a^8 - 2*a^6*b^2 - 6*a^4*b^4 - 2*a^2*b^6 + b^8 - 
         2*a^6*c^2 + 16*a^4*b^2*c^2 + 2*a^2*b^4*c^2 - 6*a^4*c^4 + 
         2*a^2*b^2*c^4 - 2*b^4*c^4 - 2*a^2*c^6 + c^8)}, 
     "X6388" -> {b*c*((b - c)^2*(b + c)^2*(-3*a^2 + b^2 + c^2))}, 
     "X6389" -> {b*c*((a^2 - b^2 - c^2)^2*(a^4 + b^4 - 2*b^2*c^2 + c^4))}, 
     "X6390" -> {b*c*((a^2 - b^2 - c^2)*(2*a^2 - b^2 - c^2))}, 
     "X6391" -> {b*c*(a^2*(a^2 + b^2 - 3*c^2)*(a^2 - b^2 - c^2)*
         (a^2 - 3*b^2 + c^2))}, "X6392" -> 
      {b*c*(a^4 + 2*a^2*b^2 + b^4 + 2*a^2*c^2 - 6*b^2*c^2 + c^4)}, 
     "X6393" -> {b*c*((a^2 - b^2 - c^2)*(a^2*b^2 - b^4 + a^2*c^2 - c^4))}, 
     "X6394" -> {b*c*((a^2 - b^2 - c^2)^2*(a^4 + b^4 - a^2*c^2 - b^2*c^2)*
         (a^4 - a^2*b^2 - b^2*c^2 + c^4))}, 
     "X6395" -> {b*c*(a^2*(3*a^2 - 3*b^2 - 3*c^2 + 8*S))}, 
     "X6396" -> {b*c*(a^2*(3*a^2 - 3*b^2 - 3*c^2 + 2*S))}, 
     "X6397" -> {b*c*(a^2*((3*a^6 + 2*a^4*b^2 - 9*a^2*b^4 + 4*b^6 + 
           2*a^4*c^2 - 18*a^2*b^2*c^2 - 12*b^4*c^2 - 9*a^2*c^4 - 12*b^2*c^4 + 
           4*c^6) - 2*(4*a^4 - 5*a^2*b^2 - 3*b^4 - 5*a^2*c^2 - 14*b^2*c^2 - 
            3*c^4)*S))}, "X6398" -> 
      {b*c*(a^2*(3*a^2 - 3*b^2 - 3*c^2 + 4*S))}, 
     "X6399" -> {b*c*(5*a^8 - 7*a^6*b^2 + 7*a^4*b^4 - 5*a^2*b^6 - 7*a^6*c^2 - 
         2*a^4*b^2*c^2 + 5*a^2*b^4*c^2 - 4*b^6*c^2 + 7*a^4*c^4 + 
         5*a^2*b^2*c^4 + 8*b^4*c^4 - 5*a^2*c^6 - 4*b^2*c^6 - 
         4*a^2*(a^2*b^2 - b^4 + a^2*c^2 - c^4)*S)}]
