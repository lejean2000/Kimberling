(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22630,        607]
NotebookOptionsPosition[     21430,        580]
NotebookOutlinePosition[     21985,        601]
CellTagsIndexPosition[     21942,        598]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8399130150855227`*^9, 3.8399130150855227`*^9}, 
   3.839919710866042*^9, 3.8399199407660537`*^9, {3.8399201289222293`*^9, 
   3.839920152741045*^9}, {3.8399205883358803`*^9, 3.839920595085084*^9}, {
   3.83992070302919*^9, 3.8399207092031746`*^9}, {3.8416249776934814`*^9, 
   3.8416249791378546`*^9}, 3.841627116456952*^9, {3.8418034050176563`*^9, 
   3.841803420274452*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"436b7e03-1782-4754-9ece-a6aea07591c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"defined", "[", "s_", "]"}], ":=", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"\"\<ValueQ[\>\"", "<>", "s", "<>", "\"\<]\>\""}], "]"}], "||", 
     "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Head", "@", 
       RowBox[{"ToExpression", "[", "s", "]"}]}], "=!=", "Symbol"}], "||", 
     "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<Attributes[\>\"", "<>", "s", "<>", "\"\<]\>\""}], "]"}], "=!=", 
      RowBox[{"{", "}"}]}], "||", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<DownValues[\>\"", "<>", "s", "<>", "\"\<]\>\""}], "]"}], "=!=", 
      RowBox[{"{", "}"}]}], "||", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"\"\<SubValues[\>\"", "<>", "s", "<>", "\"\<]\>\""}], "]"}], "=!=", 
      RowBox[{"{", "}"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getvalue", "[", 
     RowBox[{"ass_", ",", "key_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"KeyExistsQ", "[", 
       RowBox[{"ass", ",", "key"}], "]"}], ",", 
      RowBox[{"ass", "[", "key", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Indeterminate", ",", " ", "Indeterminate", ",", " ", 
        "Indeterminate"}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KimberlingCenter", "[", 
     RowBox[{"k_", ",", " ", "XPA_", ",", " ", "XPB_", ",", " ", "XPC_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "bary", "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"bary", " ", "=", " ", 
        RowBox[{"KimberlingCenterCN", "[", "k", "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{
          FractionBox["bary", 
           RowBox[{"Total", "[", "bary", "]"}]], ",", 
          RowBox[{"{", 
           RowBox[{"XPA", ",", "XPB", ",", "XPC"}], "}"}]}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "->", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"XPB", ",", "XPC"}], "]"}]}], ",", " ", 
          RowBox[{"b", "->", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"XPA", ",", "XPC"}], "]"}]}], ",", " ", 
          RowBox[{"c", "->", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"XPA", ",", "XPB"}], "]"}]}]}], "}"}]}]}]}], "\n", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"KimberlingCenterC", "[", "k_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "ptname", "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumericQ", "[", "k", "]"}], ",", 
         RowBox[{"ptname", "=", 
          RowBox[{"\"\<X\>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}]}]}], ",", 
         RowBox[{"ptname", "=", "k"}]}], "]"}], ";", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"symmetrizeInternal", "[", 
          RowBox[{"ETCFull", "[", "ptname", "]"}], "]"}], "/.", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A", "->", "angleA"}], ",", 
            RowBox[{"B", "->", "angleB"}], ",", 
            RowBox[{"C", "->", "angleC"}]}], "}"}], "]"}]}], "]"}], ";"}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "k_", "]"}], ":=", 
    RowBox[{"evaluate", "[", 
     RowBox[{
      RowBox[{"symmetrizeInternal", "[", 
       RowBox[{"ETCFull", "[", 
        RowBox[{"\"\<X\>\"", "<>", 
         RowBox[{"ToString", "[", "k", "]"}]}], "]"}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", "->", "angleA"}], ",", 
         RowBox[{"B", "->", "angleB"}], ",", 
         RowBox[{"C", "->", "angleC"}]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getTriangleCurve", "[", 
     RowBox[{"name_", ",", 
      RowBox[{"in_", ":", "TriangleCurves"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "tmp", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"tmp", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "in", "]"}], ",", 
          RowBox[{
           RowBox[{"StringContainsQ", "[", 
            RowBox[{
             RowBox[{"ToLowerCase", "[", "#", "]"}], ",", 
             RowBox[{"ToLowerCase", "[", "name", "]"}]}], "]"}], "&"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"Print", "[", "tmp", "]"}], ";", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"in", "[", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "//", "evaluate"}], "]"}], 
       ";"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KimberlingCenterCN", "=", "X"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"XNy", "[", "k_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "k2", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NumberQ", "[", "k", "]"}], ",", 
       RowBox[{"k2", "=", 
        RowBox[{"\"\<X\>\"", "<>", 
         RowBox[{"ToString", "[", "k", "]"}]}]}], ",", 
       RowBox[{"k2", "=", "k"}]}], "]"}], ";", "\n", 
     FractionBox[
      RowBox[{"KimberlingCenterCNy", "[", "k2", "]"}], 
      RowBox[{"Total", "[", 
       RowBox[{"KimberlingCenterCNy", "[", "k2", "]"}], "]"}]]}]}], "\n", 
   "]"}]}]}], "Code",
 InitializationCell->False,
 CellLabel->"In[76]:=",ExpressionUUID->"ef28bf9e-8e85-46b6-83f1-55ec1009fe52"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ruleAbsSquare", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "x___", "]"}], "^", "2"}], " ", ":>", " ", 
      RowBox[{"x", "^", "2"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Can", " ", "also", " ", "be", " ", "just", " ", "Abs"}], "->", 
    "RealAbs"}], " ", "*)"}]}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"e6ee65e5-4303-4b7d-bc1f-e4a938bc6dcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rule69", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], "->", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9", ",", "13"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8659359365025496`*^9, 3.8659359467166414`*^9}, {
  3.877578389921321*^9, 3.877578397215644*^9}, {3.8779284662523875`*^9, 
  3.877928467254416*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"59eb944d-bbd3-4aef-a170-433086bc3bf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rulesSimplify", "=", " ", 
   RowBox[{
    RowBox[{"a", ">", "0"}], "&&", 
    RowBox[{"b", ">", "0"}], "&&", 
    RowBox[{"c", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"a", "+", "b"}], ">", "c"}], "&&", 
    RowBox[{
     RowBox[{"a", "+", "c"}], ">", "b"}], "&&", 
    RowBox[{
     RowBox[{"b", "+", "c"}], ">", "a"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883556220339327*^9, 3.883556251713106*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"8adc4980-6855-491e-857a-2e383c343b5f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"checkCurvesSymb", "[", "pt_", "]"}], ":=", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"curve", "=", 
       RowBox[{"getTriangleCurve", "[", "name", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{"curve", "/.", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y", ",", "z"}], "}"}], "->", "pt"}], "]"}]}],
           "]"}], "==", "0"}], ",", 
        RowBox[{"Print", "[", "name", "]"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"name", ",", 
       RowBox[{"Keys", "[", "TriangleCurves", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPointsOnCurve", "[", "crv_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"curve", ",", " ", "curve2", ",", " ", "out", ",", "normcoef"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"curve", "=", 
       RowBox[{
        RowBox[{"evaluate", "[", "crv", "]"}], "/.", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"curve2", "=", 
       RowBox[{"curve", "/.", "rule69"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normcoef", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"curve2", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "//", "Abs"}],
          "//", "Flatten"}], "//", "Max"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"normalize", " ", "big", " ", "numbers"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"test", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             FractionBox["curve2", "normcoef"], "/.", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}], "->", "#"}], 
              "]"}]}], "]"}], "&"}], "/@", "ETCBaryNorm"}], ",", 
         RowBox[{
          RowBox[{"#", "<", 
           SuperscriptBox["10", 
            RowBox[{"-", "12"}]]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Check", " ", "one", " ", "more", " ", 
        RowBox[{"rule", ".", " ", "The"}], " ", "strange", " ", 
        RowBox[{"Simplify", "[", "]"}], " ", "is", " ", "needed", " ", "to", 
        " ", "avoid", " ", "precision", " ", "errors", " ", "in", " ", "edge",
         " ", 
        RowBox[{"cases", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ni", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"curve", "/.", 
                  RowBox[{"Thread", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "->", 
                    RowBox[{"(", 
                    RowBox[{"KimberlingCenterCNy", "[", "ni", "]"}], ")"}]}], 
                   "]"}]}], "/.", 
                 RowBox[{"intCheckList", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}], ",", 
               "20"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ni", ",", 
             RowBox[{"Keys", "[", "test", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], "&"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"out", ",", 
         RowBox[{
          RowBox[{"numsortexpr", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "<>", 
          "\"\<(\>\"", "<>", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "<>", "\"\<)\>\""}], 
         "&"}], ",", "out"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPointsOnCurveNamed", "[", "crvname_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "srch", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"srch", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"TriangleCurves", "//", "Keys"}], ",", 
         RowBox[{
          RowBox[{"StringContainsQ", "[", 
           RowBox[{"#", ",", "crvname"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "srch", "]"}], ">", "1"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<Which curve?\>\"", "]"}], ";", 
         RowBox[{"Print", "[", "srch", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "srch", "]"}], "==", "0"}], ",", 
        RowBox[{"Print", "[", "\"\<No such curve\>\"", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "srch", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"checkPointsOnCurve", "[", 
        RowBox[{"TriangleCurves", "[", 
         RowBox[{"First", "[", "srch", "]"}], "]"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"checkPointOnCurveNum", "[", 
    RowBox[{"crv_", ",", "pt_", ",", 
     RowBox[{"rules_", ":", "intCheckList"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"curve2", ",", "normcoef", ",", "test"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"curve2", "=", 
          RowBox[{"crv", "/.", "\[VeryThinSpace]", "r"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"normcoef", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"CoefficientList", "[", 
              RowBox[{"curve2", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "]"}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"test", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{
            FractionBox["curve2", "normcoef"], "/.", "\[VeryThinSpace]", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Rule]", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"pt", "/.", "r"}], ",", "35"}], "]"}]}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"test", ">", 
            FractionBox["1", 
             SuperscriptBox["10", "15"]]}], ",", 
           RowBox[{"Return", "[", 
            RowBox[{"False", ",", "Module"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "rules"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 Background->RGBColor[0.94, 0.88, 0.94],
 CellLabel->"In[87]:=",ExpressionUUID->"e4c48e3c-0e37-45b4-aa3b-950f31b20c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkPointinETC2", "[", "pt_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ptnum", ",", "set", ",", "out", ",", " ", "cmplx"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ptnum", "=", 
       RowBox[{"intnumericnorm", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"pt", "//", "evaluate"}], ")"}], "/.", "rule69"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{"ptnum", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Im", "[", "#", "]"}], "==", "0"}], "&"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"set", "=", 
         RowBox[{"Keys", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"ETCBaryNorm", ",", 
            RowBox[{
             RowBox[{"#", "==", "ptnum"}], "&"}]}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cmplx", "=", 
          RowBox[{"Keys", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"ETCBaryNorm", ",", 
             RowBox[{
              RowBox[{"AnyTrue", "[", 
               RowBox[{"#", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "!=", "0"}], "&"}]}], "]"}], 
              "&"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"set", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"cmplx", ",", 
            RowBox[{
             RowBox[{"coincide", "[", 
              RowBox[{
               RowBox[{"ETCBaryNorm", "[", "#", "]"}], ",", "ptnum"}], "]"}], 
             "&"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", ";", "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "set", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AllTrue", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"coincideNorm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"KimberlingCenterCNy", "[", "k", "]"}], "/.", 
                    "#"}], ",", 
                    RowBox[{"pt", "/.", "#"}]}], "]"}], "&"}], ",", 
                  "intCheckList"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"#", "||", 
                  RowBox[{"Not", "[", 
                   RowBox[{"BooleanQ", "[", "#", "]"}], "]"}]}], "&"}]}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"out", ",", "k"}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "set"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "out", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 Background->RGBColor[0.9, 1, 1],
 CellLabel->"In[91]:=",ExpressionUUID->"2facbe59-1771-421e-af04-203366bb1353"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteFile", "[", "\"\<KimberlingPoints.m\>\"", "]"}], ";", 
  RowBox[{"Save", "[", 
   RowBox[{"\"\<KimberlingPoints.m\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "defined", ",", "KimberlingCenter", ",", " ", "KimberlingCenterC", ",", 
      " ", "KimberlingCenterCN", ",", " ", "getTriangleCurve", ",", 
      "getvalue", ",", "ruleAbsSquare", ",", " ", "rule69", ",", " ", 
      "checkCurvesSymb", ",", "checkPointinETC2", ",", "rulesSimplify", ",", 
      "checkPointsOnCurve", ",", "X", ",", "checkPointOnCurveNum", ",", 
      "checkPointsOnCurveNamed", ",", "XNy"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"58364175-8417-42fc-be84-aa24791f6f0c"]
},
Evaluator->"New Kernel",
WindowSize->{1105.2, 615.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d28a54b2-181c-47cf-a4e8-d4f2c6cc05a1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 661, 11, 26, "Input",ExpressionUUID->"436b7e03-1782-4754-9ece-a6aea07591c6"],
Cell[1222, 33, 5754, 162, 596, "Code",ExpressionUUID->"ef28bf9e-8e85-46b6-83f1-55ec1009fe52",
 InitializationCell->False],
Cell[6979, 197, 468, 13, 26, "Input",ExpressionUUID->"e6ee65e5-4303-4b7d-bc1f-e4a938bc6dcb"],
Cell[7450, 212, 508, 12, 25, "Input",ExpressionUUID->"59eb944d-bbd3-4aef-a170-433086bc3bf3"],
Cell[7961, 226, 526, 14, 26, "Input",ExpressionUUID->"8adc4980-6855-491e-857a-2e383c343b5f"],
Cell[8490, 242, 8593, 227, 671, "Input",ExpressionUUID->"e4c48e3c-0e37-45b4-aa3b-950f31b20c4e"],
Cell[17086, 471, 3616, 92, 383, "Input",ExpressionUUID->"2facbe59-1771-421e-af04-203366bb1353"],
Cell[20705, 565, 721, 13, 60, "Input",ExpressionUUID->"58364175-8417-42fc-be84-aa24791f6f0c"]
}
]
*)

